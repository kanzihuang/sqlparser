// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func markBindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const ASSIGNMENT_OPT = 57497
const SHIFT_LEFT = 57498
const SHIFT_RIGHT = 57499
const DIV = 57500
const MOD = 57501
const UNARY = 57502
const COLLATE = 57503
const BINARY = 57504
const UNDERSCORE_ARMSCII8 = 57505
const UNDERSCORE_ASCII = 57506
const UNDERSCORE_BIG5 = 57507
const UNDERSCORE_BINARY = 57508
const UNDERSCORE_CP1250 = 57509
const UNDERSCORE_CP1251 = 57510
const UNDERSCORE_CP1256 = 57511
const UNDERSCORE_CP1257 = 57512
const UNDERSCORE_CP850 = 57513
const UNDERSCORE_CP852 = 57514
const UNDERSCORE_CP866 = 57515
const UNDERSCORE_CP932 = 57516
const UNDERSCORE_DEC8 = 57517
const UNDERSCORE_EUCJPMS = 57518
const UNDERSCORE_EUCKR = 57519
const UNDERSCORE_GB18030 = 57520
const UNDERSCORE_GB2312 = 57521
const UNDERSCORE_GBK = 57522
const UNDERSCORE_GEOSTD8 = 57523
const UNDERSCORE_GREEK = 57524
const UNDERSCORE_HEBREW = 57525
const UNDERSCORE_HP8 = 57526
const UNDERSCORE_KEYBCS2 = 57527
const UNDERSCORE_KOI8R = 57528
const UNDERSCORE_KOI8U = 57529
const UNDERSCORE_LATIN1 = 57530
const UNDERSCORE_LATIN2 = 57531
const UNDERSCORE_LATIN5 = 57532
const UNDERSCORE_LATIN7 = 57533
const UNDERSCORE_MACCE = 57534
const UNDERSCORE_MACROMAN = 57535
const UNDERSCORE_SJIS = 57536
const UNDERSCORE_SWE7 = 57537
const UNDERSCORE_TIS620 = 57538
const UNDERSCORE_UCS2 = 57539
const UNDERSCORE_UJIS = 57540
const UNDERSCORE_UTF16 = 57541
const UNDERSCORE_UTF16LE = 57542
const UNDERSCORE_UTF32 = 57543
const UNDERSCORE_UTF8 = 57544
const UNDERSCORE_UTF8MB4 = 57545
const UNDERSCORE_UTF8MB3 = 57546
const INTERVAL = 57547
const WINDOW_EXPR = 57548
const JSON_EXTRACT_OP = 57549
const JSON_UNQUOTE_EXTRACT_OP = 57550
const CREATE = 57551
const ALTER = 57552
const DROP = 57553
const RENAME = 57554
const ANALYZE = 57555
const ADD = 57556
const FLUSH = 57557
const CHANGE = 57558
const MODIFY = 57559
const DEALLOCATE = 57560
const REVERT = 57561
const QUERIES = 57562
const SCHEMA = 57563
const TABLE = 57564
const INDEX = 57565
const VIEW = 57566
const TO = 57567
const IGNORE = 57568
const IF = 57569
const PRIMARY = 57570
const COLUMN = 57571
const SPATIAL = 57572
const FULLTEXT = 57573
const KEY_BLOCK_SIZE = 57574
const CHECK = 57575
const INDEXES = 57576
const ACTION = 57577
const CASCADE = 57578
const CONSTRAINT = 57579
const FOREIGN = 57580
const NO = 57581
const REFERENCES = 57582
const RESTRICT = 57583
const SHOW = 57584
const DESCRIBE = 57585
const EXPLAIN = 57586
const DATE = 57587
const ESCAPE = 57588
const REPAIR = 57589
const OPTIMIZE = 57590
const TRUNCATE = 57591
const COALESCE = 57592
const EXCHANGE = 57593
const REBUILD = 57594
const PARTITIONING = 57595
const REMOVE = 57596
const PREPARE = 57597
const EXECUTE = 57598
const MAXVALUE = 57599
const PARTITION = 57600
const REORGANIZE = 57601
const LESS = 57602
const THAN = 57603
const PROCEDURE = 57604
const TRIGGER = 57605
const VINDEX = 57606
const VINDEXES = 57607
const DIRECTORY = 57608
const NAME = 57609
const UPGRADE = 57610
const STATUS = 57611
const VARIABLES = 57612
const WARNINGS = 57613
const CASCADED = 57614
const DEFINER = 57615
const OPTION = 57616
const SQL = 57617
const UNDEFINED = 57618
const SEQUENCE = 57619
const MERGE = 57620
const TEMPORARY = 57621
const TEMPTABLE = 57622
const INVOKER = 57623
const SECURITY = 57624
const FIRST = 57625
const AFTER = 57626
const LAST = 57627
const VITESS_MIGRATION = 57628
const CANCEL = 57629
const RETRY = 57630
const LAUNCH = 57631
const COMPLETE = 57632
const CLEANUP = 57633
const THROTTLE = 57634
const UNTHROTTLE = 57635
const EXPIRE = 57636
const RATIO = 57637
const VITESS_THROTTLER = 57638
const BEGIN = 57639
const START = 57640
const TRANSACTION = 57641
const COMMIT = 57642
const ROLLBACK = 57643
const SAVEPOINT = 57644
const RELEASE = 57645
const WORK = 57646
const CONSISTENT = 57647
const SNAPSHOT = 57648
const BIT = 57649
const TINYINT = 57650
const SMALLINT = 57651
const MEDIUMINT = 57652
const INT = 57653
const INTEGER = 57654
const BIGINT = 57655
const INTNUM = 57656
const REAL = 57657
const DOUBLE = 57658
const FLOAT_TYPE = 57659
const FLOAT4_TYPE = 57660
const FLOAT8_TYPE = 57661
const DECIMAL_TYPE = 57662
const NUMERIC = 57663
const TIME = 57664
const TIMESTAMP = 57665
const DATETIME = 57666
const YEAR = 57667
const CHAR = 57668
const VARCHAR = 57669
const BOOL = 57670
const CHARACTER = 57671
const VARBINARY = 57672
const NCHAR = 57673
const TEXT = 57674
const TINYTEXT = 57675
const MEDIUMTEXT = 57676
const LONGTEXT = 57677
const BLOB = 57678
const TINYBLOB = 57679
const MEDIUMBLOB = 57680
const LONGBLOB = 57681
const JSON = 57682
const JSON_SCHEMA_VALID = 57683
const JSON_SCHEMA_VALIDATION_REPORT = 57684
const ENUM = 57685
const GEOMETRY = 57686
const POINT = 57687
const LINESTRING = 57688
const POLYGON = 57689
const GEOMCOLLECTION = 57690
const GEOMETRYCOLLECTION = 57691
const MULTIPOINT = 57692
const MULTILINESTRING = 57693
const MULTIPOLYGON = 57694
const ASCII = 57695
const UNICODE = 57696
const NULLX = 57697
const AUTO_INCREMENT = 57698
const APPROXNUM = 57699
const SIGNED = 57700
const UNSIGNED = 57701
const ZEROFILL = 57702
const PURGE = 57703
const BEFORE = 57704
const CODE = 57705
const COLLATION = 57706
const COLUMNS = 57707
const DATABASES = 57708
const ENGINES = 57709
const EVENT = 57710
const EXTENDED = 57711
const FIELDS = 57712
const FULL = 57713
const FUNCTION = 57714
const GTID_EXECUTED = 57715
const KEYSPACES = 57716
const OPEN = 57717
const PLUGINS = 57718
const PRIVILEGES = 57719
const PROCESSLIST = 57720
const SCHEMAS = 57721
const TABLES = 57722
const TRIGGERS = 57723
const USER = 57724
const VGTID_EXECUTED = 57725
const VITESS_KEYSPACES = 57726
const VITESS_METADATA = 57727
const VITESS_MIGRATIONS = 57728
const VITESS_REPLICATION_STATUS = 57729
const VITESS_SHARDS = 57730
const VITESS_TABLETS = 57731
const VITESS_TARGET = 57732
const VSCHEMA = 57733
const VITESS_THROTTLED_APPS = 57734
const NAMES = 57735
const GLOBAL = 57736
const SESSION = 57737
const ISOLATION = 57738
const LEVEL = 57739
const READ = 57740
const WRITE = 57741
const ONLY = 57742
const REPEATABLE = 57743
const COMMITTED = 57744
const UNCOMMITTED = 57745
const SERIALIZABLE = 57746
const ADDDATE = 57747
const CURRENT_TIMESTAMP = 57748
const DATABASE = 57749
const CURRENT_DATE = 57750
const CURDATE = 57751
const DATE_ADD = 57752
const DATE_SUB = 57753
const NOW = 57754
const SUBDATE = 57755
const CURTIME = 57756
const CURRENT_TIME = 57757
const LOCALTIME = 57758
const LOCALTIMESTAMP = 57759
const CURRENT_USER = 57760
const UTC_DATE = 57761
const UTC_TIME = 57762
const UTC_TIMESTAMP = 57763
const SYSDATE = 57764
const DAY = 57765
const DAY_HOUR = 57766
const DAY_MICROSECOND = 57767
const DAY_MINUTE = 57768
const DAY_SECOND = 57769
const HOUR = 57770
const HOUR_MICROSECOND = 57771
const HOUR_MINUTE = 57772
const HOUR_SECOND = 57773
const MICROSECOND = 57774
const MINUTE = 57775
const MINUTE_MICROSECOND = 57776
const MINUTE_SECOND = 57777
const MONTH = 57778
const QUARTER = 57779
const SECOND = 57780
const SECOND_MICROSECOND = 57781
const YEAR_MONTH = 57782
const WEEK = 57783
const REPLACE = 57784
const CONVERT = 57785
const CAST = 57786
const SUBSTR = 57787
const SUBSTRING = 57788
const SEPARATOR = 57789
const TIMESTAMPADD = 57790
const TIMESTAMPDIFF = 57791
const WEIGHT_STRING = 57792
const LTRIM = 57793
const RTRIM = 57794
const TRIM = 57795
const JSON_ARRAY = 57796
const JSON_OBJECT = 57797
const JSON_QUOTE = 57798
const JSON_DEPTH = 57799
const JSON_TYPE = 57800
const JSON_LENGTH = 57801
const JSON_VALID = 57802
const JSON_ARRAY_APPEND = 57803
const JSON_ARRAY_INSERT = 57804
const JSON_INSERT = 57805
const JSON_MERGE = 57806
const JSON_MERGE_PATCH = 57807
const JSON_MERGE_PRESERVE = 57808
const JSON_REMOVE = 57809
const JSON_REPLACE = 57810
const JSON_SET = 57811
const JSON_UNQUOTE = 57812
const COUNT = 57813
const AVG = 57814
const MAX = 57815
const MIN = 57816
const SUM = 57817
const GROUP_CONCAT = 57818
const BIT_AND = 57819
const BIT_OR = 57820
const BIT_XOR = 57821
const STD = 57822
const STDDEV = 57823
const STDDEV_POP = 57824
const STDDEV_SAMP = 57825
const VAR_POP = 57826
const VAR_SAMP = 57827
const VARIANCE = 57828
const REGEXP_INSTR = 57829
const REGEXP_LIKE = 57830
const REGEXP_REPLACE = 57831
const REGEXP_SUBSTR = 57832
const ExtractValue = 57833
const UpdateXML = 57834
const GET_LOCK = 57835
const RELEASE_LOCK = 57836
const RELEASE_ALL_LOCKS = 57837
const IS_FREE_LOCK = 57838
const IS_USED_LOCK = 57839
const LOCATE = 57840
const POSITION = 57841
const ST_GeometryCollectionFromText = 57842
const ST_GeometryFromText = 57843
const ST_LineStringFromText = 57844
const ST_MultiLineStringFromText = 57845
const ST_MultiPointFromText = 57846
const ST_MultiPolygonFromText = 57847
const ST_PointFromText = 57848
const ST_PolygonFromText = 57849
const ST_GeometryCollectionFromWKB = 57850
const ST_GeometryFromWKB = 57851
const ST_LineStringFromWKB = 57852
const ST_MultiLineStringFromWKB = 57853
const ST_MultiPointFromWKB = 57854
const ST_MultiPolygonFromWKB = 57855
const ST_PointFromWKB = 57856
const ST_PolygonFromWKB = 57857
const ST_AsBinary = 57858
const ST_AsText = 57859
const ST_Dimension = 57860
const ST_Envelope = 57861
const ST_IsSimple = 57862
const ST_IsEmpty = 57863
const ST_GeometryType = 57864
const ST_X = 57865
const ST_Y = 57866
const ST_Latitude = 57867
const ST_Longitude = 57868
const ST_EndPoint = 57869
const ST_IsClosed = 57870
const ST_Length = 57871
const ST_NumPoints = 57872
const ST_StartPoint = 57873
const ST_PointN = 57874
const ST_Area = 57875
const ST_Centroid = 57876
const ST_ExteriorRing = 57877
const ST_InteriorRingN = 57878
const ST_NumInteriorRings = 57879
const ST_NumGeometries = 57880
const ST_GeometryN = 57881
const ST_LongFromGeoHash = 57882
const ST_PointFromGeoHash = 57883
const ST_LatFromGeoHash = 57884
const ST_GeoHash = 57885
const ST_AsGeoJSON = 57886
const ST_GeomFromGeoJSON = 57887
const MATCH = 57888
const AGAINST = 57889
const BOOLEAN = 57890
const LANGUAGE = 57891
const WITH = 57892
const QUERY = 57893
const EXPANSION = 57894
const WITHOUT = 57895
const VALIDATION = 57896
const UNUSED = 57897
const ARRAY = 57898
const BYTE = 57899
const CUME_DIST = 57900
const DESCRIPTION = 57901
const DENSE_RANK = 57902
const EMPTY = 57903
const EXCEPT = 57904
const FIRST_VALUE = 57905
const GROUPING = 57906
const GROUPS = 57907
const JSON_TABLE = 57908
const LAG = 57909
const LAST_VALUE = 57910
const LATERAL = 57911
const LEAD = 57912
const NTH_VALUE = 57913
const NTILE = 57914
const OF = 57915
const OVER = 57916
const PERCENT_RANK = 57917
const RANK = 57918
const RECURSIVE = 57919
const ROW_NUMBER = 57920
const SYSTEM = 57921
const WINDOW = 57922
const ACTIVE = 57923
const ADMIN = 57924
const AUTOEXTEND_SIZE = 57925
const BUCKETS = 57926
const CLONE = 57927
const COLUMN_FORMAT = 57928
const COMPONENT = 57929
const DEFINITION = 57930
const ENFORCED = 57931
const ENGINE_ATTRIBUTE = 57932
const EXCLUDE = 57933
const FOLLOWING = 57934
const GET_MASTER_PUBLIC_KEY = 57935
const HISTOGRAM = 57936
const HISTORY = 57937
const INACTIVE = 57938
const INVISIBLE = 57939
const LOCKED = 57940
const MASTER_COMPRESSION_ALGORITHMS = 57941
const MASTER_PUBLIC_KEY_PATH = 57942
const MASTER_TLS_CIPHERSUITES = 57943
const MASTER_ZSTD_COMPRESSION_LEVEL = 57944
const NESTED = 57945
const NETWORK_NAMESPACE = 57946
const NOWAIT = 57947
const NULLS = 57948
const OJ = 57949
const OLD = 57950
const OPTIONAL = 57951
const ORDINALITY = 57952
const ORGANIZATION = 57953
const OTHERS = 57954
const PARTIAL = 57955
const PATH = 57956
const PERSIST = 57957
const PERSIST_ONLY = 57958
const PRECEDING = 57959
const PRIVILEGE_CHECKS_USER = 57960
const PROCESS = 57961
const RANDOM = 57962
const REFERENCE = 57963
const REQUIRE_ROW_FORMAT = 57964
const RESOURCE = 57965
const RESPECT = 57966
const RESTART = 57967
const RETAIN = 57968
const REUSE = 57969
const ROLE = 57970
const SECONDARY = 57971
const SECONDARY_ENGINE = 57972
const SECONDARY_ENGINE_ATTRIBUTE = 57973
const SECONDARY_LOAD = 57974
const SECONDARY_UNLOAD = 57975
const SIMPLE = 57976
const SKIP = 57977
const SRID = 57978
const THREAD_PRIORITY = 57979
const TIES = 57980
const UNBOUNDED = 57981
const VCPU = 57982
const VISIBLE = 57983
const RETURNING = 57984
const FORMAT_BYTES = 57985
const FORMAT_PICO_TIME = 57986
const PS_CURRENT_THREAD_ID = 57987
const PS_THREAD_ID = 57988
const GTID_SUBSET = 57989
const GTID_SUBTRACT = 57990
const WAIT_FOR_EXECUTED_GTID_SET = 57991
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57992
const FORMAT = 57993
const TREE = 57994
const VITESS = 57995
const TRADITIONAL = 57996
const VTEXPLAIN = 57997
const VEXPLAIN = 57998
const PLAN = 57999
const LOCAL = 58000
const LOW_PRIORITY = 58001
const NO_WRITE_TO_BINLOG = 58002
const LOGS = 58003
const ERROR = 58004
const GENERAL = 58005
const HOSTS = 58006
const OPTIMIZER_COSTS = 58007
const USER_RESOURCES = 58008
const SLOW = 58009
const CHANNEL = 58010
const RELAY = 58011
const EXPORT = 58012
const CURRENT = 58013
const ROW = 58014
const ROWS = 58015
const AVG_ROW_LENGTH = 58016
const CONNECTION = 58017
const CHECKSUM = 58018
const DELAY_KEY_WRITE = 58019
const ENCRYPTION = 58020
const ENGINE = 58021
const INSERT_METHOD = 58022
const MAX_ROWS = 58023
const MIN_ROWS = 58024
const PACK_KEYS = 58025
const PASSWORD = 58026
const FIXED = 58027
const DYNAMIC = 58028
const COMPRESSED = 58029
const REDUNDANT = 58030
const COMPACT = 58031
const ROW_FORMAT = 58032
const STATS_AUTO_RECALC = 58033
const STATS_PERSISTENT = 58034
const STATS_SAMPLE_PAGES = 58035
const STORAGE = 58036
const MEMORY = 58037
const DISK = 58038
const PARTITIONS = 58039
const LINEAR = 58040
const RANGE = 58041
const LIST = 58042
const SUBPARTITION = 58043
const SUBPARTITIONS = 58044
const HASH = 58045

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"ASSIGNMENT_OPT",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"QUERIES",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"VITESS_THROTTLER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"FLOAT4_TYPE",
	"FLOAT8_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"PURGE",
	"BEFORE",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"ADDDATE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURDATE",
	"DATE_ADD",
	"DATE_SUB",
	"NOW",
	"SUBDATE",
	"CURTIME",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"SYSDATE",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"ST_GeometryCollectionFromText",
	"ST_GeometryFromText",
	"ST_LineStringFromText",
	"ST_MultiLineStringFromText",
	"ST_MultiPointFromText",
	"ST_MultiPolygonFromText",
	"ST_PointFromText",
	"ST_PolygonFromText",
	"ST_GeometryCollectionFromWKB",
	"ST_GeometryFromWKB",
	"ST_LineStringFromWKB",
	"ST_MultiLineStringFromWKB",
	"ST_MultiPointFromWKB",
	"ST_MultiPolygonFromWKB",
	"ST_PointFromWKB",
	"ST_PolygonFromWKB",
	"ST_AsBinary",
	"ST_AsText",
	"ST_Dimension",
	"ST_Envelope",
	"ST_IsSimple",
	"ST_IsEmpty",
	"ST_GeometryType",
	"ST_X",
	"ST_Y",
	"ST_Latitude",
	"ST_Longitude",
	"ST_EndPoint",
	"ST_IsClosed",
	"ST_Length",
	"ST_NumPoints",
	"ST_StartPoint",
	"ST_PointN",
	"ST_Area",
	"ST_Centroid",
	"ST_ExteriorRing",
	"ST_InteriorRingN",
	"ST_NumInteriorRings",
	"ST_NumGeometries",
	"ST_GeometryN",
	"ST_LongFromGeoHash",
	"ST_PointFromGeoHash",
	"ST_LatFromGeoHash",
	"ST_GeoHash",
	"ST_AsGeoJSON",
	"ST_GeomFromGeoJSON",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"VEXPLAIN",
	"PLAN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 50,
	14, 50,
	-2, 39,
	-1, 51,
	1, 158,
	721, 158,
	-2, 166,
	-1, 52,
	135, 166,
	177, 166,
	346, 166,
	-2, 527,
	-1, 60,
	36, 776,
	240, 776,
	251, 776,
	286, 790,
	287, 790,
	-2, 778,
	-1, 65,
	242, 814,
	-2, 812,
	-1, 120,
	239, 1565,
	-2, 132,
	-1, 122,
	1, 159,
	721, 159,
	-2, 166,
	-1, 133,
	136, 412,
	245, 412,
	-2, 516,
	-1, 152,
	135, 166,
	177, 166,
	346, 166,
	-2, 536,
	-1, 720,
	163, 40,
	-2, 44,
	-1, 925,
	87, 1582,
	-2, 1436,
	-1, 926,
	87, 1583,
	222, 1587,
	-2, 1437,
	-1, 927,
	222, 1586,
	-2, 41,
	-1, 1007,
	60, 888,
	-2, 903,
	-1, 1094,
	250, 42,
	255, 42,
	-2, 423,
	-1, 1179,
	1, 584,
	721, 584,
	-2, 166,
	-1, 1482,
	222, 1587,
	-2, 1437,
	-1, 1689,
	60, 889,
	-2, 908,
	-1, 1690,
	60, 890,
	-2, 909,
	-1, 1741,
	135, 166,
	177, 166,
	346, 166,
	-2, 462,
	-1, 1822,
	136, 412,
	245, 412,
	-2, 516,
	-1, 1831,
	250, 43,
	255, 43,
	-2, 424,
	-1, 2247,
	222, 1591,
	-2, 1585,
	-1, 2248,
	222, 1587,
	-2, 1583,
	-1, 2350,
	135, 166,
	177, 166,
	346, 166,
	-2, 463,
	-1, 2357,
	26, 187,
	-2, 189,
	-1, 2809,
	78, 97,
	88, 97,
	-2, 967,
	-1, 2878,
	696, 700,
	-2, 674,
	-1, 3085,
	50, 1533,
	-2, 1527,
	-1, 3896,
	696, 700,
	-2, 688,
	-1, 3983,
	90, 632,
	95, 632,
	105, 632,
	179, 632,
	180, 632,
	181, 632,
	182, 632,
	183, 632,
	184, 632,
	185, 632,
	186, 632,
	187, 632,
	188, 632,
	189, 632,
	190, 632,
	191, 632,
	192, 632,
	193, 632,
	194, 632,
	195, 632,
	196, 632,
	197, 632,
	198, 632,
	199, 632,
	200, 632,
	201, 632,
	202, 632,
	203, 632,
	204, 632,
	205, 632,
	206, 632,
	207, 632,
	208, 632,
	209, 632,
	210, 632,
	211, 632,
	212, 632,
	213, 632,
	214, 632,
	215, 632,
	216, 632,
	217, 632,
	218, 632,
	219, 632,
	220, 632,
	-2, 1950,
}

const yyPrivate = 57344

const yyLast = 54914

var yyAct = [...]int{
	941, 936, 3560, 85, 2074, 3561, 4058, 3562, 4071, 3877,
	929, 4025, 1246, 3235, 3962, 928, 2062, 4026, 2347, 1950,
	3950, 3981, 3861, 3195, 3137, 3363, 3144, 1244, 3200, 2278,
	3786, 3512, 3186, 3197, 3196, 3194, 3199, 1744, 3198, 3859,
	2005, 3098, 2704, 5, 3499, 2280, 3038, 3215, 3152, 2421,
	724, 3214, 3102, 3099, 3599, 3408, 3402, 2941, 718, 885,
	884, 2318, 889, 751, 3217, 41, 2769, 2384, 3927, 3394,
	2843, 719, 2923, 3241, 2875, 1704, 1800, 2389, 3428, 2409,
	2844, 2321, 1056, 2302, 1005, 2845, 85, 2335, 2452, 1024,
	1126, 2794, 161, 1847, 1002, 2322, 3096, 42, 2775, 40,
	1691, 2761, 2745, 2243, 2199, 1005, 2058, 2231, 2323, 2198,
	2097, 2915, 2430, 2408, 2310, 2469, 147, 3086, 1829, 2013,
	1066, 2391, 2836, 1089, 1084, 1733, 2811, 1713, 2325, 1671,
	2782, 102, 1494, 2101, 2298, 98, 103, 734, 2033, 1421,
	1406, 1946, 1836, 1060, 1063, 1092, 1004, 1928, 1008, 3101,
	1102, 1095, 2380, 2406, 1064, 1090, 1091, 2381, 1732, 3594,
	1718, 1041, 1043, 2149, 3849, 1014, 2743, 1026, 721, 1478,
	1023, 2303, 729, 1011, 2244, 2107, 83, 105, 2004, 1235,
	1957, 125, 97, 1010, 1795, 1009, 1454, 165, 123, 1000,
	124, 1175, 130, 1821, 131, 1036, 886, 91, 1012, 722,
	728, 1242, 96, 4059, 3500, 104, 3183, 2423, 82, 3912,
	2866, 1221, 2467, 1629, 2423, 2424, 2425, 3492, 1498, 4008,
	1031, 1035, 2898, 2897, 2931, 2932, 3908, 2020, 3907, 2275,
	2276, 709, 654, 1017, 2019, 3913, 1913, 2018, 2017, 126,
	1128, 1057, 2016, 2015, 3565, 1131, 132, 1988, 1191, 1667,
	712, 2514, 713, 1145, 1146, 1147, 2741, 1150, 1151, 1152,
	1153, 4002, 3082, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1105, 1018, 2, 93, 1438, 1106, 1051, 1050, 1001, 3455,
	694, 2456, 1003, 3886, 1192, 4029, 2868, 1417, 1081, 1132,
	1135, 1136, 1025, 710, 1080, 4081, 2771, 1139, 1073, 3042,
	126, 1079, 3205, 1078, 3565, 688, 4064, 3205, 1068, 4012,
	4024, 694, 4010, 714, 4049, 3202, 109, 110, 111, 3908,
	114, 3564, 3368, 120, 93, 2455, 189, 1148, 3367, 648,
	890, 4063, 2891, 93, 4011, 188, 3862, 4009, 2705, 2025,
	3260, 707, 708, 2036, 93, 3782, 2888, 1082, 3781, 1130,
	1129, 996, 997, 998, 999, 688, 4039, 1007, 3203, 127,
	3792, 1698, 4006, 3203, 1049, 1053, 888, 3505, 126, 3524,
	3506, 3791, 170, 2523, 1408, 3513, 3951, 3959, 945, 946,
	947, 2449, 2067, 84, 3209, 1038, 1039, 3986, 84, 3209,
	3280, 3564, 945, 946, 947, 1810, 84, 2742, 685, 3134,
	3135, 3133, 3523, 1049, 1053, 888, 3991, 2785, 688, 1435,
	2820, 1436, 1437, 2819, 2454, 2825, 2821, 1072, 2342, 2343,
	1074, 1997, 1998, 1734, 3989, 1735, 2930, 3963, 167, 2400,
	2520, 168, 2786, 3995, 3996, 2341, 2914, 3612, 2521, 1211,
	994, 3154, 3155, 1216, 1217, 993, 670, 688, 3990, 1239,
	3878, 1199, 2394, 1953, 187, 688, 1200, 1212, 1199, 668,
	3891, 93, 1077, 1200, 1184, 1185, 93, 1205, 2832, 2360,
	2359, 1198, 3268, 1197, 93, 688, 3237, 1422, 2778, 2779,
	2277, 688, 84, 3266, 1228, 86, 1230, 2512, 1174, 702,
	688, 2942, 1730, 2000, 2976, 1996, 1187, 3206, 2306, 665,
	1418, 706, 3206, 3967, 700, 3242, 1675, 2916, 680, 3833,
	2431, 3834, 1455, 2876, 2901, 2470, 689, 3967, 2306, 1077,
	1075, 1069, 3230, 675, 1227, 1229, 1407, 4030, 1071, 1070,
	3231, 2475, 1149, 678, 3257, 1903, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1464, 1463, 1465, 1466, 1218, 4031, 4061,
	3153, 1213, 1232, 2515, 2516, 2518, 2517, 1219, 1929, 1180,
	93, 1206, 3156, 1237, 1238, 2474, 689, 171, 3238, 2490,
	1220, 2491, 2918, 2492, 3494, 2944, 177, 1075, 3493, 1904,
	2493, 1905, 3766, 3405, 3239, 1432, 2476, 1214, 1215, 1042,
	1954, 2905, 2906, 2482, 2478, 2480, 2481, 2479, 2483, 2484,
	2393, 655, 1155, 657, 671, 1154, 691, 2473, 690, 661,
	2472, 659, 663, 672, 664, 1678, 658, 2434, 669, 689,
	3569, 660, 673, 674, 677, 681, 682, 683, 679, 676,
	1225, 667, 692, 2319, 1226, 1085, 1086, 4003, 1124, 1086,
	1123, 1122, 1121, 1120, 1231, 2954, 2953, 2952, 1076, 4082,
	2946, 1119, 2950, 1118, 2945, 1117, 2943, 1112, 689, 2977,
	1814, 2948, 1125, 3156, 4036, 1061, 689, 2869, 1061, 1224,
	2947, 1097, 1061, 1098, 1947, 1243, 1059, 1243, 1243, 2407,
	1037, 2919, 2460, 1052, 1046, 1044, 689, 2459, 2949, 2951,
	2304, 2305, 689, 1428, 1943, 1409, 1420, 3041, 1134, 1142,
	162, 689, 3176, 2900, 1097, 1076, 1808, 1807, 1133, 1806,
	2304, 2305, 4004, 2886, 1944, 1804, 652, 1731, 647, 1470,
	1471, 3874, 1052, 1046, 1044, 3442, 3424, 1005, 1479, 1484,
	1485, 2816, 1488, 1490, 1491, 1492, 1493, 2781, 1496, 1497,
	1499, 1499, 2717, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1476, 1083, 3885, 1399, 1622, 2867,
	1624, 1625, 1626, 1627, 1628, 942, 1233, 2453, 1400, 1401,
	3406, 3563, 1630, 1630, 1630, 1630, 1630, 1630, 1499, 1499,
	1630, 1630, 1630, 3522, 2834, 693, 1915, 1914, 1916, 1917,
	1918, 1489, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 686, 2522, 2397, 3994,
	1472, 1473, 1474, 1475, 1480, 1422, 942, 163, 2890, 3351,
	1486, 687, 87, 1668, 175, 942, 2903, 1416, 3965, 3258,
	1195, 92, 1201, 1202, 1203, 1204, 92, 1186, 1045, 3453,
	3454, 3563, 3965, 1196, 92, 3207, 3208, 1183, 2398, 1500,
	3207, 3208, 2870, 3993, 1178, 2396, 1240, 1241, 3211, 1469,
	3964, 3490, 2889, 3211, 1115, 183, 1469, 1427, 1424, 1425,
	1426, 1431, 1433, 1430, 3964, 1429, 1674, 1045, 1113, 2521,
	1697, 1104, 1005, 1835, 1665, 1423, 1005, 2913, 2451, 2399,
	2912, 2070, 1005, 4075, 1933, 2922, 1104, 1722, 1623, 2395,
	1189, 3050, 1209, 2776, 3049, 653, 2348, 1469, 164, 169,
	166, 172, 173, 174, 176, 178, 179, 180, 181, 122,
	1104, 1666, 1466, 1432, 182, 184, 185, 186, 2546, 3132,
	92, 1222, 2108, 1958, 2746, 2748, 1459, 1460, 1461, 1462,
	1464, 1463, 1465, 1466, 1681, 2935, 2109, 1698, 1685, 1449,
	1020, 1934, 2535, 1104, 1004, 117, 1236, 3899, 1141, 1127,
	1194, 3485, 3418, 3140, 1457, 1458, 1459, 1460, 1461, 1462,
	1464, 1463, 1465, 1466, 1683, 2471, 3489, 2009, 102, 1684,
	1940, 1736, 2962, 103, 1103, 1666, 1631, 1632, 1633, 1634,
	1635, 2102, 1834, 1638, 1639, 1640, 1636, 1637, 2102, 1103,
	2555, 3608, 1672, 1436, 1437, 1097, 1100, 1101, 3141, 1061,
	1077, 1173, 1116, 1094, 1098, 2859, 4040, 1659, 1437, 3460,
	1104, 3459, 2438, 1103, 105, 2546, 1114, 118, 1107, 1097,
	1844, 1428, 3143, 1109, 1093, 1843, 1833, 1110, 1108, 2448,
	2446, 1115, 2094, 1930, 2925, 1931, 1438, 1113, 1932, 2924,
	3138, 1679, 1811, 1812, 1813, 1827, 1103, 2552, 1111, 4032,
	2925, 3443, 1097, 1100, 1101, 2924, 1061, 3154, 3155, 1104,
	1094, 1098, 1700, 1682, 3139, 1177, 2106, 3929, 1223, 1680,
	1959, 1016, 1952, 2450, 1898, 1820, 1849, 4077, 1850, 1001,
	1852, 1854, 1703, 3774, 1858, 1860, 1862, 1864, 1866, 1880,
	1003, 1839, 2747, 1193, 1669, 1438, 1208, 3519, 3145, 3520,
	1179, 4083, 1243, 4073, 1727, 1728, 4074, 1210, 4072, 1888,
	1889, 3773, 3930, 1103, 1838, 1894, 1895, 2443, 1107, 1097,
	2551, 1837, 1837, 1109, 2443, 1923, 3764, 1110, 1108, 1803,
	2086, 2075, 2076, 2077, 2078, 2088, 2079, 2080, 2081, 2093,
	2089, 2082, 2083, 2090, 2091, 2092, 2084, 2085, 2087, 1830,
	1818, 1817, 1816, 1438, 3535, 1937, 2447, 1935, 1936, 1686,
	1938, 1939, 1103, 2445, 1140, 2038, 3153, 3534, 1137, 1698,
	1176, 1435, 1841, 1436, 1437, 2580, 2255, 3467, 3156, 2039,
	1467, 1468, 2037, 3867, 1884, 3466, 1076, 1455, 4084, 1922,
	1451, 3456, 1452, 2527, 2528, 2529, 3184, 3172, 1948, 1876,
	2841, 1438, 1879, 1921, 1881, 2840, 1453, 1467, 1468, 1450,
	2839, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1463,
	1465, 1466, 1455, 1910, 2934, 2403, 1809, 1924, 3868, 1438,
	1435, 1080, 1436, 1437, 1438, 1908, 1907, 126, 1079, 2964,
	1078, 2027, 2029, 2030, 188, 2236, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1464, 1463, 1465, 1466, 1906, 1964, 1461,
	1462, 1464, 1463, 1465, 1466, 2028, 1896, 1920, 127, 1243,
	1243, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1440, 1960,
	1961, 170, 1986, 85, 1890, 3795, 85, 1909, 1435, 1438,
	1436, 1437, 1887, 1965, 3142, 945, 946, 947, 1886, 1885,
	1972, 1973, 1974, 1985, 1856, 1427, 1424, 1425, 1426, 1431,
	1433, 1430, 1438, 1429, 1698, 3234, 1438, 694, 4045, 1698,
	1403, 3450, 694, 1423, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1464, 1463, 1465, 1466, 1730, 1435, 167, 1436, 1437,
	168, 4033, 2065, 2065, 1438, 41, 2823, 694, 41, 1438,
	2419, 2418, 2417, 2416, 2415, 2414, 2063, 2063, 2066, 3894,
	2767, 4060, 1698, 187, 1435, 108, 1436, 1437, 3893, 1435,
	1962, 1436, 1437, 4043, 1698, 1455, 107, 1966, 106, 1968,
	1969, 1970, 1971, 2031, 3871, 1707, 1975, 101, 1455, 4020,
	1698, 1434, 1698, 3887, 2127, 3870, 3973, 1698, 1987, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1464, 1463, 1465, 1466,
	2592, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464,
	1463, 1465, 1466, 1665, 1435, 3869, 1436, 1437, 3971, 1698,
	93, 1708, 3769, 3969, 1698, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1464, 1463, 1465, 1466, 1698, 1435, 2236, 1436,
	1437, 1435, 2233, 1436, 1437, 2590, 83, 1438, 2035, 83,
	1666, 2235, 2767, 3958, 2010, 1434, 1698, 99, 3753, 1438,
	1993, 1994, 99, 1438, 101, 940, 171, 3752, 100, 1435,
	1438, 1436, 1437, 100, 1435, 177, 1436, 1437, 3607, 1438,
	3605, 2041, 3531, 2043, 2044, 2045, 2046, 2047, 2048, 2050,
	2052, 2053, 2054, 2055, 2056, 2057, 2247, 1711, 2040, 2767,
	3937, 1438, 1664, 2246, 2767, 3933, 3800, 1438, 1663, 2069,
	1662, 2245, 3464, 2042, 3146, 3920, 1698, 3799, 3150, 1438,
	3275, 3503, 3884, 1698, 3757, 3149, 2096, 2098, 1698, 3777,
	1698, 3846, 1698, 3756, 2234, 2232, 1480, 2544, 2110, 2111,
	2112, 2113, 3449, 3844, 1698, 3511, 1455, 2543, 2534, 108,
	2767, 3765, 2124, 2103, 3841, 1698, 3503, 1698, 2141, 3151,
	107, 3243, 106, 1710, 3147, 2767, 3501, 2094, 3240, 3148,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1464, 1463, 1465,
	1466, 3175, 1435, 3174, 1436, 1437, 1698, 2877, 2327, 2250,
	2251, 3823, 1698, 2855, 1435, 2247, 1436, 1437, 1435, 162,
	1436, 1437, 2316, 3393, 1698, 1435, 2850, 1436, 1437, 1438,
	2245, 2443, 1698, 2356, 1435, 102, 1436, 1437, 2837, 1438,
	103, 3422, 1698, 2357, 2672, 1698, 3165, 3164, 1438, 1661,
	1698, 3162, 3163, 2311, 2312, 102, 1435, 2139, 1436, 1437,
	103, 2503, 1435, 2502, 1436, 1437, 2465, 2150, 1438, 2464,
	2329, 2034, 2294, 1438, 1435, 2301, 1436, 1437, 1438, 2249,
	1066, 2283, 2252, 2253, 1989, 2086, 2075, 2076, 2077, 2078,
	2088, 2079, 2080, 2081, 2093, 2089, 2082, 2083, 2090, 2091,
	2092, 2084, 2085, 2087, 1955, 2352, 2361, 1919, 2362, 2363,
	2364, 2365, 1438, 1066, 2351, 3999, 1017, 1911, 2282, 2366,
	2367, 2368, 2369, 3437, 2372, 2373, 2374, 2375, 2333, 2270,
	3160, 3161, 3388, 2288, 3417, 2289, 2812, 2223, 2224, 2225,
	2226, 2227, 2386, 2293, 2812, 1438, 2355, 1901, 2296, 3160,
	3159, 1434, 3386, 1698, 2791, 1698, 2432, 3384, 2392, 3940,
	2314, 1897, 3383, 1698, 1435, 101, 1436, 1437, 2521, 2899,
	2339, 2338, 2337, 1893, 1435, 1438, 1436, 1437, 2354, 2353,
	1438, 1051, 1050, 1435, 1438, 1436, 1437, 1799, 2880, 2429,
	2873, 2874, 2767, 2766, 2444, 2402, 3381, 1698, 2272, 2813,
	2548, 1698, 2783, 1435, 2150, 1436, 1437, 2813, 1435, 2815,
	1436, 1437, 1892, 1435, 1438, 1436, 1437, 2521, 1891, 2387,
	2068, 1698, 3419, 1438, 1698, 2383, 2376, 2378, 2379, 3343,
	1698, 2405, 2437, 1709, 2401, 2440, 1234, 2441, 2790, 1438,
	1799, 1798, 2457, 2413, 1438, 3127, 163, 1435, 2783, 1436,
	1437, 1105, 2443, 175, 2387, 2521, 1106, 2436, 2439, 3341,
	1698, 3097, 2435, 2763, 3337, 1698, 1837, 1438, 3334, 1698,
	3925, 2461, 3417, 2458, 2791, 2462, 2463, 1438, 101, 3898,
	1435, 107, 1436, 1437, 1438, 1742, 1741, 2767, 1438, 2542,
	1699, 1701, 2791, 2791, 183, 3372, 3162, 3070, 3332, 1698,
	1438, 2340, 2548, 2672, 1438, 2577, 2526, 3330, 1698, 1438,
	1435, 2576, 1436, 1437, 1438, 1435, 2443, 1436, 1437, 1435,
	3417, 1436, 1437, 3328, 1698, 1438, 2468, 2426, 3326, 1698,
	1490, 2309, 1490, 1438, 1702, 2273, 2548, 164, 169, 166,
	172, 173, 174, 176, 178, 179, 180, 181, 2538, 1435,
	1434, 1436, 1437, 182, 184, 185, 186, 2068, 1435, 2011,
	1436, 1437, 4034, 2247, 1438, 1995, 2496, 1942, 3324, 1698,
	2246, 1729, 3322, 1698, 1435, 1088, 1436, 1437, 2541, 1435,
	1438, 1436, 1437, 1006, 3320, 1698, 1087, 2292, 3318, 1698,
	1438, 3788, 3435, 3316, 1698, 1438, 1705, 3187, 3314, 1698,
	3754, 3619, 1435, 3484, 1436, 1437, 1438, 3481, 3236, 3312,
	1698, 3462, 1435, 3285, 1436, 1437, 2511, 3310, 1698, 1435,
	1438, 1436, 1437, 1435, 1438, 1436, 1437, 3284, 1801, 2385,
	3232, 2519, 3189, 3468, 3185, 1435, 1438, 1436, 1437, 1435,
	2881, 1436, 1437, 1872, 1435, 2382, 1436, 1437, 3349, 1435,
	2377, 1436, 1437, 1438, 2371, 2035, 2530, 2370, 1926, 1832,
	1435, 93, 1436, 1437, 3308, 1698, 1438, 1828, 1435, 1797,
	1436, 1437, 119, 3434, 3306, 1698, 2846, 2847, 1178, 3304,
	1698, 3429, 3430, 1438, 3469, 3470, 3471, 2531, 3789, 2533,
	3290, 1698, 1438, 2400, 1873, 1874, 1875, 1438, 2536, 1435,
	2537, 1436, 1437, 2286, 3273, 1698, 4055, 1991, 2738, 1698,
	1438, 4053, 4027, 3906, 2554, 1435, 3828, 1436, 1437, 2532,
	2736, 1698, 3432, 3181, 2847, 1435, 2716, 1436, 1437, 1438,
	1435, 3180, 1436, 1437, 3179, 2505, 2506, 2710, 1698, 3116,
	2508, 1435, 3097, 1436, 1437, 2539, 2860, 2586, 2497, 2509,
	2687, 1698, 3115, 3902, 3790, 1435, 1438, 1436, 1437, 1435,
	2749, 1436, 1437, 2300, 1706, 1438, 2065, 2679, 1698, 1992,
	3423, 1435, 3075, 1436, 1437, 1438, 2670, 1698, 1005, 3074,
	2063, 2752, 3882, 3121, 1438, 2800, 2801, 3119, 1435, 3410,
	1436, 1437, 3120, 1438, 2668, 1698, 3589, 3409, 3588, 2788,
	2789, 1435, 1438, 1436, 1437, 3084, 3866, 2750, 2327, 3598,
	1438, 1005, 2808, 2655, 1698, 3087, 3089, 3117, 1435, 3600,
	1436, 1437, 3118, 2753, 3090, 2755, 3413, 1435, 1021, 1436,
	1437, 1941, 1435, 992, 1436, 1437, 1022, 2560, 3158, 2787,
	2653, 1698, 2830, 2851, 1144, 1435, 3587, 1436, 1437, 2651,
	1698, 1438, 1143, 3251, 2575, 2846, 2928, 2108, 2034, 2649,
	1698, 41, 1402, 2887, 1435, 2768, 1436, 1437, 2647, 1698,
	2805, 2109, 127, 2807, 1438, 2764, 3415, 2645, 1698, 99,
	101, 1438, 1672, 2740, 2777, 4069, 2643, 1698, 3177, 2806,
	100, 1435, 1438, 1436, 1437, 3761, 2500, 1438, 2489, 3978,
	1435, 3883, 1436, 1437, 3472, 3784, 1438, 1666, 2488, 2760,
	1435, 1438, 1436, 1437, 1868, 2765, 3157, 2780, 1438, 1435,
	2804, 1436, 1437, 2826, 2297, 2885, 2833, 2835, 1435, 3395,
	1436, 1437, 2810, 2311, 2312, 2641, 1698, 1435, 2525, 1436,
	1437, 2814, 1029, 1030, 2487, 1435, 2817, 1436, 1437, 3073,
	2392, 3473, 3474, 3475, 2824, 1438, 2827, 3072, 2639, 1698,
	2896, 1869, 1870, 1871, 2849, 2637, 1698, 1438, 2486, 2852,
	2853, 2485, 107, 106, 2838, 1438, 2635, 1698, 3854, 1438,
	2105, 2633, 1698, 1438, 3853, 3831, 1435, 1438, 1436, 1437,
	2631, 1698, 2848, 3606, 3604, 2629, 1698, 108, 3603, 2856,
	1438, 2857, 2627, 1698, 2861, 2862, 2863, 1438, 107, 1435,
	106, 1436, 1437, 2893, 2145, 1438, 1435, 3596, 1436, 1437,
	3482, 2938, 2939, 1820, 1438, 3414, 3412, 1435, 3190, 1436,
	1437, 1438, 1435, 2427, 1436, 1437, 1815, 2882, 2883, 2625,
	1698, 1435, 2872, 1436, 1437, 1028, 1435, 1438, 1436, 1437,
	2892, 2623, 1698, 1435, 3595, 1436, 1437, 3403, 2588, 2621,
	1698, 2783, 99, 2616, 1698, 1438, 108, 2612, 1698, 101,
	1438, 2610, 1698, 100, 3573, 1438, 4056, 107, 2763, 1438,
	2917, 2955, 2978, 1438, 2603, 1698, 2936, 4057, 4056, 1438,
	1435, 3345, 1436, 1437, 2229, 2578, 2920, 2284, 1723, 2601,
	1698, 1715, 1435, 4057, 1436, 1437, 112, 113, 3872, 3486,
	1435, 2254, 1436, 1437, 1435, 3282, 1436, 1437, 1435, 3448,
	1436, 1437, 1435, 1019, 1436, 1437, 2008, 1438, 3, 10,
	2264, 2956, 1698, 95, 1, 1435, 2894, 1436, 1437, 2959,
	2006, 1405, 1435, 9, 1436, 1437, 1404, 1699, 2271, 3281,
	1435, 3452, 1436, 1437, 3278, 2007, 1438, 3988, 8, 1435,
	2842, 1436, 1437, 2734, 666, 2274, 1435, 2733, 1436, 1437,
	1438, 1670, 4028, 2729, 3984, 3985, 1438, 2980, 1912, 108,
	1902, 2295, 1435, 3514, 1436, 1437, 3036, 2940, 2197, 3785,
	107, 3193, 106, 2433, 3480, 2957, 2926, 2390, 1096, 2927,
	1435, 101, 1436, 1437, 152, 1435, 1438, 1436, 1437, 2349,
	1435, 2728, 1436, 1437, 1435, 2937, 1436, 1437, 1435, 2350,
	1436, 1437, 3953, 116, 1435, 3054, 1436, 1437, 1054, 115,
	3043, 2796, 2799, 2800, 2801, 2797, 3045, 2798, 2802, 1099,
	2727, 3429, 3430, 1207, 2327, 2971, 2428, 2234, 2232, 2234,
	2232, 3504, 2831, 2358, 2726, 1438, 1748, 3016, 1746, 1747,
	2725, 1745, 1435, 1750, 1436, 1437, 1438, 3104, 1749, 85,
	3259, 2579, 2327, 2327, 2327, 2327, 2327, 2958, 3026, 3027,
	3028, 3029, 3030, 2404, 3350, 1999, 701, 2803, 695, 3054,
	2724, 1435, 2327, 1436, 1437, 2327, 3044, 190, 3046, 1737,
	3053, 1716, 3364, 1138, 1438, 1435, 2329, 1436, 1437, 1952,
	656, 1435, 3109, 1436, 1437, 1438, 3166, 2466, 662, 3126,
	1487, 1990, 3071, 3069, 2818, 3078, 1048, 3065, 1438, 1040,
	2285, 1008, 2754, 1047, 2329, 2329, 2329, 2329, 2329, 2714,
	3762, 1435, 3076, 1436, 1437, 3079, 1438, 3105, 3407, 3083,
	2713, 3091, 3092, 1438, 2329, 3085, 2770, 2329, 3088, 3210,
	1438, 3081, 3865, 3108, 3597, 3938, 1010, 3110, 1009, 3218,
	3113, 2828, 3077, 3128, 3122, 102, 3129, 3066, 3067, 3068,
	103, 3111, 3112, 3130, 3114, 1438, 1712, 3371, 2712, 2553,
	1435, 2100, 1436, 1437, 1477, 2326, 1438, 3568, 3136, 2711,
	2026, 1435, 726, 1436, 1437, 3018, 3169, 3020, 1438, 725,
	3168, 3167, 2708, 723, 2756, 2784, 1441, 3170, 3171, 930,
	1438, 2744, 1724, 3031, 3032, 3033, 3034, 1438, 3220, 3221,
	2703, 2795, 1438, 3094, 1696, 1692, 3191, 2696, 3212, 1435,
	2392, 1436, 1437, 1438, 2695, 2793, 2792, 3227, 2498, 1693,
	1435, 1438, 1436, 1437, 2334, 1438, 3431, 3427, 3980, 2328,
	2324, 2762, 3100, 1435, 876, 1436, 1437, 3100, 875, 2694,
	735, 3244, 3247, 3246, 2290, 2291, 1695, 727, 1694, 717,
	2693, 1435, 874, 1436, 1437, 873, 3254, 3445, 1435, 3219,
	1436, 1437, 2692, 2902, 3264, 1435, 3213, 1436, 1437, 3261,
	3262, 3233, 3263, 2904, 2691, 3265, 2829, 3267, 3229, 3269,
	1419, 2690, 1688, 711, 1067, 3256, 2689, 3889, 2524, 3279,
	1435, 1687, 1436, 1437, 3896, 3201, 3498, 2688, 1490, 3182,
	2878, 1435, 1490, 1436, 1437, 2682, 2420, 68, 45, 2681,
	3860, 3926, 868, 1435, 865, 1436, 1437, 3570, 3571, 3572,
	2540, 3039, 3040, 3192, 2545, 1435, 3909, 1436, 1437, 3910,
	864, 3366, 1435, 3911, 1436, 1437, 2134, 1435, 3370, 1436,
	1437, 1415, 1412, 4001, 2001, 94, 36, 2549, 1435, 2550,
	1436, 1437, 35, 34, 2557, 33, 1435, 2559, 1436, 1437,
	1435, 32, 1436, 1437, 26, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 25, 24, 3103, 2327, 3399,
	2581, 2582, 2583, 2584, 2585, 3255, 2587, 3396, 3397, 23,
	2589, 3444, 22, 29, 2594, 2595, 19, 2596, 3404, 21,
	2599, 1438, 2600, 2602, 2604, 2605, 2606, 2607, 2608, 2609,
	2611, 2613, 2614, 2615, 2617, 715, 2619, 2620, 2622, 2624,
	2626, 2628, 2630, 2632, 2634, 2636, 2638, 2640, 2642, 2644,
	2646, 2648, 2650, 2652, 2654, 2656, 2657, 2658, 3438, 2660,
	2329, 2662, 3433, 2664, 2665, 3416, 2667, 2669, 2671, 3436,
	3220, 3221, 2674, 3411, 3446, 3447, 2678, 3401, 20, 3439,
	2683, 2684, 2685, 2686, 18, 3204, 3373, 1438, 3375, 3376,
	3377, 3249, 3250, 2697, 2698, 2699, 2700, 2701, 2702, 1438,
	4023, 2706, 2707, 3508, 3509, 2680, 1438, 4068, 121, 2709,
	3426, 3457, 3458, 3463, 2715, 3465, 54, 51, 1438, 49,
	2718, 2719, 2720, 2721, 2722, 1438, 2723, 129, 128, 3440,
	3441, 52, 48, 2730, 2731, 1438, 2732, 1181, 46, 2735,
	2737, 2295, 1027, 2739, 31, 1033, 1033, 1438, 30, 17,
	16, 1438, 15, 2751, 14, 13, 1435, 12, 1436, 1437,
	11, 7, 1438, 6, 3491, 39, 38, 28, 3495, 3496,
	3497, 2677, 37, 1438, 3510, 27, 4, 1438, 2796, 2799,
	2800, 2801, 2797, 2676, 2798, 2802, 1696, 1692, 2865, 2422,
	2675, 0, 1438, 0, 3487, 3488, 0, 0, 0, 1438,
	0, 1693, 2673, 0, 0, 0, 0, 0, 0, 2666,
	0, 1438, 0, 0, 0, 0, 3526, 0, 1438, 2663,
	0, 0, 1435, 0, 1436, 1437, 1689, 1690, 1695, 0,
	1694, 2661, 0, 0, 1435, 2659, 1436, 1437, 0, 0,
	0, 1435, 0, 1436, 1437, 0, 2618, 0, 3576, 0,
	3577, 3578, 3579, 1435, 0, 1436, 1437, 2598, 0, 0,
	1435, 2597, 1436, 1437, 0, 3586, 0, 3590, 3591, 0,
	1435, 0, 1436, 1437, 0, 0, 2593, 0, 0, 3566,
	0, 0, 1435, 2591, 1436, 1437, 1435, 0, 1436, 1437,
	3104, 0, 85, 0, 3104, 2558, 0, 1435, 3592, 1436,
	1437, 0, 2547, 0, 0, 0, 0, 0, 1435, 2065,
	1436, 1437, 1435, 0, 1436, 1437, 0, 0, 0, 0,
	3530, 0, 0, 2063, 3621, 0, 0, 1435, 3593, 1436,
	1437, 3601, 3613, 3602, 1435, 0, 1436, 1437, 0, 0,
	0, 3609, 3611, 0, 0, 0, 1435, 0, 1436, 1437,
	0, 0, 0, 1435, 41, 1436, 1437, 0, 0, 0,
	0, 3768, 0, 0, 0, 0, 0, 0, 0, 3625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3760, 3759, 0, 0, 0, 0, 0, 0,
	0, 3787, 0, 3775, 0, 0, 0, 0, 0, 0,
	3779, 3780, 3758, 0, 0, 0, 0, 0, 0, 0,
	0, 2966, 2967, 2968, 2969, 2970, 3825, 2065, 3826, 3622,
	3623, 0, 0, 3615, 0, 0, 0, 0, 0, 0,
	2975, 2063, 3829, 3770, 3771, 3772, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3104, 3100, 0, 3617, 3832, 0, 3763,
	0, 3835, 0, 0, 0, 0, 0, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1618, 1619, 1620, 1621, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 3858, 3876, 3855, 3856, 0, 3830, 3857,
	3103, 0, 3873, 0, 3103, 0, 0, 3890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 0, 0, 3875, 3106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3124, 0, 0,
	0, 0, 3879, 0, 0, 0, 3892, 0, 0, 0,
	0, 0, 3895, 0, 0, 3897, 0, 0, 0, 0,
	0, 3767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3864, 41, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3915, 0, 0, 3916, 3935,
	0, 0, 1439, 0, 85, 0, 0, 0, 0, 3881,
	0, 0, 0, 0, 0, 0, 0, 0, 3924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 3931, 0, 0, 0, 0, 3941,
	3944, 0, 3966, 3900, 3939, 3949, 3787, 3955, 0, 3952,
	3946, 3945, 3943, 3948, 3253, 3947, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 41, 0, 3976, 0,
	0, 0, 0, 3103, 0, 0, 3270, 3271, 0, 3272,
	3997, 3274, 3276, 3987, 3979, 3992, 0, 0, 0, 0,
	0, 0, 4005, 0, 3966, 3283, 0, 0, 4007, 4018,
	3287, 3288, 3289, 3291, 3292, 3293, 3294, 3295, 3296, 3297,
	3298, 3299, 3300, 3301, 3302, 3303, 3305, 3307, 3309, 3311,
	3313, 3315, 3317, 3319, 3321, 3323, 3325, 3327, 3329, 3331,
	3333, 3335, 3336, 3338, 3339, 3340, 3342, 1952, 4041, 3344,
	4022, 3346, 3347, 3348, 4037, 2065, 3352, 3353, 3354, 3355,
	3356, 3357, 3358, 3359, 3360, 3361, 3362, 4038, 4054, 2063,
	4051, 4050, 4048, 4052, 4047, 3369, 4017, 0, 0, 3374,
	3936, 3966, 0, 3378, 3379, 4062, 3380, 3382, 0, 3385,
	3387, 4070, 3389, 3390, 3391, 3392, 4076, 4078, 0, 3100,
	3398, 0, 4021, 3904, 0, 0, 0, 0, 0, 0,
	0, 3914, 1765, 2065, 0, 0, 0, 0, 4086, 0,
	0, 4087, 4088, 0, 3826, 0, 0, 2063, 4085, 0,
	0, 0, 0, 0, 0, 3420, 3421, 3888, 0, 3425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 0,
	0, 0, 0, 0, 4035, 0, 4013, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3502, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1753, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3521, 0, 0,
	3525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1753, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3559, 0, 0, 0, 0, 0, 1766, 0, 0,
	1956, 0, 0, 0, 3567, 0, 0, 0, 0, 0,
	0, 0, 3574, 1779, 1782, 1783, 1784, 1785, 1786, 1787,
	0, 1788, 1789, 1791, 1792, 1790, 1793, 1794, 1767, 1768,
	1769, 1770, 1751, 1752, 1780, 0, 1754, 0, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 0, 0, 1764,
	1771, 1772, 1773, 1774, 0, 1775, 1776, 1777, 1778, 1779,
	1782, 1783, 1784, 1785, 1786, 1787, 0, 1788, 1789, 1791,
	1792, 1790, 1793, 1794, 1767, 1768, 1769, 1770, 1751, 1752,
	1780, 0, 1754, 0, 1755, 1756, 1757, 1758, 1759, 1760,
	1761, 1762, 1763, 0, 0, 1764, 1771, 1772, 1773, 1774,
	0, 1775, 1776, 1777, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3776,
	0, 0, 0, 0, 0, 0, 0, 0, 3783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3793, 3794,
	0, 3796, 0, 3797, 3798, 0, 0, 0, 3801, 3802,
	3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812,
	3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822,
	0, 3824, 3827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3836, 3837, 3838,
	3839, 3840, 3842, 3843, 3845, 3847, 3848, 3850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2021, 2022, 2023, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1781, 2032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2071, 2072, 0, 0, 0, 0, 2095, 1033, 1033, 2099,
	1781, 0, 0, 2104, 0, 0, 0, 0, 0, 0,
	0, 0, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121,
	2122, 2123, 0, 0, 0, 0, 2128, 2129, 2130, 2131,
	2132, 2133, 2135, 0, 2140, 0, 2142, 2143, 2144, 0,
	2146, 2147, 2148, 0, 2151, 2152, 2153, 2154, 2155, 2156,
	2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166,
	2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176,
	2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186,
	2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 0, 0, 0, 0, 0, 2228, 0,
	2230, 0, 2237, 2238, 2239, 2240, 2241, 2242, 1033, 0,
	1033, 1033, 1033, 1033, 1033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2256, 2257, 2258,
	2259, 2260, 2261, 2262, 2263, 0, 2265, 2266, 2267, 2268,
	2269, 0, 0, 0, 0, 0, 3905, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3921, 0, 0, 0, 1033, 0, 3922, 3923, 0, 0,
	0, 0, 0, 84, 43, 44, 86, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2307, 2308, 3934, 0,
	0, 0, 0, 90, 0, 0, 0, 47, 75, 76,
	0, 73, 77, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 2346, 0, 3960, 3961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3968, 3970,
	3972, 0, 0, 0, 0, 0, 0, 0, 0, 61,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 4000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2388, 0, 0, 3643, 3645, 3644, 3708,
	3709, 3710, 3711, 3712, 3713, 3714, 770, 0, 0, 0,
	0, 4019, 0, 0, 0, 0, 0, 0, 193, 0,
	0, 193, 0, 0, 0, 699, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 4042, 4044, 4046, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4067, 0,
	0, 705, 193, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4079, 4080, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 53, 56, 55, 58, 0, 72, 0, 0, 81,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 60, 89, 88, 0, 0, 70, 71,
	57, 0, 0, 0, 0, 0, 79, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 62, 63,
	0, 64, 65, 66, 67, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3657, 3658, 0, 0,
	3733, 3732, 3731, 0, 0, 3729, 3730, 3728, 0, 0,
	0, 0, 59, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2556, 0,
	0, 0, 0, 0, 0, 0, 2561, 2562, 2563, 2564,
	3734, 891, 0, 897, 898, 3735, 3736, 895, 3737, 901,
	900, 892, 893, 0, 750, 899, 894, 896, 0, 0,
	1495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 768, 769, 3642, 3646, 3647, 3648, 3659,
	3706, 3707, 3715, 3717, 847, 3716, 3718, 3719, 3720, 3723,
	3724, 3725, 3726, 3721, 3722, 3727, 3626, 3630, 3627, 3628,
	3629, 3641, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638,
	3639, 3640, 3738, 3739, 3740, 3741, 3742, 3743, 3652, 3656,
	3655, 3653, 3654, 3650, 3651, 3678, 3677, 3679, 3680, 3681,
	3682, 3683, 3684, 3686, 3685, 3687, 3688, 3689, 3690, 3691,
	3692, 3660, 3661, 3664, 3665, 3663, 3662, 3666, 3675, 3676,
	3667, 3668, 3669, 3670, 3671, 3672, 3674, 3673, 3693, 3694,
	3695, 3696, 3697, 3699, 3698, 3702, 3703, 3701, 3700, 3705,
	3704, 92, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 902, 0, 903, 0, 0, 907, 943,
	0, 2236, 909, 908, 944, 910, 867, 866, 0, 0,
	904, 905, 0, 906, 2064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3744, 3745,
	3746, 3747, 3748, 3749, 3750, 3751, 0, 69, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 193, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	705, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1033, 0, 0, 2960, 2961, 0,
	0, 2963, 0, 0, 2965, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2972, 2973, 2974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2979, 0, 0, 2981, 2982, 2983,
	0, 0, 0, 2984, 2985, 0, 0, 2986, 0, 2987,
	0, 0, 0, 0, 0, 0, 2988, 0, 2989, 0,
	0, 0, 2990, 0, 2991, 0, 0, 2992, 0, 2993,
	0, 2994, 0, 2995, 0, 2996, 0, 2997, 0, 2998,
	0, 2999, 0, 3000, 0, 3001, 0, 3002, 0, 3003,
	0, 3004, 0, 3005, 0, 3006, 0, 3007, 0, 3008,
	0, 3009, 0, 0, 0, 3010, 0, 3011, 0, 3012,
	0, 0, 3013, 0, 3014, 0, 3015, 0, 2200, 3017,
	0, 0, 3019, 0, 0, 3021, 3022, 3023, 3024, 0,
	0, 0, 0, 3025, 2200, 2200, 2200, 2200, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3035,
	1482, 0, 0, 0, 0, 0, 0, 3048, 0, 0,
	3052, 0, 1033, 0, 0, 0, 0, 0, 0, 0,
	3055, 3056, 3057, 3058, 3059, 3060, 0, 0, 0, 3061,
	3062, 0, 3063, 0, 3064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 705, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 3095,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 0, 0,
	193, 0, 0, 0, 3125, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 0, 0, 0, 0, 193,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2871, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	149, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 170, 0, 0, 0, 3188, 0, 0, 0, 1482,
	0, 0, 0, 0, 0, 705, 705, 0, 705, 0,
	705, 705, 188, 705, 705, 705, 705, 705, 705, 0,
	0, 0, 160, 0, 0, 0, 1482, 0, 148, 1482,
	705, 1482, 193, 0, 0, 0, 127, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 170,
	168, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 193, 0, 1823,
	1824, 159, 158, 187, 0, 0, 0, 0, 0, 0,
	160, 705, 0, 193, 0, 0, 148, 0, 0, 0,
	3277, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 3286, 167, 0, 193, 168, 0,
	0, 0, 0, 0, 0, 0, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 705, 0, 136, 137, 159,
	158, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 925, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 1825, 156, 0, 1822, 0, 154,
	155, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 684, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 134, 156, 141, 133, 0, 154, 155, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 704, 0, 0, 145, 143,
	138, 139, 140, 144, 0, 0, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 705, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 0, 0, 705, 0, 0, 0, 0,
	0, 3483, 0, 1819, 193, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 127, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	0, 0, 0, 0, 3507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 1482, 0, 0, 148, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 0, 0, 0, 0, 167, 0, 0, 168, 3527,
	0, 3528, 0, 0, 3529, 0, 157, 3532, 3533, 0,
	1673, 705, 705, 0, 0, 0, 3537, 1823, 1824, 159,
	158, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	3538, 0, 3539, 0, 3540, 0, 3541, 0, 3542, 0,
	3543, 0, 3544, 0, 3545, 0, 3546, 0, 3547, 0,
	3548, 0, 3549, 0, 3550, 0, 3551, 0, 3552, 0,
	3553, 0, 0, 3554, 157, 0, 0, 3555, 650, 3556,
	0, 0, 0, 0, 0, 3558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3575, 0,
	0, 0, 0, 0, 0, 0, 0, 3580, 0, 3581,
	3582, 0, 3583, 150, 3584, 0, 151, 2248, 0, 3585,
	0, 153, 1825, 156, 0, 1822, 0, 154, 155, 1062,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 3610, 0, 163, 0, 0, 0,
	0, 0, 0, 175, 0, 3618, 0, 0, 3620, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	3624, 150, 705, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3755, 0,
	0, 0, 0, 0, 183, 0, 193, 0, 0, 705,
	0, 0, 0, 0, 163, 0, 0, 0, 0, 193,
	0, 175, 0, 705, 0, 0, 2248, 193, 0, 193,
	0, 193, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 164, 169, 166,
	172, 173, 174, 176, 178, 179, 180, 181, 0, 0,
	0, 0, 183, 182, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 164, 169, 166, 172, 173,
	174, 176, 178, 179, 180, 181, 0, 0, 0, 0,
	0, 182, 184, 185, 186, 0, 0, 0, 0, 0,
	705, 3863, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 0, 0, 0, 705, 0,
	0, 0, 705, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	704, 1398, 704, 704, 0, 0, 193, 193, 0, 0,
	193, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 704, 0, 0, 0, 0, 0, 193, 0,
	0, 150, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 163, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 0, 0,
	0, 3903, 944, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1482, 0, 2248, 0, 0, 3917, 0, 0,
	3918, 0, 3919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 169, 166, 172, 173,
	174, 176, 178, 179, 180, 181, 0, 0, 0, 0,
	0, 182, 184, 185, 186, 0, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1182, 0,
	1188, 0, 0, 1190, 0, 0, 3998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1481, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4014, 0, 4015, 0, 4016,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 4065,
	0, 4066, 0, 0, 0, 193, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	0, 1481, 1842, 0, 0, 1845, 1846, 704, 704, 0,
	704, 0, 704, 704, 0, 704, 704, 704, 704, 704,
	704, 0, 0, 0, 0, 0, 0, 0, 1481, 1877,
	1878, 1481, 704, 1481, 0, 1883, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 705, 0,
	1945, 0, 0, 704, 0, 0, 0, 705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1482, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 193, 193, 193,
	193, 0, 0, 0, 0, 0, 0, 704, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 703, 0, 1726, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1058, 0, 1065, 0,
	0, 0, 0, 878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 704, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 704, 191, 0,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 1927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1015, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 705, 0, 1034, 1034, 704, 0, 1963, 0, 0,
	0, 0, 651, 0, 1967, 1481, 0, 0, 0, 0,
	0, 0, 0, 0, 2073, 1978, 1979, 1980, 1981, 1982,
	1983, 1984, 1481, 705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 705, 0, 704, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 0, 0, 1482,
	0, 0, 705, 705, 1482, 193, 193, 193, 193, 193,
	0, 0, 0, 0, 0, 0, 0, 193, 0, 0,
	0, 0, 0, 193, 0, 193, 0, 0, 193, 193,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 705, 0, 704,
	1482, 0, 0, 0, 0, 705, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 0, 0, 193, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 2410, 2411, 2412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 704, 1840,
	0, 0, 1840, 0, 1840, 0, 0, 0, 0, 0,
	2442, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 0, 704, 0, 0, 0, 0,
	704, 0, 0, 0, 704, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1245, 0, 1245, 1245, 0, 0, 0,
	193, 0, 0, 193, 193, 193, 0, 0, 0, 0,
	0, 0, 0, 705, 705, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2313, 0, 0, 0,
	705, 705, 705, 705, 2317, 0, 2320, 0, 0, 2014,
	0, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 651, 93, 651, 0, 943, 651, 0, 0, 931,
	944, 945, 946, 947, 932, 0, 0, 933, 934, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 940, 948, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 1481, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3222, 3223, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 705, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 3224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 2477, 0, 0, 0, 0, 0,
	0, 0, 0, 2494, 2495, 0, 0, 2499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2504, 0,
	0, 0, 0, 0, 0, 2507, 1676, 1677, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 0, 0, 705, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 3225, 3226, 0, 705, 0, 0,
	0, 0, 1720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 0, 0, 0, 0,
	705, 0, 0, 0, 705, 705, 0, 0, 0, 0,
	1848, 1848, 0, 1848, 2822, 1848, 1848, 651, 1857, 1848,
	1848, 1848, 1848, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 705, 0, 1058, 0, 1015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 0, 0, 0, 1949, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 1840, 1840, 0, 0, 0, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1481, 2895, 0, 0, 1483,
	1245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 0, 1483,
	0, 1483, 651, 0, 0, 0, 0, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 0, 705, 193, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 1951, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 1976, 1977, 651, 651,
	651, 651, 651, 651, 651, 0, 704, 0, 0, 0,
	0, 0, 0, 2809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1482, 0, 705, 0,
	0, 0, 0, 0, 0, 0, 0, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 0, 705, 2248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 705, 0, 0, 2858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2059, 0,
	0, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2907, 2908, 2909, 2910, 2911, 0, 0,
	0, 0, 0, 705, 0, 704, 2125, 2126, 193, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 2921, 0,
	0, 0, 705, 704, 705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 704, 0, 0,
	0, 1481, 2929, 0, 704, 704, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1034, 1034, 3173, 0, 0,
	1483, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 0, 1481, 0, 0, 0, 0, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3252, 0,
	0, 0, 0, 0, 2299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1720, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1058, 0, 0, 0, 0, 1034, 1951, 1034, 1034,
	1034, 1034, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 1065, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1058, 1015, 0, 0, 0,
	0, 1065, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 0, 0, 0, 1951, 651, 0, 651,
	0, 651, 2336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1058, 0,
	0, 0, 0, 2059, 0, 0, 0, 2059, 2059, 0,
	0, 3178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3451, 0, 0, 0, 0, 0, 3216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3245, 0, 0, 3248, 0, 704, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	0, 0, 704, 704, 704, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 943, 0, 0, 0, 931, 944, 945, 946, 947,
	932, 0, 0, 933, 934, 0, 935, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	940, 948, 949, 0, 0, 0, 651, 651, 0, 1245,
	651, 0, 2501, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 0, 0, 0, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3400, 0, 0, 0, 0, 0, 3222, 3223,
	0, 0, 0, 0, 651, 0, 0, 0, 0, 0,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1481, 0, 0, 0, 3461, 704, 0,
	704, 0, 1483, 0, 1951, 0, 0, 0, 0, 0,
	0, 0, 0, 3224, 0, 0, 0, 3476, 0, 0,
	3477, 3478, 3479, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 704,
	3225, 3226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2757, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 704, 704, 0, 0,
	0, 0, 0, 0, 891, 0, 897, 898, 0, 0,
	895, 0, 901, 900, 892, 893, 0, 0, 899, 894,
	896, 0, 0, 0, 0, 704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 651, 0, 2854,
	0, 0, 0, 0, 0, 1899, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2299, 0, 0, 0,
	0, 0, 0, 2879, 0, 0, 0, 0, 0, 0,
	0, 0, 2884, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 0, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 2864, 0, 0,
	0, 0, 0, 2059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 2059,
	0, 0, 0, 0, 0, 0, 651, 651, 651, 651,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 651, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1481, 0,
	704, 0, 0, 0, 0, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 704, 0, 0, 0, 0,
	0, 0, 1034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 0, 0, 3037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 704, 3080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 0, 704, 0, 704, 3107, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1058, 0, 0, 0, 0, 0, 0, 0,
	2299, 0, 0, 0, 0, 0, 0, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1483,
	0, 0, 0, 0, 1483, 651, 651, 651, 651, 651,
	0, 0, 0, 0, 0, 0, 0, 3123, 0, 0,
	0, 0, 0, 1899, 0, 651, 0, 0, 651, 3131,
	1951, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3365, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2299, 2299,
	0, 0, 0, 0, 0, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3515, 3516, 3517, 3518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	651, 0, 0, 651, 651, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3614, 0, 3616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3851, 0, 0, 0, 3851,
	3851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2299, 0,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3928, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1899, 0, 0, 1245, 1245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 0, 0, 0, 3974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1483, 0, 2299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3365, 0, 3982,
	0, 0, 0, 3954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1899, 0,
	0, 0, 0, 0, 0, 0, 389, 0, 0, 0,
	1381, 1365, 509, 0, 1308, 1384, 1277, 1296, 1394, 1299,
	1302, 1344, 1255, 1322, 408, 1293, 1248, 1281, 1250, 1288,
	1251, 1279, 1310, 266, 1276, 1367, 1326, 1383, 359, 263,
	1257, 1282, 422, 1298, 201, 1346, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	1390, 363, 1332, 0, 488, 393, 0, 0, 1951, 1312,
	1371, 1320, 1358, 1307, 1345, 1265, 1331, 1385, 1294, 1341,
	1386, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 0, 3956, 927, 0, 0, 0, 0, 3957, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	1290, 1338, 1380, 1291, 1340, 261, 316, 268, 260, 561,
	1391, 1370, 1254, 1319, 1379, 0, 0, 225, 1382, 1314,
	0, 1343, 0, 1397, 1249, 1334, 0, 1252, 1256, 1393,
	1375, 1285, 271, 0, 0, 0, 0, 0, 0, 0,
	1311, 1321, 1355, 1359, 1305, 0, 0, 0, 0, 0,
	0, 0, 0, 1283, 0, 1330, 0, 0, 0, 1261,
	1253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1309, 0, 0, 0, 0, 1264, 0,
	1284, 1356, 0, 1247, 293, 1258, 394, 253, 0, 445,
	1363, 1374, 1306, 603, 1378, 1304, 1303, 1350, 1262, 1369,
	1297, 358, 1260, 325, 195, 221, 0, 1295, 404, 453,
	465, 1368, 1280, 1289, 249, 1287, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 1329, 1348, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 1259, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 1275, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 1364, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 1353, 1396, 417,
	464, 236, 583, 487, 197, 1269, 1274, 1267, 0, 250,
	251, 1335, 556, 1270, 1268, 1324, 1325, 1271, 1387, 1388,
	1389, 1372, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 1357, 1263, 0, 1272, 1273, 1366, 1376, 1377, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 1328, 194, 217, 361, 1392,
	446, 284, 624, 593, 588, 202, 219, 1266, 258, 1278,
	1286, 0, 1292, 1300, 1301, 1313, 1315, 1316, 1317, 1318,
	1336, 1337, 1339, 1347, 1349, 1352, 1354, 1361, 1373, 1395,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 1327, 1333,
	374, 277, 300, 315, 1342, 592, 493, 223, 458, 286,
	247, 1360, 1362, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 1323, 1351, 369,
	557, 558, 311, 389, 0, 0, 0, 1381, 1365, 509,
	0, 1308, 1384, 1277, 1296, 1394, 1299, 1302, 1344, 1255,
	1322, 408, 1293, 1248, 1281, 1250, 1288, 1251, 1279, 1310,
	266, 1276, 1367, 1326, 1383, 359, 263, 1257, 1282, 422,
	1298, 201, 1346, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 1390, 363, 1332,
	0, 488, 393, 0, 0, 0, 1312, 1371, 1320, 1358,
	1307, 1345, 1265, 1331, 1385, 1294, 1341, 1386, 318, 244,
	320, 200, 405, 489, 282, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 1290, 1338, 1380,
	1291, 1340, 261, 316, 268, 260, 561, 1391, 1370, 1254,
	1319, 1379, 0, 0, 225, 1382, 1314, 0, 1343, 0,
	1397, 1249, 1334, 0, 1252, 1256, 1393, 1375, 1285, 271,
	0, 0, 0, 0, 0, 0, 0, 1311, 1321, 1355,
	1359, 1305, 0, 0, 0, 0, 0, 0, 3132, 0,
	1283, 0, 1330, 0, 0, 0, 1261, 1253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1309, 0, 0, 0, 0, 1264, 0, 1284, 1356, 0,
	1247, 293, 1258, 394, 253, 0, 445, 1363, 1374, 1306,
	603, 1378, 1304, 1303, 1350, 1262, 1369, 1297, 358, 1260,
	325, 195, 221, 0, 1295, 404, 453, 465, 1368, 1280,
	1289, 249, 1287, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 1329, 1348, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 570, 571,
	252, 626, 224, 597, 216, 1259, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 1275, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 1364, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 1353, 1396, 417, 464, 236, 583,
	487, 197, 1269, 1274, 1267, 0, 250, 251, 1335, 556,
	1270, 1268, 1324, 1325, 1271, 1387, 1388, 1389, 1372, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 1357, 1263,
	0, 1272, 1273, 1366, 1376, 1377, 646, 377, 477, 580,
	330, 342, 345, 335, 354, 0, 355, 331, 332, 337,
	339, 340, 341, 346, 347, 351, 357, 245, 206, 383,
	391, 559, 307, 212, 213, 214, 505, 506, 507, 508,
	594, 595, 599, 454, 455, 456, 457, 288, 589, 304,
	460, 459, 326, 327, 372, 441, 521, 523, 534, 538,
	540, 542, 548, 551, 522, 524, 535, 539, 541, 543,
	549, 552, 511, 513, 515, 517, 530, 529, 526, 554,
	555, 532, 537, 516, 528, 533, 546, 553, 550, 510,
	514, 518, 527, 545, 544, 525, 536, 547, 531, 519,
	512, 520, 1328, 194, 217, 361, 1392, 446, 284, 624,
	593, 588, 202, 219, 1266, 258, 1278, 1286, 0, 1292,
	1300, 1301, 1313, 1315, 1316, 1317, 1318, 1336, 1337, 1339,
	1347, 1349, 1352, 1354, 1361, 1373, 1395, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 296,
	297, 436, 437, 309, 310, 620, 621, 295, 577, 607,
	575, 619, 601, 430, 371, 1327, 1333, 374, 277, 300,
	315, 1342, 592, 493, 223, 458, 286, 247, 1360, 1362,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 1323, 1351, 369, 557, 558, 311,
	389, 0, 0, 0, 1381, 1365, 509, 0, 1308, 1384,
	1277, 1296, 1394, 1299, 1302, 1344, 1255, 1322, 408, 1293,
	1248, 1281, 1250, 1288, 1251, 1279, 1310, 266, 1276, 1367,
	1326, 1383, 359, 263, 1257, 1282, 422, 1298, 201, 1346,
	478, 248, 370, 367, 564, 278, 269, 265, 246, 312,
	378, 420, 499, 414, 1390, 363, 1332, 0, 488, 393,
	0, 0, 0, 1312, 1371, 1320, 1358, 1307, 1345, 1265,
	1331, 1385, 1294, 1341, 1386, 318, 244, 320, 200, 405,
	489, 282, 0, 0, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 344, 353, 352, 333, 334, 336,
	338, 343, 350, 356, 1290, 1338, 1380, 1291, 1340, 261,
	316, 268, 260, 561, 1391, 1370, 1254, 1319, 1379, 0,
	0, 225, 1382, 1314, 0, 1343, 0, 1397, 1249, 1334,
	0, 1252, 1256, 1393, 1375, 1285, 271, 0, 0, 0,
	0, 0, 0, 0, 1311, 1321, 1355, 1359, 1305, 0,
	0, 0, 0, 0, 0, 3093, 0, 1283, 0, 1330,
	0, 0, 0, 1261, 1253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1309, 0, 0,
	0, 0, 1264, 0, 1284, 1356, 0, 1247, 293, 1258,
	394, 253, 0, 445, 1363, 1374, 1306, 603, 1378, 1304,
	1303, 1350, 1262, 1369, 1297, 358, 1260, 325, 195, 221,
	0, 1295, 404, 453, 465, 1368, 1280, 1289, 249, 1287,
	463, 418, 581, 229, 280, 450, 424, 461, 432, 283,
	1329, 1348, 462, 365, 566, 442, 578, 604, 605, 259,
	398, 590, 503, 598, 622, 222, 256, 412, 496, 584,
	485, 390, 562, 563, 324, 484, 291, 199, 362, 610,
	220, 471, 364, 238, 227, 568, 587, 285, 448, 617,
	209, 498, 576, 235, 475, 0, 0, 625, 243, 495,
	211, 573, 494, 386, 321, 322, 210, 0, 449, 264,
	289, 0, 0, 254, 407, 570, 571, 252, 626, 224,
	597, 216, 1259, 596, 400, 565, 574, 387, 376, 215,
	572, 385, 375, 329, 348, 349, 276, 302, 439, 368,
	440, 301, 303, 396, 395, 397, 203, 585, 0, 204,
	0, 490, 586, 627, 444, 208, 230, 231, 233, 1275,
	275, 279, 287, 290, 298, 299, 308, 360, 411, 438,
	434, 443, 1364, 560, 579, 591, 602, 608, 609, 611,
	612, 613, 614, 615, 618, 616, 399, 306, 486, 328,
	366, 1353, 1396, 417, 464, 236, 583, 487, 197, 1269,
	1274, 1267, 0, 250, 251, 1335, 556, 1270, 1268, 1324,
	1325, 1271, 1387, 1388, 1389, 1372, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 623, 1357, 1263, 0, 1272, 1273,
	1366, 1376, 1377, 646, 377, 477, 580, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 245, 206, 383, 391, 559, 307,
	212, 213, 214, 505, 506, 507, 508, 594, 595, 599,
	454, 455, 456, 457, 288, 589, 304, 460, 459, 326,
	327, 372, 441, 521, 523, 534, 538, 540, 542, 548,
	551, 522, 524, 535, 539, 541, 543, 549, 552, 511,
	513, 515, 517, 530, 529, 526, 554, 555, 532, 537,
	516, 528, 533, 546, 553, 550, 510, 514, 518, 527,
	545, 544, 525, 536, 547, 531, 519, 512, 520, 1328,
	194, 217, 361, 1392, 446, 284, 624, 593, 588, 202,
	219, 1266, 258, 1278, 1286, 0, 1292, 1300, 1301, 1313,
	1315, 1316, 1317, 1318, 1336, 1337, 1339, 1347, 1349, 1352,
	1354, 1361, 1373, 1395, 196, 198, 205, 218, 228, 232,
	239, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	567, 569, 582, 600, 606, 472, 296, 297, 436, 437,
	309, 310, 620, 621, 295, 577, 607, 575, 619, 601,
	430, 371, 1327, 1333, 374, 277, 300, 315, 1342, 592,
	493, 223, 458, 286, 247, 1360, 1362, 207, 242, 226,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	240, 451, 237, 476, 500, 501, 502, 504, 388, 262,
	425, 1323, 1351, 369, 557, 558, 311, 389, 0, 0,
	0, 1381, 1365, 509, 0, 1308, 1384, 1277, 1296, 1394,
	1299, 1302, 1344, 1255, 1322, 408, 1293, 1248, 1281, 1250,
	1288, 1251, 1279, 1310, 266, 1276, 1367, 1326, 1383, 359,
	263, 1257, 1282, 422, 1298, 201, 1346, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 1390, 363, 1332, 0, 488, 393, 0, 0, 0,
	1312, 1371, 1320, 1358, 1307, 1345, 1265, 1331, 1385, 1294,
	1341, 1386, 318, 244, 320, 200, 405, 489, 282, 0,
	0, 0, 0, 0, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 1290, 1338, 1380, 1291, 1340, 261, 316, 268, 260,
	561, 1391, 1370, 1254, 1319, 1379, 0, 0, 225, 1382,
	1314, 0, 1343, 0, 1397, 1249, 1334, 0, 1252, 1256,
	1393, 1375, 1285, 271, 0, 0, 0, 0, 0, 0,
	0, 1311, 1321, 1355, 1359, 1305, 0, 0, 0, 0,
	0, 0, 2315, 0, 1283, 0, 1330, 0, 0, 0,
	1261, 1253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1309, 0, 0, 0, 0, 1264,
	0, 1284, 1356, 0, 1247, 293, 1258, 394, 253, 0,
	445, 1363, 1374, 1306, 603, 1378, 1304, 1303, 1350, 1262,
	1369, 1297, 358, 1260, 325, 195, 221, 0, 1295, 404,
	453, 465, 1368, 1280, 1289, 249, 1287, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 1329, 1348, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 570, 571, 252, 626, 224, 597, 216, 1259,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 1275, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 1364,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 1353, 1396,
	417, 464, 236, 583, 487, 197, 1269, 1274, 1267, 0,
	250, 251, 1335, 556, 1270, 1268, 1324, 1325, 1271, 1387,
	1388, 1389, 1372, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 1357, 1263, 0, 1272, 1273, 1366, 1376, 1377,
	646, 377, 477, 580, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 245, 206, 383, 391, 559, 307, 212, 213, 214,
	505, 506, 507, 508, 594, 595, 599, 454, 455, 456,
	457, 288, 589, 304, 460, 459, 326, 327, 372, 441,
	521, 523, 534, 538, 540, 542, 548, 551, 522, 524,
	535, 539, 541, 543, 549, 552, 511, 513, 515, 517,
	530, 529, 526, 554, 555, 532, 537, 516, 528, 533,
	546, 553, 550, 510, 514, 518, 527, 545, 544, 525,
	536, 547, 531, 519, 512, 520, 1328, 194, 217, 361,
	1392, 446, 284, 624, 593, 588, 202, 219, 1266, 258,
	1278, 1286, 0, 1292, 1300, 1301, 1313, 1315, 1316, 1317,
	1318, 1336, 1337, 1339, 1347, 1349, 1352, 1354, 1361, 1373,
	1395, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 296, 297, 436, 437, 309, 310, 620,
	621, 295, 577, 607, 575, 619, 601, 430, 371, 1327,
	1333, 374, 277, 300, 315, 1342, 592, 493, 223, 458,
	286, 247, 1360, 1362, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 1323, 1351,
	369, 557, 558, 311, 389, 0, 0, 0, 1381, 1365,
	509, 0, 1308, 1384, 1277, 1296, 1394, 1299, 1302, 1344,
	1255, 1322, 408, 1293, 1248, 1281, 1250, 1288, 1251, 1279,
	1310, 266, 1276, 1367, 1326, 1383, 359, 263, 1257, 1282,
	422, 1298, 201, 1346, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 1390, 363,
	1332, 0, 488, 393, 0, 0, 0, 1312, 1371, 1320,
	1358, 1307, 1345, 1265, 1331, 1385, 1294, 1341, 1386, 318,
	244, 320, 200, 405, 489, 282, 0, 93, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 1290, 1338,
	1380, 1291, 1340, 261, 316, 268, 260, 561, 1391, 1370,
	1254, 1319, 1379, 0, 0, 225, 1382, 1314, 0, 1343,
	0, 1397, 1249, 1334, 0, 1252, 1256, 1393, 1375, 1285,
	271, 0, 0, 0, 0, 0, 0, 0, 1311, 1321,
	1355, 1359, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 1283, 0, 1330, 0, 0, 0, 1261, 1253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1309, 0, 0, 0, 0, 1264, 0, 1284, 1356,
	0, 1247, 293, 1258, 394, 253, 0, 445, 1363, 1374,
	1306, 603, 1378, 1304, 1303, 1350, 1262, 1369, 1297, 358,
	1260, 325, 195, 221, 0, 1295, 404, 453, 465, 1368,
	1280, 1289, 249, 1287, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 1329, 1348, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 570,
	571, 252, 626, 224, 597, 216, 1259, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 1275, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 1364, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 1353, 1396, 417, 464, 236,
	583, 487, 197, 1269, 1274, 1267, 0, 250, 251, 1335,
	556, 1270, 1268, 1324, 1325, 1271, 1387, 1388, 1389, 1372,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 1357,
	1263, 0, 1272, 1273, 1366, 1376, 1377, 646, 377, 477,
	580, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 245, 206,
	383, 391, 559, 307, 212, 213, 214, 505, 506, 507,
	508, 594, 595, 599, 454, 455, 456, 457, 288, 589,
	304, 460, 459, 326, 327, 372, 441, 521, 523, 534,
	538, 540, 542, 548, 551, 522, 524, 535, 539, 541,
	543, 549, 552, 511, 513, 515, 517, 530, 529, 526,
	554, 555, 532, 537, 516, 528, 533, 546, 553, 550,
	510, 514, 518, 527, 545, 544, 525, 536, 547, 531,
	519, 512, 520, 1328, 194, 217, 361, 1392, 446, 284,
	624, 593, 588, 202, 219, 1266, 258, 1278, 1286, 0,
	1292, 1300, 1301, 1313, 1315, 1316, 1317, 1318, 1336, 1337,
	1339, 1347, 1349, 1352, 1354, 1361, 1373, 1395, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	296, 297, 436, 437, 309, 310, 620, 621, 295, 577,
	607, 575, 619, 601, 430, 371, 1327, 1333, 374, 277,
	300, 315, 1342, 592, 493, 223, 458, 286, 247, 1360,
	1362, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 1323, 1351, 369, 557, 558,
	311, 389, 0, 0, 0, 1381, 1365, 509, 0, 1308,
	1384, 1277, 1296, 1394, 1299, 1302, 1344, 1255, 1322, 408,
	1293, 1248, 1281, 1250, 1288, 1251, 1279, 1310, 266, 1276,
	1367, 1326, 1383, 359, 263, 1257, 1282, 422, 1298, 201,
	1346, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 1390, 363, 1332, 0, 488,
	393, 0, 0, 0, 1312, 1371, 1320, 1358, 1307, 1345,
	1265, 1331, 1385, 1294, 1341, 1386, 318, 244, 320, 200,
	405, 489, 282, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 1290, 1338, 1380, 1291, 1340,
	261, 316, 268, 260, 561, 1391, 1370, 1254, 1319, 1379,
	0, 0, 225, 1382, 1314, 0, 1343, 0, 1397, 1249,
	1334, 0, 1252, 1256, 1393, 1375, 1285, 271, 0, 0,
	0, 0, 0, 0, 0, 1311, 1321, 1355, 1359, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 1283, 0,
	1330, 0, 0, 0, 1261, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1309, 0,
	0, 0, 0, 1264, 0, 1284, 1356, 0, 1247, 293,
	1258, 394, 253, 0, 445, 1363, 1374, 1306, 603, 1378,
	1304, 1303, 1350, 1262, 1369, 1297, 358, 1260, 325, 195,
	221, 0, 1295, 404, 453, 465, 1368, 1280, 1289, 249,
	1287, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 1329, 1348, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 570, 571, 252, 626,
	224, 597, 216, 1259, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	1275, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 1364, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 1353, 1396, 417, 464, 236, 583, 487, 197,
	1269, 1274, 1267, 0, 250, 251, 1335, 556, 1270, 1268,
	1324, 1325, 1271, 1387, 1388, 1389, 1372, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 1357, 1263, 0, 1272,
	1273, 1366, 1376, 1377, 646, 377, 477, 580, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 245, 206, 383, 391, 559,
	307, 212, 213, 214, 505, 506, 507, 508, 594, 595,
	599, 454, 455, 456, 457, 288, 589, 304, 460, 459,
	326, 327, 372, 441, 521, 523, 534, 538, 540, 542,
	548, 551, 522, 524, 535, 539, 541, 543, 549, 552,
	511, 513, 515, 517, 530, 529, 526, 554, 555, 532,
	537, 516, 528, 533, 546, 553, 550, 510, 514, 518,
	527, 545, 544, 525, 536, 547, 531, 519, 512, 520,
	1328, 194, 217, 361, 1392, 446, 284, 624, 593, 588,
	202, 219, 1266, 258, 1278, 1286, 0, 1292, 1300, 1301,
	1313, 1315, 1316, 1317, 1318, 1336, 1337, 1339, 1347, 1349,
	1352, 1354, 1361, 1373, 1395, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 296, 297, 436,
	437, 309, 310, 620, 621, 295, 577, 607, 575, 619,
	601, 430, 371, 1327, 1333, 374, 277, 300, 315, 1342,
	592, 493, 223, 458, 286, 247, 1360, 1362, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 1323, 1351, 369, 557, 558, 311, 389, 0,
	0, 0, 1381, 1365, 509, 0, 1308, 1384, 1277, 1296,
	1394, 1299, 1302, 1344, 1255, 1322, 408, 1293, 1248, 1281,
	1250, 1288, 1251, 1279, 1310, 266, 1276, 1367, 1326, 1383,
	359, 263, 1257, 1282, 422, 1298, 201, 1346, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 1390, 363, 1332, 0, 488, 393, 0, 0,
	0, 1312, 1371, 1320, 1358, 1307, 1345, 1265, 1331, 1385,
	1294, 1341, 1386, 318, 244, 320, 200, 405, 489, 282,
	0, 0, 0, 0, 0, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 344, 353, 352, 333, 334, 336, 338, 343,
	350, 356, 1290, 1338, 1380, 1291, 1340, 261, 316, 268,
	260, 561, 1391, 1370, 1254, 1319, 1379, 0, 0, 225,
	1382, 1314, 0, 1343, 0, 1397, 1249, 1334, 0, 1252,
	1256, 1393, 1375, 1285, 271, 0, 0, 0, 0, 0,
	0, 0, 1311, 1321, 1355, 1359, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 1283, 0, 1330, 0, 0,
	0, 1261, 1253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1309, 0, 0, 0, 0,
	1264, 0, 1284, 1356, 0, 1247, 293, 1258, 394, 253,
	0, 445, 1363, 1374, 1306, 603, 1378, 1304, 1303, 1350,
	1262, 1369, 1297, 358, 1260, 325, 195, 221, 0, 1295,
	404, 453, 465, 1368, 1280, 1289, 249, 1287, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 1329, 1348,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 570, 571, 252, 626, 224, 597, 216,
	1259, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 348, 349, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 1275, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	1364, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 1353,
	1396, 417, 464, 236, 583, 487, 197, 1269, 1274, 1267,
	0, 250, 251, 1335, 556, 1270, 1268, 1324, 1325, 1271,
	1387, 1388, 1389, 1372, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 1357, 1263, 0, 1272, 1273, 1366, 1376,
	1377, 646, 377, 477, 580, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 245, 206, 383, 391, 559, 307, 212, 213,
	214, 505, 506, 507, 508, 594, 595, 599, 454, 455,
	456, 457, 288, 589, 304, 460, 459, 326, 327, 372,
	441, 521, 523, 534, 538, 540, 542, 548, 551, 522,
	524, 535, 539, 541, 543, 549, 552, 511, 513, 515,
	517, 530, 529, 526, 554, 555, 532, 537, 516, 528,
	533, 546, 553, 550, 510, 514, 518, 527, 545, 544,
	525, 536, 547, 531, 519, 512, 520, 1328, 194, 217,
	361, 1392, 446, 284, 624, 593, 588, 202, 219, 1266,
	258, 1278, 1286, 0, 1292, 1300, 1301, 1313, 1315, 1316,
	1317, 1318, 1336, 1337, 1339, 1347, 1349, 1352, 1354, 1361,
	1373, 1395, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 296, 297, 436, 437, 309, 310,
	620, 621, 295, 577, 607, 575, 619, 601, 430, 371,
	1327, 1333, 374, 277, 300, 315, 1342, 592, 493, 223,
	458, 286, 247, 1360, 1362, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 1323,
	1351, 369, 557, 558, 311, 389, 0, 0, 0, 1381,
	1365, 509, 0, 1308, 1384, 1277, 1296, 1394, 1299, 1302,
	1344, 1255, 1322, 408, 1293, 1248, 1281, 1250, 1288, 1251,
	1279, 1310, 266, 1276, 1367, 1326, 1383, 359, 263, 1257,
	1282, 422, 1298, 201, 1346, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 1390,
	363, 1332, 0, 488, 393, 0, 0, 0, 1312, 1371,
	1320, 1358, 1307, 1345, 1265, 1331, 1385, 1294, 1341, 1386,
	318, 244, 320, 200, 405, 489, 282, 0, 0, 0,
	0, 0, 927, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 1290,
	1338, 1380, 1291, 1340, 261, 316, 268, 260, 561, 1391,
	1370, 1254, 1319, 1379, 0, 0, 225, 1382, 1314, 0,
	1343, 0, 1397, 1249, 1334, 0, 1252, 1256, 1393, 1375,
	1285, 271, 0, 0, 0, 0, 0, 0, 0, 1311,
	1321, 1355, 1359, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 1283, 0, 1330, 0, 0, 0, 1261, 1253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 0, 0, 0, 0, 1264, 0, 1284,
	1356, 0, 1247, 293, 1258, 394, 253, 0, 445, 1363,
	1374, 1306, 603, 1378, 1304, 1303, 1350, 1262, 1369, 1297,
	358, 1260, 325, 195, 221, 0, 1295, 404, 453, 465,
	1368, 1280, 1289, 249, 1287, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 1329, 1348, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 1259, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 1275, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 1364, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 1353, 1396, 417, 464,
	236, 583, 487, 197, 1269, 1274, 1267, 0, 250, 251,
	1335, 556, 1270, 1268, 1324, 1325, 1271, 1387, 1388, 1389,
	1372, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	1357, 1263, 0, 1272, 1273, 1366, 1376, 1377, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 1328, 194, 217, 361, 1392, 446,
	284, 624, 593, 588, 202, 219, 1266, 258, 1278, 1286,
	0, 1292, 1300, 1301, 1313, 1315, 1316, 1317, 1318, 1336,
	1337, 1339, 1347, 1349, 1352, 1354, 1361, 1373, 1395, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 1327, 1333, 374,
	277, 300, 315, 1342, 592, 493, 223, 458, 286, 247,
	1360, 1362, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 1323, 1351, 369, 557,
	558, 311, 389, 0, 0, 0, 0, 0, 509, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 736, 0, 0, 0, 266,
	741, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 747, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 93, 0, 0, 943, 927,
	720, 888, 931, 944, 945, 946, 947, 932, 0, 234,
	933, 934, 241, 935, 0, 887, 772, 774, 773, 837,
	838, 839, 840, 841, 842, 843, 770, 940, 948, 949,
	0, 261, 316, 268, 260, 561, 0, 0, 2136, 2137,
	2138, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 716, 733, 0, 746, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 731, 0, 0, 0,
	0, 882, 0, 732, 0, 0, 740, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 881, 0, 0, 603,
	0, 0, 879, 0, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	937, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 938, 939, 252,
	626, 778, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 786, 787, 276, 302,
	863, 862, 861, 301, 303, 859, 860, 858, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	869, 891, 880, 897, 898, 870, 871, 895, 872, 901,
	900, 892, 893, 749, 750, 899, 894, 896, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 883, 739, 738,
	0, 745, 0, 768, 769, 771, 775, 776, 777, 788,
	835, 836, 844, 846, 847, 845, 848, 849, 850, 853,
	854, 855, 856, 851, 852, 857, 752, 756, 753, 754,
	755, 767, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 911, 912, 913, 914, 915, 916, 781, 785,
	784, 782, 783, 779, 780, 807, 806, 808, 809, 810,
	811, 812, 813, 815, 814, 816, 817, 818, 819, 820,
	821, 789, 790, 793, 794, 792, 791, 795, 804, 805,
	796, 797, 798, 799, 800, 801, 803, 802, 822, 823,
	824, 825, 826, 828, 827, 831, 832, 830, 829, 834,
	833, 737, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 902, 258, 903, 0, 0, 907, 0,
	0, 0, 909, 908, 0, 910, 867, 866, 0, 0,
	904, 905, 0, 906, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 917, 918,
	919, 920, 921, 922, 923, 924, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 942, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 736, 0, 0, 0,
	266, 741, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 747, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 0, 0, 2344, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 93, 0, 0, 943,
	927, 720, 888, 931, 944, 945, 946, 947, 932, 0,
	234, 933, 934, 241, 935, 0, 887, 772, 774, 773,
	837, 838, 839, 840, 841, 842, 843, 770, 940, 948,
	949, 2345, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 716, 733, 0, 746, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 731, 0, 0,
	0, 0, 882, 0, 732, 0, 0, 740, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 881, 0, 0,
	603, 0, 0, 879, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 937, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 0, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 938, 939,
	252, 626, 778, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 786, 787, 276,
	302, 863, 862, 861, 301, 303, 859, 860, 858, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 869, 891, 880, 897, 898, 870, 871, 895, 872,
	901, 900, 892, 893, 749, 750, 899, 894, 896, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 883, 739,
	738, 0, 745, 0, 768, 769, 771, 775, 776, 777,
	788, 835, 836, 844, 846, 847, 845, 848, 849, 850,
	853, 854, 855, 856, 851, 852, 857, 752, 756, 753,
	754, 755, 767, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 911, 912, 913, 914, 915, 916, 781,
	785, 784, 782, 783, 779, 780, 807, 806, 808, 809,
	810, 811, 812, 813, 815, 814, 816, 817, 818, 819,
	820, 821, 789, 790, 793, 794, 792, 791, 795, 804,
	805, 796, 797, 798, 799, 800, 801, 803, 802, 822,
	823, 824, 825, 826, 828, 827, 831, 832, 830, 829,
	834, 833, 737, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 902, 258, 903, 0, 0, 907,
	0, 0, 0, 909, 908, 0, 910, 867, 866, 0,
	0, 904, 905, 0, 906, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 917,
	918, 919, 920, 921, 922, 923, 924, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 942, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 0, 389, 369, 557, 558, 311,
	84, 509, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 736, 0,
	0, 0, 266, 741, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 747,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	743, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 93, 0,
	0, 943, 927, 720, 888, 931, 944, 945, 946, 947,
	932, 0, 234, 933, 934, 241, 935, 0, 887, 772,
	774, 773, 837, 838, 839, 840, 841, 842, 843, 770,
	940, 948, 949, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 716, 733, 0, 746, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 731,
	0, 0, 0, 0, 882, 0, 732, 0, 0, 740,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 742, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 881,
	0, 0, 603, 0, 0, 879, 0, 0, 0, 0,
	358, 0, 325, 195, 221, 0, 0, 404, 453, 465,
	0, 0, 0, 937, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	938, 939, 252, 626, 778, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 786,
	787, 276, 302, 863, 862, 861, 301, 303, 859, 860,
	858, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 869, 891, 880, 897, 898, 870, 871,
	895, 872, 901, 900, 892, 893, 749, 750, 899, 894,
	896, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	883, 739, 738, 0, 745, 0, 768, 769, 771, 775,
	776, 777, 788, 835, 836, 844, 846, 847, 845, 848,
	849, 850, 853, 854, 855, 856, 851, 852, 857, 752,
	756, 753, 754, 755, 767, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 911, 912, 913, 914, 915,
	916, 781, 785, 784, 782, 783, 779, 780, 807, 806,
	808, 809, 810, 811, 812, 813, 815, 814, 816, 817,
	818, 819, 820, 821, 789, 790, 793, 794, 792, 791,
	795, 804, 805, 796, 797, 798, 799, 800, 801, 803,
	802, 822, 823, 824, 825, 826, 828, 827, 831, 832,
	830, 829, 834, 833, 737, 194, 217, 361, 92, 446,
	284, 624, 593, 588, 202, 219, 902, 258, 903, 0,
	0, 907, 0, 0, 0, 909, 908, 0, 910, 867,
	866, 0, 0, 904, 905, 0, 906, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 917, 918, 919, 920, 921, 922, 923, 924, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	942, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 736,
	0, 0, 0, 266, 741, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	747, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 743, 744, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 93,
	0, 0, 943, 927, 720, 888, 931, 944, 945, 946,
	947, 932, 0, 234, 933, 934, 241, 935, 0, 887,
	772, 774, 773, 837, 838, 839, 840, 841, 842, 843,
	770, 940, 948, 949, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 716, 733, 0, 746, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 730,
	731, 0, 0, 0, 0, 882, 0, 732, 0, 0,
	740, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 742, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	881, 0, 0, 603, 0, 0, 879, 0, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 937, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 3942, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 938, 939, 252, 626, 778, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	786, 787, 276, 302, 863, 862, 861, 301, 303, 859,
	860, 858, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 869, 891, 880, 897, 898, 870,
	871, 895, 872, 901, 900, 892, 893, 749, 750, 899,
	894, 896, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 883, 739, 738, 0, 745, 0, 768, 769, 771,
	775, 776, 777, 788, 835, 836, 844, 846, 847, 845,
	848, 849, 850, 853, 854, 855, 856, 851, 852, 857,
	752, 756, 753, 754, 755, 767, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 911, 912, 913, 914,
	915, 916, 781, 785, 784, 782, 783, 779, 780, 807,
	806, 808, 809, 810, 811, 812, 813, 815, 814, 816,
	817, 818, 819, 820, 821, 789, 790, 793, 794, 792,
	791, 795, 804, 805, 796, 797, 798, 799, 800, 801,
	803, 802, 822, 823, 824, 825, 826, 828, 827, 831,
	832, 830, 829, 834, 833, 737, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 902, 258, 903,
	0, 0, 907, 0, 0, 0, 909, 908, 0, 910,
	867, 866, 0, 0, 904, 905, 0, 906, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 917, 918, 919, 920, 921, 922, 923, 924,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 942, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 389, 0, 369,
	557, 558, 311, 509, 0, 748, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	736, 0, 0, 0, 266, 741, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 201, 0, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 747, 363, 0, 0, 488, 393, 0, 0, 0,
	0, 0, 743, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 244, 320, 200, 405, 489, 282, 0,
	93, 0, 1698, 943, 927, 720, 888, 931, 944, 945,
	946, 947, 932, 0, 234, 933, 934, 241, 935, 0,
	887, 772, 774, 773, 837, 838, 839, 840, 841, 842,
	843, 770, 940, 948, 949, 0, 261, 316, 268, 260,
	561, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 716, 733, 0, 746,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 731, 0, 0, 0, 0, 882, 0, 732, 0,
	0, 740, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 991, 742, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	445, 881, 0, 0, 603, 0, 0, 879, 0, 0,
	0, 0, 358, 0, 325, 195, 221, 0, 0, 404,
	453, 465, 0, 0, 0, 937, 0, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 0, 0, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 938, 939, 252, 626, 778, 597, 216, 0,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 786, 787, 276, 302, 863, 862, 861, 301, 303,
	859, 860, 858, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 0, 0,
	417, 464, 236, 583, 487, 869, 891, 880, 897, 898,
	870, 871, 895, 872, 901, 900, 892, 893, 749, 750,
	899, 894, 896, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 883, 739, 738, 0, 745, 0, 768, 769,
	771, 775, 776, 777, 788, 835, 836, 844, 846, 847,
	845, 848, 849, 850, 853, 854, 855, 856, 851, 852,
	857, 752, 756, 753, 754, 755, 767, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 911, 912, 913,
	914, 915, 916, 781, 785, 784, 782, 783, 779, 780,
	807, 806, 808, 809, 810, 811, 812, 813, 815, 814,
	816, 817, 818, 819, 820, 821, 789, 790, 793, 794,
	792, 791, 795, 804, 805, 796, 797, 798, 799, 800,
	801, 803, 802, 822, 823, 824, 825, 826, 828, 827,
	831, 832, 830, 829, 834, 833, 737, 194, 217, 361,
	0, 446, 284, 624, 593, 588, 202, 219, 902, 258,
	903, 0, 0, 907, 0, 0, 0, 909, 908, 0,
	910, 867, 866, 0, 0, 904, 905, 0, 906, 0,
	0, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 917, 918, 919, 920, 921, 922, 923,
	924, 295, 577, 607, 575, 619, 601, 430, 371, 0,
	0, 374, 277, 300, 315, 0, 592, 493, 223, 458,
	286, 247, 942, 0, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 389, 0,
	369, 557, 558, 311, 509, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 736, 0, 0, 0, 266, 741, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 201, 0, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 747, 363, 0, 0, 488, 393, 0, 0,
	0, 0, 0, 743, 744, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 244, 320, 200, 405, 489, 282,
	0, 93, 0, 0, 943, 927, 720, 888, 931, 944,
	945, 946, 947, 932, 0, 234, 933, 934, 241, 935,
	0, 887, 772, 774, 773, 837, 838, 839, 840, 841,
	842, 843, 770, 940, 948, 949, 0, 261, 316, 268,
	260, 561, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 716, 733, 0,
	746, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 730, 731, 1032, 0, 0, 0, 882, 0, 732,
	0, 0, 740, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 445, 881, 0, 0, 603, 0, 0, 879, 0,
	0, 0, 0, 358, 0, 325, 195, 221, 0, 0,
	404, 453, 465, 0, 0, 0, 937, 0, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 0, 0,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 938, 939, 252, 626, 778, 597, 216,
	0, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 786, 787, 276, 302, 863, 862, 861, 301,
	303, 859, 860, 858, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 0,
	0, 417, 464, 236, 583, 487, 869, 891, 880, 897,
	898, 870, 871, 895, 872, 901, 900, 892, 893, 749,
	750, 899, 894, 896, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 883, 739, 738, 0, 745, 0, 768,
	769, 771, 775, 776, 777, 788, 835, 836, 844, 846,
	847, 845, 848, 849, 850, 853, 854, 855, 856, 851,
	852, 857, 752, 756, 753, 754, 755, 767, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 911, 912,
	913, 914, 915, 916, 781, 785, 784, 782, 783, 779,
	780, 807, 806, 808, 809, 810, 811, 812, 813, 815,
	814, 816, 817, 818, 819, 820, 821, 789, 790, 793,
	794, 792, 791, 795, 804, 805, 796, 797, 798, 799,
	800, 801, 803, 802, 822, 823, 824, 825, 826, 828,
	827, 831, 832, 830, 829, 834, 833, 737, 194, 217,
	361, 0, 446, 284, 624, 593, 588, 202, 219, 902,
	258, 903, 0, 0, 907, 0, 0, 0, 909, 908,
	0, 910, 867, 866, 0, 0, 904, 905, 0, 906,
	0, 0, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 917, 918, 919, 920, 921, 922,
	923, 924, 295, 577, 607, 575, 619, 601, 430, 371,
	0, 0, 374, 277, 300, 315, 0, 592, 493, 223,
	458, 286, 247, 942, 0, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 389,
	0, 369, 557, 558, 311, 509, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 736, 0, 0, 0, 266, 741, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 201, 0, 478,
	248, 370, 367, 564, 278, 269, 265, 246, 312, 378,
	420, 499, 414, 747, 363, 0, 0, 488, 393, 0,
	0, 0, 0, 0, 743, 744, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 244, 320, 200, 405, 489,
	282, 0, 93, 0, 0, 943, 927, 720, 888, 931,
	944, 945, 946, 947, 932, 0, 234, 933, 934, 241,
	935, 0, 887, 772, 774, 773, 837, 838, 839, 840,
	841, 842, 843, 770, 940, 948, 949, 0, 261, 316,
	268, 260, 561, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 716, 733,
	0, 746, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 731, 0, 0, 0, 0, 882, 0,
	732, 0, 0, 740, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 445, 881, 0, 0, 603, 0, 0, 879,
	0, 0, 0, 0, 358, 0, 325, 195, 221, 0,
	0, 404, 453, 465, 0, 0, 0, 937, 0, 463,
	418, 581, 229, 280, 450, 424, 461, 432, 283, 0,
	0, 462, 365, 566, 442, 578, 604, 605, 259, 398,
	590, 503, 598, 622, 222, 256, 412, 496, 584, 485,
	390, 562, 563, 324, 484, 291, 199, 362, 610, 220,
	471, 364, 238, 227, 568, 587, 285, 448, 617, 209,
	498, 576, 235, 475, 0, 0, 625, 243, 495, 211,
	573, 494, 386, 321, 322, 210, 0, 449, 264, 289,
	0, 0, 254, 407, 938, 939, 252, 626, 778, 597,
	216, 0, 596, 400, 565, 574, 387, 376, 215, 572,
	385, 375, 329, 786, 787, 276, 302, 863, 862, 861,
	301, 303, 859, 860, 858, 203, 585, 0, 204, 0,
	490, 586, 627, 444, 208, 230, 231, 233, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 560, 579, 591, 602, 608, 609, 611, 612,
	613, 614, 615, 618, 616, 399, 306, 486, 328, 366,
	0, 0, 417, 464, 236, 583, 487, 869, 891, 880,
	897, 898, 870, 871, 895, 872, 901, 900, 892, 893,
	749, 750, 899, 894, 896, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 623, 883, 739, 738, 0, 745, 0,
	768, 769, 771, 775, 776, 777, 788, 835, 836, 844,
	846, 847, 845, 848, 849, 850, 853, 854, 855, 856,
	851, 852, 857, 752, 756, 753, 754, 755, 767, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 911,
	912, 913, 914, 915, 916, 781, 785, 784, 782, 783,
	779, 780, 807, 806, 808, 809, 810, 811, 812, 813,
	815, 814, 816, 817, 818, 819, 820, 821, 789, 790,
	793, 794, 792, 791, 795, 804, 805, 796, 797, 798,
	799, 800, 801, 803, 802, 822, 823, 824, 825, 826,
	828, 827, 831, 832, 830, 829, 834, 833, 737, 194,
	217, 361, 0, 446, 284, 624, 593, 588, 202, 219,
	902, 258, 903, 0, 0, 907, 0, 0, 0, 909,
	908, 0, 910, 867, 866, 0, 0, 904, 905, 0,
	906, 0, 0, 196, 198, 205, 218, 228, 232, 239,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 567,
	569, 582, 600, 606, 472, 917, 918, 919, 920, 921,
	922, 923, 924, 295, 577, 607, 575, 619, 601, 430,
	371, 0, 0, 374, 277, 300, 315, 0, 592, 493,
	223, 458, 286, 247, 942, 0, 207, 242, 226, 255,
	270, 273, 319, 384, 392, 421, 426, 292, 267, 240,
	451, 237, 476, 500, 501, 502, 504, 388, 262, 425,
	389, 0, 369, 557, 558, 311, 509, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 736, 0, 0, 0, 266, 741, 0,
	0, 0, 359, 263, 0, 0, 422, 0, 201, 0,
	478, 248, 370, 367, 564, 278, 269, 265, 246, 312,
	378, 420, 499, 414, 747, 363, 0, 0, 488, 393,
	0, 0, 0, 0, 0, 743, 744, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 244, 320, 200, 405,
	489, 282, 0, 93, 0, 0, 943, 927, 720, 888,
	931, 944, 945, 946, 947, 932, 0, 234, 933, 934,
	241, 935, 0, 887, 772, 774, 773, 837, 838, 839,
	840, 841, 842, 843, 770, 940, 948, 949, 0, 261,
	316, 268, 260, 561, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 716,
	733, 0, 746, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 730, 731, 0, 0, 0, 0, 882,
	0, 732, 0, 0, 740, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 3051, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 445, 881, 0, 0, 603, 0, 0,
	879, 0, 0, 0, 0, 358, 0, 325, 195, 221,
	0, 0, 404, 453, 465, 0, 0, 0, 937, 0,
	463, 418, 581, 229, 280, 450, 424, 461, 432, 283,
	0, 0, 462, 365, 566, 442, 578, 604, 605, 259,
	398, 590, 503, 598, 622, 222, 256, 412, 496, 584,
	485, 390, 562, 563, 324, 484, 291, 199, 362, 610,
	220, 471, 364, 238, 227, 568, 587, 285, 448, 617,
	209, 498, 576, 235, 475, 0, 0, 625, 243, 495,
	211, 573, 494, 386, 321, 322, 210, 0, 449, 264,
	289, 0, 0, 254, 407, 938, 939, 252, 626, 778,
	597, 216, 0, 596, 400, 565, 574, 387, 376, 215,
	572, 385, 375, 329, 786, 787, 276, 302, 863, 862,
	861, 301, 303, 859, 860, 858, 203, 585, 0, 204,
	0, 490, 586, 627, 444, 208, 230, 231, 233, 0,
	275, 279, 287, 290, 298, 299, 308, 360, 411, 438,
	434, 443, 0, 560, 579, 591, 602, 608, 609, 611,
	612, 613, 614, 615, 618, 616, 399, 306, 486, 328,
	366, 0, 0, 417, 464, 236, 583, 487, 869, 891,
	880, 897, 898, 870, 871, 895, 872, 901, 900, 892,
	893, 749, 750, 899, 894, 896, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 623, 883, 739, 738, 0, 745,
	0, 768, 769, 771, 775, 776, 777, 788, 835, 836,
	844, 846, 847, 845, 848, 849, 850, 853, 854, 855,
	856, 851, 852, 857, 752, 756, 753, 754, 755, 767,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	911, 912, 913, 914, 915, 916, 781, 785, 784, 782,
	783, 779, 780, 807, 806, 808, 809, 810, 811, 812,
	813, 815, 814, 816, 817, 818, 819, 820, 821, 789,
	790, 793, 794, 792, 791, 795, 804, 805, 796, 797,
	798, 799, 800, 801, 803, 802, 822, 823, 824, 825,
	826, 828, 827, 831, 832, 830, 829, 834, 833, 737,
	194, 217, 361, 0, 446, 284, 624, 593, 588, 202,
	219, 902, 258, 903, 0, 0, 907, 0, 0, 0,
	909, 908, 0, 910, 867, 866, 0, 0, 904, 905,
	0, 906, 0, 0, 196, 198, 205, 218, 228, 232,
	239, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	567, 569, 582, 600, 606, 472, 917, 918, 919, 920,
	921, 922, 923, 924, 295, 577, 607, 575, 619, 601,
	430, 371, 0, 0, 374, 277, 300, 315, 0, 592,
	493, 223, 458, 286, 247, 942, 0, 207, 242, 226,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	240, 451, 237, 476, 500, 501, 502, 504, 388, 262,
	425, 389, 0, 369, 557, 558, 311, 509, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 736, 0, 0, 0, 266, 741,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 201,
	0, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 747, 363, 0, 0, 488,
	393, 0, 0, 0, 0, 0, 743, 744, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 244, 320, 200,
	405, 489, 282, 0, 93, 0, 0, 943, 927, 720,
	888, 931, 944, 945, 946, 947, 932, 0, 234, 933,
	934, 241, 935, 0, 887, 772, 774, 773, 837, 838,
	839, 840, 841, 842, 843, 770, 940, 948, 949, 0,
	261, 316, 268, 260, 561, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	716, 733, 0, 746, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 730, 731, 0, 0, 0, 0,
	882, 0, 732, 0, 0, 740, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 3047, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 394, 253, 0, 445, 881, 0, 0, 603, 0,
	0, 879, 0, 0, 0, 0, 358, 0, 325, 195,
	221, 0, 0, 404, 453, 465, 0, 0, 0, 937,
	0, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 0, 0, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 938, 939, 252, 626,
	778, 597, 216, 0, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 786, 787, 276, 302, 863,
	862, 861, 301, 303, 859, 860, 858, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 0, 0, 417, 464, 236, 583, 487, 869,
	891, 880, 897, 898, 870, 871, 895, 872, 901, 900,
	892, 893, 749, 750, 899, 894, 896, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 883, 739, 738, 0,
	745, 0, 768, 769, 771, 775, 776, 777, 788, 835,
	836, 844, 846, 847, 845, 848, 849, 850, 853, 854,
	855, 856, 851, 852, 857, 752, 756, 753, 754, 755,
	767, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 911, 912, 913, 914, 915, 916, 781, 785, 784,
	782, 783, 779, 780, 807, 806, 808, 809, 810, 811,
	812, 813, 815, 814, 816, 817, 818, 819, 820, 821,
	789, 790, 793, 794, 792, 791, 795, 804, 805, 796,
	797, 798, 799, 800, 801, 803, 802, 822, 823, 824,
	825, 826, 828, 827, 831, 832, 830, 829, 834, 833,
	737, 194, 217, 361, 0, 446, 284, 624, 593, 588,
	202, 219, 902, 258, 903, 0, 0, 907, 0, 0,
	0, 909, 908, 0, 910, 867, 866, 0, 0, 904,
	905, 0, 906, 0, 0, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 917, 918, 919,
	920, 921, 922, 923, 924, 295, 577, 607, 575, 619,
	601, 430, 371, 0, 0, 374, 277, 300, 315, 0,
	592, 493, 223, 458, 286, 247, 942, 0, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 389, 0, 369, 557, 558, 311, 509, 0,
	748, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 736, 0, 0, 0, 266,
	741, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 747, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 743, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 93, 0, 0, 943, 927,
	1053, 888, 931, 944, 945, 946, 947, 932, 0, 234,
	933, 934, 241, 935, 0, 887, 772, 774, 773, 837,
	838, 839, 840, 841, 842, 843, 770, 940, 948, 949,
	0, 261, 316, 268, 260, 561, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 746, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 730, 731, 0, 0, 0,
	0, 882, 0, 732, 0, 0, 740, 950, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 881, 0, 0, 603,
	0, 0, 879, 0, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	937, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 938, 939, 252,
	626, 778, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 786, 787, 276, 302,
	863, 862, 861, 301, 303, 859, 860, 858, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	869, 891, 880, 897, 898, 870, 871, 895, 872, 901,
	900, 892, 893, 749, 750, 899, 894, 896, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 883, 739, 738,
	0, 745, 0, 768, 769, 771, 775, 776, 777, 788,
	835, 836, 844, 846, 847, 845, 848, 849, 850, 853,
	854, 855, 856, 851, 852, 857, 752, 756, 753, 754,
	755, 767, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 911, 912, 913, 914, 915, 916, 781, 785,
	784, 782, 783, 779, 780, 807, 806, 808, 809, 810,
	811, 812, 813, 815, 814, 816, 817, 818, 819, 820,
	821, 789, 790, 793, 794, 792, 791, 795, 804, 805,
	796, 797, 798, 799, 800, 801, 803, 802, 822, 823,
	824, 825, 826, 828, 827, 831, 832, 830, 829, 834,
	833, 737, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 902, 258, 903, 0, 0, 907, 0,
	0, 0, 909, 908, 0, 910, 867, 866, 0, 0,
	904, 905, 0, 906, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 917, 918,
	919, 920, 921, 922, 923, 924, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 942, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 748, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 736, 0, 0, 0,
	266, 741, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 747, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 743, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 93, 0, 0, 943,
	927, 1053, 888, 931, 944, 945, 946, 947, 932, 0,
	234, 933, 934, 241, 935, 0, 887, 772, 774, 773,
	837, 838, 839, 840, 841, 842, 843, 770, 940, 948,
	949, 0, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 733, 0, 746, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 731, 0, 0,
	0, 0, 882, 0, 732, 0, 0, 740, 950, 951,
	952, 953, 954, 955, 956, 957, 958, 959, 960, 961,
	962, 963, 964, 965, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	2051, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 881, 0, 0,
	603, 0, 0, 879, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 937, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 0, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 938, 939,
	252, 626, 778, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 786, 787, 276,
	302, 863, 862, 861, 301, 303, 859, 860, 858, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 869, 891, 880, 897, 898, 870, 871, 895, 872,
	901, 900, 892, 893, 749, 750, 899, 894, 896, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 883, 739,
	738, 0, 745, 0, 768, 769, 771, 775, 776, 777,
	788, 835, 836, 844, 846, 847, 845, 848, 849, 850,
	853, 854, 855, 856, 851, 852, 857, 752, 756, 753,
	754, 755, 767, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 911, 912, 913, 914, 915, 916, 781,
	785, 784, 782, 783, 779, 780, 807, 806, 808, 809,
	810, 811, 812, 813, 815, 814, 816, 817, 818, 819,
	820, 821, 789, 790, 793, 794, 792, 791, 795, 804,
	805, 796, 797, 798, 799, 800, 801, 803, 802, 822,
	823, 824, 825, 826, 828, 827, 831, 832, 830, 829,
	834, 833, 737, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 902, 258, 903, 0, 0, 907,
	0, 0, 0, 909, 908, 0, 910, 867, 866, 0,
	0, 904, 905, 0, 906, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 917,
	918, 919, 920, 921, 922, 923, 924, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 942, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 389, 0, 369, 557, 558, 311,
	509, 0, 748, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 736, 0, 0,
	0, 266, 741, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 201, 0, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 747, 363,
	0, 0, 488, 393, 0, 0, 0, 0, 0, 743,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	244, 320, 200, 405, 489, 282, 0, 93, 0, 0,
	943, 927, 1053, 888, 931, 944, 945, 946, 947, 932,
	0, 234, 933, 934, 241, 935, 0, 887, 772, 774,
	773, 837, 838, 839, 840, 841, 842, 843, 770, 940,
	948, 949, 0, 261, 316, 268, 260, 561, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 733, 0, 746, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 730, 731, 0,
	0, 0, 0, 882, 0, 732, 0, 0, 740, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 2049, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 445, 881, 0,
	0, 603, 0, 0, 879, 0, 0, 0, 0, 358,
	0, 325, 195, 221, 0, 0, 404, 453, 465, 0,
	0, 0, 937, 0, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 0, 0, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 938,
	939, 252, 626, 778, 597, 216, 0, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 786, 787,
	276, 302, 863, 862, 861, 301, 303, 859, 860, 858,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 0, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 0, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 0, 0, 417, 464, 236,
	583, 487, 869, 891, 880, 897, 898, 870, 871, 895,
	872, 901, 900, 892, 893, 749, 750, 899, 894, 896,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 883,
	739, 738, 0, 745, 0, 768, 769, 771, 775, 776,
	777, 788, 835, 836, 844, 846, 847, 845, 848, 849,
	850, 853, 854, 855, 856, 851, 852, 857, 752, 756,
	753, 754, 755, 767, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 911, 912, 913, 914, 915, 916,
	781, 785, 784, 782, 783, 779, 780, 807, 806, 808,
	809, 810, 811, 812, 813, 815, 814, 816, 817, 818,
	819, 820, 821, 789, 790, 793, 794, 792, 791, 795,
	804, 805, 796, 797, 798, 799, 800, 801, 803, 802,
	822, 823, 824, 825, 826, 828, 827, 831, 832, 830,
	829, 834, 833, 737, 194, 217, 361, 0, 446, 284,
	624, 593, 588, 202, 219, 902, 258, 903, 0, 0,
	907, 0, 0, 0, 909, 908, 0, 910, 867, 866,
	0, 0, 904, 905, 0, 906, 0, 0, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	917, 918, 919, 920, 921, 922, 923, 924, 295, 577,
	607, 575, 619, 601, 430, 371, 0, 0, 374, 277,
	300, 315, 0, 592, 493, 223, 458, 286, 247, 942,
	0, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 389, 0, 369, 557, 558,
	311, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 0,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 0, 0,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 0,
	0, 1103, 603, 0, 0, 0, 0, 0, 1100, 1101,
	358, 1061, 325, 195, 221, 1094, 1098, 404, 453, 465,
	0, 0, 0, 249, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 197, 0, 0, 0, 0, 250, 251,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 0, 194, 217, 361, 0, 446,
	284, 624, 593, 588, 202, 219, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	0, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	0, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 0, 1661, 927, 0, 0, 1658, 0, 0, 0,
	0, 1656, 0, 234, 1657, 1655, 241, 1660, 0, 887,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	0, 0, 0, 0, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 249, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 0, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 197, 0, 0, 0, 0, 250,
	251, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 0, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 0, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 0, 389, 369,
	557, 558, 311, 84, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 201, 0, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 0, 363, 0, 0, 488, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 244, 320, 200, 405, 489, 282,
	0, 93, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 344, 353, 352, 333, 334, 336, 338, 343,
	350, 356, 0, 0, 0, 0, 0, 261, 316, 268,
	260, 561, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 445, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 325, 195, 221, 0, 0,
	404, 453, 465, 0, 0, 0, 249, 0, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 0, 0,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 570, 571, 252, 626, 224, 597, 216,
	0, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 348, 349, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 0,
	0, 417, 464, 236, 583, 487, 197, 0, 0, 0,
	0, 250, 251, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 377, 477, 580, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 245, 206, 383, 391, 559, 307, 212, 213,
	214, 505, 506, 507, 508, 594, 595, 599, 454, 455,
	456, 457, 288, 589, 304, 460, 459, 326, 327, 372,
	441, 521, 523, 534, 538, 540, 542, 548, 551, 522,
	524, 535, 539, 541, 543, 549, 552, 511, 513, 515,
	517, 530, 529, 526, 554, 555, 532, 537, 516, 528,
	533, 546, 553, 550, 510, 514, 518, 527, 545, 544,
	525, 536, 547, 531, 519, 512, 520, 0, 194, 217,
	361, 92, 446, 284, 624, 593, 588, 202, 219, 0,
	258, 0, 0, 0, 0, 0, 0, 2331, 0, 0,
	2330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 296, 297, 436, 437, 309, 310,
	620, 621, 295, 577, 607, 575, 619, 601, 430, 371,
	0, 0, 374, 277, 300, 315, 0, 592, 493, 223,
	458, 286, 247, 0, 0, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 1717,
	0, 369, 557, 558, 311, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 1719, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 201, 0, 478,
	248, 370, 367, 564, 278, 269, 265, 246, 312, 378,
	420, 499, 414, 0, 363, 0, 0, 488, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 244, 320, 200, 405, 489,
	282, 0, 0, 0, 0, 1721, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 561, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 1435, 0, 1436, 1437, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 445, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 195, 221, 0,
	0, 404, 453, 465, 0, 0, 0, 249, 0, 463,
	418, 581, 229, 280, 450, 424, 461, 432, 283, 0,
	0, 462, 365, 566, 442, 578, 604, 605, 259, 398,
	590, 503, 598, 622, 222, 256, 412, 496, 584, 485,
	390, 562, 563, 324, 484, 291, 199, 362, 610, 220,
	471, 364, 238, 227, 568, 587, 285, 448, 617, 209,
	498, 576, 235, 475, 0, 0, 625, 243, 495, 211,
	573, 494, 386, 321, 322, 210, 0, 449, 264, 289,
	0, 0, 254, 407, 570, 571, 252, 626, 224, 597,
	216, 0, 596, 400, 565, 574, 387, 376, 215, 572,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 203, 585, 0, 204, 0,
	490, 586, 627, 444, 208, 230, 231, 233, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 560, 579, 591, 602, 608, 609, 611, 612,
	613, 614, 615, 618, 616, 399, 306, 486, 328, 366,
	0, 0, 417, 464, 236, 583, 487, 197, 0, 0,
	0, 0, 250, 251, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 377, 477, 580, 330, 342, 345, 335,
	354, 0, 355, 331, 332, 337, 339, 340, 341, 346,
	347, 351, 357, 245, 206, 383, 391, 559, 307, 212,
	213, 214, 505, 506, 507, 508, 594, 595, 599, 454,
	455, 456, 457, 288, 589, 304, 460, 459, 326, 327,
	372, 441, 521, 523, 534, 538, 540, 542, 548, 551,
	522, 524, 535, 539, 541, 543, 549, 552, 511, 513,
	515, 517, 530, 529, 526, 554, 555, 532, 537, 516,
	528, 533, 546, 553, 550, 510, 514, 518, 527, 545,
	544, 525, 536, 547, 531, 519, 512, 520, 0, 194,
	217, 361, 0, 446, 284, 624, 593, 588, 202, 219,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 205, 218, 228, 232, 239,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 567,
	569, 582, 600, 606, 472, 296, 297, 436, 437, 309,
	310, 620, 621, 295, 577, 607, 575, 619, 601, 430,
	371, 0, 0, 374, 277, 300, 315, 0, 592, 493,
	223, 458, 286, 247, 0, 0, 207, 242, 226, 255,
	270, 273, 319, 384, 392, 421, 426, 292, 267, 240,
	451, 237, 476, 500, 501, 502, 504, 388, 262, 425,
	0, 389, 369, 557, 558, 311, 84, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 201,
	0, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 0, 363, 0, 0, 488,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 244, 320, 200,
	405, 489, 282, 0, 93, 0, 1698, 0, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 561, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 394, 253, 0, 445, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 195,
	221, 0, 0, 404, 453, 465, 0, 0, 0, 249,
	0, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 0, 0, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 570, 571, 252, 626,
	224, 597, 216, 0, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 0, 0, 417, 464, 236, 583, 487, 197,
	0, 0, 0, 0, 250, 251, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 377, 477, 580, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 245, 206, 383, 391, 559,
	307, 212, 213, 214, 505, 506, 507, 508, 594, 595,
	599, 454, 455, 456, 457, 288, 589, 304, 460, 459,
	326, 327, 372, 441, 521, 523, 534, 538, 540, 542,
	548, 551, 522, 524, 535, 539, 541, 543, 549, 552,
	511, 513, 515, 517, 530, 529, 526, 554, 555, 532,
	537, 516, 528, 533, 546, 553, 550, 510, 514, 518,
	527, 545, 544, 525, 536, 547, 531, 519, 512, 520,
	0, 194, 217, 361, 92, 446, 284, 624, 593, 588,
	202, 219, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 296, 297, 436,
	437, 309, 310, 620, 621, 295, 577, 607, 575, 619,
	601, 430, 371, 0, 0, 374, 277, 300, 315, 0,
	592, 493, 223, 458, 286, 247, 0, 0, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 389, 0, 369, 557, 558, 311, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 0, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 93, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 344, 353, 352, 333,
	334, 336, 338, 343, 350, 356, 0, 0, 0, 0,
	0, 261, 316, 268, 260, 561, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 0, 0, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	249, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 570, 571, 252,
	626, 224, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 348, 349, 276, 302,
	439, 368, 440, 301, 303, 396, 395, 397, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	197, 0, 0, 0, 0, 250, 251, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 377, 477, 580, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 245, 206, 383, 391,
	559, 307, 212, 213, 214, 505, 506, 507, 508, 594,
	595, 599, 454, 455, 456, 457, 288, 589, 304, 460,
	459, 326, 327, 372, 441, 521, 523, 534, 538, 540,
	542, 548, 551, 522, 524, 535, 539, 541, 543, 549,
	552, 511, 513, 515, 517, 530, 529, 526, 554, 555,
	532, 537, 516, 528, 533, 546, 553, 550, 510, 514,
	518, 527, 545, 544, 525, 536, 547, 531, 519, 512,
	520, 0, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 0, 258, 0, 0, 0, 0, 0,
	0, 2331, 0, 0, 2330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 296, 297,
	436, 437, 309, 310, 620, 621, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 0, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 2281, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 0, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 0, 0, 0, 1900,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 249, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 2279, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 570, 571,
	252, 626, 224, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 197, 0, 0, 0, 0, 250, 251, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 377, 477, 580,
	330, 342, 345, 335, 354, 0, 355, 331, 332, 337,
	339, 340, 341, 346, 347, 351, 357, 245, 206, 383,
	391, 559, 307, 212, 213, 214, 505, 506, 507, 508,
	594, 595, 599, 454, 455, 456, 457, 288, 589, 304,
	460, 459, 326, 327, 372, 441, 521, 523, 534, 538,
	540, 542, 548, 551, 522, 524, 535, 539, 541, 543,
	549, 552, 511, 513, 515, 517, 530, 529, 526, 554,
	555, 532, 537, 516, 528, 533, 546, 553, 550, 510,
	514, 518, 527, 545, 544, 525, 536, 547, 531, 519,
	512, 520, 0, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 296,
	297, 436, 437, 309, 310, 620, 621, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 0, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 389, 0, 369, 557, 558, 311,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 201, 0, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 0, 363,
	0, 0, 488, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	244, 320, 200, 405, 489, 282, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 0, 0,
	0, 0, 0, 261, 316, 268, 260, 561, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1055,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 445, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 358,
	1061, 325, 195, 221, 1059, 0, 404, 453, 465, 0,
	0, 0, 249, 0, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 0, 0, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 570,
	571, 252, 626, 224, 597, 216, 0, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 0, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 0, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 0, 0, 417, 464, 236,
	583, 487, 197, 0, 0, 0, 0, 250, 251, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 377, 477,
	580, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 245, 206,
	383, 391, 559, 307, 212, 213, 214, 505, 506, 507,
	508, 594, 595, 599, 454, 455, 456, 457, 288, 589,
	304, 460, 459, 326, 327, 372, 441, 521, 523, 534,
	538, 540, 542, 548, 551, 522, 524, 535, 539, 541,
	543, 549, 552, 511, 513, 515, 517, 530, 529, 526,
	554, 555, 532, 537, 516, 528, 533, 546, 553, 550,
	510, 514, 518, 527, 545, 544, 525, 536, 547, 531,
	519, 512, 520, 0, 194, 217, 361, 0, 446, 284,
	624, 593, 588, 202, 219, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	296, 297, 436, 437, 309, 310, 620, 621, 295, 577,
	607, 575, 619, 601, 430, 371, 0, 0, 374, 277,
	300, 315, 0, 592, 493, 223, 458, 286, 247, 0,
	0, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 389, 0, 369, 557, 558,
	311, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 2281, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 0,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 0, 0,
	0, 1900, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 195, 221, 0, 0, 404, 453, 465,
	0, 0, 0, 249, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 197, 0, 0, 0, 0, 250, 251,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 0, 194, 217, 361, 0, 446,
	284, 624, 593, 588, 202, 219, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	0, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	0, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 1698, 0, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	0, 0, 0, 0, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	0, 0, 0, 603, 0, 0, 0, 3852, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 249, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 0, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 197, 0, 0, 0, 0, 250,
	251, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 0, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 0, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 389, 0, 369,
	557, 558, 311, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 201, 0, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 0, 363, 0, 0, 488, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 244, 320, 200, 405, 489, 282, 0,
	0, 0, 0, 2060, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	561, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2061, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	445, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 195, 221, 0, 0, 404,
	453, 465, 0, 0, 0, 249, 0, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 0, 0, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 570, 571, 252, 626, 224, 597, 216, 0,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 0, 0,
	417, 464, 236, 583, 487, 197, 0, 0, 0, 0,
	250, 251, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 377, 477, 580, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 245, 206, 383, 391, 559, 307, 212, 213, 214,
	505, 506, 507, 508, 594, 595, 599, 454, 455, 456,
	457, 288, 589, 304, 460, 459, 326, 327, 372, 441,
	521, 523, 534, 538, 540, 542, 548, 551, 522, 524,
	535, 539, 541, 543, 549, 552, 511, 513, 515, 517,
	530, 529, 526, 554, 555, 532, 537, 516, 528, 533,
	546, 553, 550, 510, 514, 518, 527, 545, 544, 525,
	536, 547, 531, 519, 512, 520, 0, 194, 217, 361,
	0, 446, 284, 624, 593, 588, 202, 219, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 296, 297, 436, 437, 309, 310, 620,
	621, 295, 577, 607, 575, 619, 601, 430, 371, 0,
	0, 374, 277, 300, 315, 0, 592, 493, 223, 458,
	286, 247, 0, 0, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 389, 0,
	369, 557, 558, 311, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 201, 0, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 0, 363, 0, 0, 488, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 244, 320, 200, 405, 489, 282,
	0, 0, 0, 0, 2773, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 344, 353, 352, 333, 334, 336, 338, 343,
	350, 356, 0, 0, 0, 0, 0, 261, 316, 268,
	260, 561, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 445, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 325, 195, 221, 0, 0,
	404, 453, 465, 0, 0, 0, 249, 0, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 0, 0,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 570, 571, 252, 626, 224, 597, 216,
	0, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 348, 349, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 0,
	0, 417, 464, 236, 583, 487, 197, 0, 0, 0,
	0, 250, 251, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 377, 477, 580, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 245, 206, 383, 391, 559, 307, 212, 213,
	214, 505, 506, 507, 508, 594, 595, 599, 454, 455,
	456, 457, 288, 589, 304, 460, 459, 326, 327, 372,
	441, 521, 523, 534, 538, 540, 542, 548, 551, 522,
	524, 535, 539, 541, 543, 549, 552, 511, 513, 515,
	517, 530, 529, 526, 554, 555, 532, 537, 516, 528,
	533, 546, 553, 550, 510, 514, 518, 527, 545, 544,
	525, 536, 547, 531, 519, 512, 520, 0, 194, 217,
	361, 0, 446, 284, 624, 593, 588, 202, 219, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 296, 297, 436, 437, 309, 310,
	620, 621, 295, 577, 607, 575, 619, 601, 430, 371,
	0, 0, 374, 277, 300, 315, 0, 592, 493, 223,
	458, 286, 247, 0, 0, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 389,
	0, 369, 557, 558, 311, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 201, 0, 478,
	248, 370, 367, 564, 278, 269, 265, 246, 312, 378,
	420, 499, 414, 0, 363, 0, 0, 488, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 244, 320, 200, 405, 489,
	282, 0, 0, 0, 0, 0, 694, 0, 0, 0,
	0, 2758, 0, 0, 0, 0, 234, 0, 0, 241,
	2759, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 561, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 445, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 195, 221, 0,
	0, 404, 453, 465, 0, 0, 0, 249, 0, 463,
	418, 581, 229, 280, 450, 424, 461, 432, 283, 0,
	0, 462, 365, 566, 442, 578, 604, 605, 259, 398,
	590, 503, 598, 622, 222, 256, 412, 496, 584, 485,
	390, 562, 563, 324, 484, 291, 199, 362, 610, 220,
	471, 364, 238, 227, 568, 587, 285, 448, 617, 209,
	498, 576, 235, 475, 0, 0, 625, 243, 495, 211,
	573, 494, 386, 321, 322, 210, 0, 449, 264, 289,
	0, 0, 254, 407, 570, 571, 252, 626, 224, 597,
	216, 0, 596, 400, 565, 574, 387, 376, 215, 572,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 203, 585, 0, 204, 0,
	490, 586, 627, 444, 208, 230, 231, 233, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 560, 579, 591, 602, 608, 609, 611, 612,
	613, 614, 615, 618, 616, 399, 306, 486, 328, 366,
	0, 0, 417, 464, 236, 583, 487, 197, 0, 0,
	0, 0, 250, 251, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 377, 477, 580, 330, 342, 345, 335,
	354, 0, 355, 331, 332, 337, 339, 340, 341, 346,
	347, 351, 357, 245, 206, 383, 391, 559, 307, 212,
	213, 214, 505, 506, 507, 508, 594, 595, 599, 454,
	455, 456, 457, 288, 589, 304, 460, 459, 326, 327,
	372, 441, 521, 523, 534, 538, 540, 542, 548, 551,
	522, 524, 535, 539, 541, 543, 549, 552, 511, 513,
	515, 517, 530, 529, 526, 554, 555, 532, 537, 516,
	528, 533, 546, 553, 550, 510, 514, 518, 527, 545,
	544, 525, 536, 547, 531, 519, 512, 520, 0, 194,
	217, 361, 0, 446, 284, 624, 593, 588, 202, 219,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 205, 218, 228, 232, 239,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 567,
	569, 582, 600, 606, 472, 296, 297, 436, 437, 309,
	310, 620, 621, 295, 577, 607, 575, 619, 601, 430,
	371, 0, 0, 374, 277, 300, 315, 0, 592, 493,
	223, 458, 286, 247, 0, 0, 207, 242, 226, 255,
	270, 273, 319, 384, 392, 421, 426, 292, 267, 240,
	451, 237, 476, 500, 501, 502, 504, 388, 262, 425,
	389, 0, 369, 557, 558, 311, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 1740, 0,
	0, 0, 359, 263, 0, 0, 422, 0, 201, 0,
	478, 248, 370, 367, 564, 278, 269, 265, 246, 312,
	378, 420, 499, 414, 0, 363, 0, 0, 488, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 244, 320, 200, 405,
	489, 282, 0, 0, 0, 0, 1739, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 344, 353, 352, 333, 334, 336,
	338, 343, 350, 356, 0, 0, 0, 0, 0, 261,
	316, 268, 260, 561, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 445, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 325, 195, 221,
	0, 0, 404, 453, 465, 0, 0, 0, 249, 0,
	463, 418, 581, 229, 280, 450, 424, 461, 432, 283,
	0, 0, 462, 365, 566, 442, 578, 604, 605, 259,
	398, 590, 503, 598, 622, 222, 256, 412, 496, 584,
	485, 390, 562, 563, 324, 484, 291, 199, 362, 610,
	220, 471, 364, 238, 227, 568, 587, 285, 448, 617,
	209, 498, 576, 235, 475, 0, 0, 625, 243, 495,
	211, 573, 494, 386, 321, 322, 210, 0, 449, 264,
	289, 0, 0, 254, 407, 570, 571, 252, 626, 224,
	597, 216, 0, 596, 400, 565, 574, 387, 376, 215,
	572, 385, 375, 329, 348, 349, 276, 302, 439, 368,
	440, 301, 303, 396, 395, 397, 203, 585, 0, 204,
	0, 490, 586, 627, 444, 208, 230, 231, 233, 0,
	275, 279, 287, 290, 298, 299, 308, 360, 411, 438,
	434, 443, 0, 560, 579, 591, 602, 608, 609, 611,
	612, 613, 614, 615, 618, 616, 399, 306, 486, 328,
	366, 0, 0, 417, 464, 236, 583, 487, 197, 0,
	0, 0, 0, 250, 251, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 377, 477, 580, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 245, 206, 383, 391, 559, 307,
	212, 213, 214, 505, 506, 507, 508, 594, 595, 599,
	454, 455, 456, 457, 288, 589, 304, 460, 459, 326,
	327, 372, 441, 521, 523, 534, 538, 540, 542, 548,
	551, 522, 524, 535, 539, 541, 543, 549, 552, 511,
	513, 515, 517, 530, 529, 526, 554, 555, 532, 537,
	516, 528, 533, 546, 553, 550, 510, 514, 518, 527,
	545, 544, 525, 536, 547, 531, 519, 512, 520, 0,
	194, 217, 361, 0, 446, 284, 624, 593, 588, 202,
	219, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 205, 218, 228, 232,
	239, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	567, 569, 582, 600, 606, 472, 296, 297, 436, 437,
	309, 310, 620, 621, 295, 577, 607, 575, 619, 601,
	430, 371, 0, 0, 374, 277, 300, 315, 0, 592,
	493, 223, 458, 286, 247, 0, 0, 207, 242, 226,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	240, 451, 237, 476, 500, 501, 502, 504, 388, 262,
	425, 389, 0, 369, 557, 558, 311, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 201,
	0, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 0, 363, 0, 0, 488,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 244, 320, 200,
	405, 489, 282, 0, 0, 0, 0, 0, 696, 697,
	698, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 561, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 394, 253, 0, 445, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 195,
	221, 0, 0, 404, 453, 465, 0, 0, 0, 249,
	0, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 0, 0, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 570, 571, 252, 626,
	224, 597, 216, 0, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 0, 0, 417, 464, 236, 583, 487, 197,
	0, 0, 0, 0, 250, 251, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 377, 477, 580, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 245, 206, 383, 391, 559,
	307, 212, 213, 214, 505, 506, 507, 508, 594, 595,
	599, 454, 455, 456, 457, 288, 589, 304, 460, 459,
	326, 327, 372, 441, 521, 523, 534, 538, 540, 542,
	548, 551, 522, 524, 535, 539, 541, 543, 549, 552,
	511, 513, 515, 517, 530, 529, 526, 554, 555, 532,
	537, 516, 528, 533, 546, 553, 550, 510, 514, 518,
	527, 545, 544, 525, 536, 547, 531, 519, 512, 520,
	0, 194, 217, 361, 0, 446, 284, 624, 593, 588,
	202, 219, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 296, 297, 436,
	437, 309, 310, 620, 621, 295, 577, 607, 575, 619,
	601, 430, 371, 0, 0, 374, 277, 300, 315, 0,
	592, 493, 223, 458, 286, 247, 0, 0, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 389, 0, 369, 557, 558, 311, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 0, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 0, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 344, 353, 352, 333,
	334, 336, 338, 343, 350, 356, 0, 0, 0, 0,
	0, 261, 316, 268, 260, 561, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 0, 0, 0, 603,
	0, 0, 0, 3975, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	249, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 570, 571, 252,
	626, 224, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 348, 349, 276, 302,
	439, 368, 440, 301, 303, 396, 395, 397, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	197, 0, 0, 0, 0, 250, 251, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 377, 477, 580, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 245, 206, 383, 391,
	559, 307, 212, 213, 214, 505, 506, 507, 508, 594,
	595, 599, 454, 455, 456, 457, 288, 589, 304, 460,
	459, 326, 327, 372, 441, 521, 523, 534, 538, 540,
	542, 548, 551, 522, 524, 535, 539, 541, 543, 549,
	552, 511, 513, 515, 517, 530, 529, 526, 554, 555,
	532, 537, 516, 528, 533, 546, 553, 550, 510, 514,
	518, 527, 545, 544, 525, 536, 547, 531, 519, 512,
	520, 0, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 296, 297,
	436, 437, 309, 310, 620, 621, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 0, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 0, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 0, 0, 0, 1900,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 249, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 0, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 570, 571,
	252, 626, 224, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 197, 0, 0, 0, 0, 250, 251, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 377, 477, 580,
	330, 342, 345, 335, 354, 0, 355, 331, 332, 337,
	339, 340, 341, 346, 347, 351, 357, 245, 206, 383,
	391, 559, 307, 212, 213, 214, 505, 506, 507, 508,
	594, 595, 599, 454, 455, 456, 457, 288, 589, 304,
	460, 459, 326, 327, 372, 441, 521, 523, 534, 538,
	540, 542, 548, 551, 522, 524, 535, 539, 541, 543,
	549, 552, 511, 513, 515, 517, 530, 529, 526, 554,
	555, 532, 537, 516, 528, 533, 546, 553, 550, 510,
	514, 518, 527, 545, 544, 525, 536, 547, 531, 519,
	512, 520, 0, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 296,
	297, 436, 437, 309, 310, 620, 621, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 0, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 389, 0, 369, 557, 558, 311,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 201, 0, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 0, 363,
	0, 0, 488, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	244, 320, 200, 405, 489, 282, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 0, 0,
	0, 0, 0, 261, 316, 268, 260, 561, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 445, 0, 0,
	0, 603, 0, 0, 0, 3852, 0, 0, 0, 358,
	0, 325, 195, 221, 0, 0, 404, 453, 465, 0,
	0, 0, 249, 0, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 0, 0, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 570,
	571, 252, 626, 224, 597, 216, 0, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 0, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 0, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 0, 0, 417, 464, 236,
	583, 487, 197, 0, 0, 0, 0, 250, 251, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 377, 477,
	580, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 245, 206,
	383, 391, 559, 307, 212, 213, 214, 505, 506, 507,
	508, 594, 595, 599, 454, 455, 456, 457, 288, 589,
	304, 460, 459, 326, 327, 372, 441, 521, 523, 534,
	538, 540, 542, 548, 551, 522, 524, 535, 539, 541,
	543, 549, 552, 511, 513, 515, 517, 530, 529, 526,
	554, 555, 532, 537, 516, 528, 533, 546, 553, 550,
	510, 514, 518, 527, 545, 544, 525, 536, 547, 531,
	519, 512, 520, 0, 194, 217, 361, 0, 446, 284,
	624, 593, 588, 202, 219, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	296, 297, 436, 437, 309, 310, 620, 621, 295, 577,
	607, 575, 619, 601, 430, 371, 0, 0, 374, 277,
	300, 315, 0, 592, 493, 223, 458, 286, 247, 0,
	0, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 389, 0, 369, 557, 558,
	311, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 0,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 93, 0,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 195, 221, 0, 0, 404, 453, 465,
	0, 0, 0, 249, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 197, 0, 0, 0, 0, 250, 251,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 0, 194, 217, 361, 0, 446,
	284, 624, 593, 588, 202, 219, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	0, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 0, 0, 0, 2332, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	0, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	0, 0, 0, 0, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 249, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 0, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 197, 0, 0, 0, 0, 250,
	251, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 0, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 0, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 389, 0, 369,
	557, 558, 311, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 201, 0, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 0, 363, 0, 0, 488, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 244, 320, 200, 405, 489, 282, 0,
	0, 0, 0, 1721, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	561, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	445, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 195, 221, 0, 0, 404,
	453, 465, 0, 0, 0, 249, 0, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 0, 0, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 570, 571, 252, 626, 224, 597, 216, 0,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 0, 0,
	417, 464, 236, 583, 487, 197, 0, 0, 0, 0,
	250, 251, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 377, 477, 580, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 245, 206, 383, 391, 559, 307, 212, 213, 214,
	505, 506, 507, 508, 594, 595, 599, 454, 455, 456,
	457, 288, 589, 304, 460, 459, 326, 327, 372, 441,
	521, 523, 534, 538, 540, 542, 548, 551, 522, 524,
	535, 539, 541, 543, 549, 552, 511, 513, 515, 517,
	530, 529, 526, 554, 555, 532, 537, 516, 528, 533,
	546, 553, 550, 510, 514, 518, 527, 545, 544, 525,
	536, 547, 531, 519, 512, 520, 0, 194, 217, 361,
	0, 446, 284, 624, 593, 588, 202, 219, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 296, 297, 436, 437, 309, 310, 620,
	621, 295, 577, 607, 575, 619, 601, 430, 371, 0,
	0, 374, 277, 300, 315, 0, 592, 493, 223, 458,
	286, 247, 0, 0, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 389, 0,
	369, 557, 558, 311, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 201, 0, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 0, 363, 0, 0, 488, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 244, 320, 200, 405, 489, 282,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 344, 353, 352, 333, 334, 336, 338, 343,
	350, 356, 0, 0, 0, 0, 0, 261, 316, 268,
	260, 561, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 445, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 325, 195, 221, 0, 0,
	404, 453, 465, 0, 0, 0, 249, 0, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 0, 0,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 570, 571, 252, 626, 224, 597, 216,
	0, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 348, 349, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 0,
	0, 417, 464, 236, 583, 487, 197, 0, 0, 0,
	0, 250, 251, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 377, 477, 580, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 245, 206, 383, 391, 559, 307, 212, 213,
	214, 505, 506, 507, 508, 594, 595, 599, 454, 455,
	456, 457, 288, 589, 304, 460, 459, 326, 327, 372,
	441, 521, 523, 534, 538, 540, 542, 548, 551, 522,
	524, 535, 539, 541, 543, 549, 552, 511, 513, 515,
	517, 530, 529, 526, 554, 555, 532, 537, 516, 528,
	533, 546, 553, 550, 510, 514, 518, 527, 545, 544,
	525, 536, 547, 531, 519, 512, 520, 0, 194, 217,
	361, 2012, 446, 284, 624, 593, 588, 202, 219, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 296, 297, 436, 437, 309, 310,
	620, 621, 295, 577, 607, 575, 619, 601, 430, 371,
	0, 0, 374, 277, 300, 315, 0, 592, 493, 223,
	458, 286, 247, 0, 0, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 389,
	0, 369, 557, 558, 311, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 201, 0, 478,
	248, 370, 367, 564, 278, 269, 265, 246, 312, 378,
	420, 499, 414, 0, 363, 0, 0, 488, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 244, 320, 200, 405, 489,
	282, 0, 0, 0, 0, 2003, 694, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 561, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 445, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 195, 221, 0,
	0, 404, 453, 465, 0, 0, 0, 249, 0, 463,
	418, 581, 229, 280, 450, 424, 461, 432, 283, 0,
	0, 462, 365, 566, 442, 578, 604, 605, 259, 398,
	590, 503, 598, 622, 222, 256, 412, 496, 584, 485,
	390, 562, 563, 324, 484, 291, 199, 362, 610, 220,
	471, 364, 238, 227, 568, 587, 285, 448, 617, 209,
	498, 576, 235, 475, 0, 0, 625, 243, 495, 211,
	573, 494, 386, 321, 322, 210, 0, 449, 264, 289,
	0, 0, 254, 407, 570, 571, 252, 626, 224, 597,
	216, 0, 596, 400, 565, 574, 387, 376, 215, 572,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 203, 585, 0, 204, 0,
	490, 586, 627, 444, 208, 230, 231, 233, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 560, 579, 591, 602, 608, 609, 611, 612,
	613, 614, 615, 618, 616, 399, 306, 486, 328, 366,
	0, 0, 417, 464, 236, 583, 487, 197, 0, 0,
	0, 0, 250, 251, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 377, 477, 580, 330, 342, 345, 335,
	354, 0, 355, 331, 332, 337, 339, 340, 341, 346,
	347, 351, 357, 245, 206, 383, 391, 559, 307, 212,
	213, 214, 505, 506, 507, 508, 594, 595, 599, 454,
	455, 456, 457, 288, 589, 304, 460, 459, 326, 327,
	372, 441, 521, 523, 534, 538, 540, 542, 548, 551,
	522, 524, 535, 539, 541, 543, 549, 552, 511, 513,
	515, 517, 530, 529, 526, 554, 555, 532, 537, 516,
	528, 533, 546, 553, 550, 510, 514, 518, 527, 545,
	544, 525, 536, 547, 531, 519, 512, 520, 0, 194,
	217, 361, 0, 446, 284, 624, 593, 588, 202, 219,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 205, 218, 228, 232, 239,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 567,
	569, 582, 600, 606, 472, 296, 297, 436, 437, 309,
	310, 620, 621, 295, 577, 607, 575, 619, 601, 430,
	371, 0, 0, 374, 277, 300, 315, 0, 592, 493,
	223, 458, 286, 247, 0, 0, 207, 242, 226, 255,
	270, 273, 319, 384, 392, 421, 426, 292, 267, 240,
	451, 237, 476, 500, 501, 502, 504, 388, 262, 425,
	389, 0, 369, 557, 558, 311, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	1867, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 359, 263, 0, 0, 422, 0, 201, 0,
	478, 248, 370, 367, 564, 278, 269, 265, 246, 312,
	378, 420, 499, 414, 0, 363, 0, 0, 488, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 244, 320, 200, 405,
	489, 282, 0, 0, 0, 0, 0, 694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 344, 353, 352, 333, 334, 336,
	338, 343, 350, 356, 0, 0, 0, 0, 0, 261,
	316, 268, 260, 561, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 445, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 325, 195, 221,
	0, 0, 404, 453, 465, 0, 0, 0, 249, 0,
	463, 418, 581, 229, 280, 450, 424, 461, 432, 283,
	0, 0, 462, 365, 566, 442, 578, 604, 605, 259,
	398, 590, 503, 598, 622, 222, 256, 412, 496, 584,
	485, 390, 562, 563, 324, 484, 291, 199, 362, 610,
	220, 471, 364, 238, 227, 568, 587, 285, 448, 617,
	209, 498, 576, 235, 475, 0, 0, 625, 243, 495,
	211, 573, 494, 386, 321, 322, 210, 0, 449, 264,
	289, 0, 0, 254, 407, 570, 571, 252, 626, 224,
	597, 216, 0, 596, 400, 565, 574, 387, 376, 215,
	572, 385, 375, 329, 348, 349, 276, 302, 439, 368,
	440, 301, 303, 396, 395, 397, 203, 585, 0, 204,
	0, 490, 586, 627, 444, 208, 230, 231, 233, 0,
	275, 279, 287, 290, 298, 299, 308, 360, 411, 438,
	434, 443, 0, 560, 579, 591, 602, 608, 609, 611,
	612, 613, 614, 615, 618, 616, 399, 306, 486, 328,
	366, 0, 0, 417, 464, 236, 583, 487, 197, 0,
	0, 0, 0, 250, 251, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 377, 477, 580, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 245, 206, 383, 391, 559, 307,
	212, 213, 214, 505, 506, 507, 508, 594, 595, 599,
	454, 455, 456, 457, 288, 589, 304, 460, 459, 326,
	327, 372, 441, 521, 523, 534, 538, 540, 542, 548,
	551, 522, 524, 535, 539, 541, 543, 549, 552, 511,
	513, 515, 517, 530, 529, 526, 554, 555, 532, 537,
	516, 528, 533, 546, 553, 550, 510, 514, 518, 527,
	545, 544, 525, 536, 547, 531, 519, 512, 520, 0,
	194, 217, 361, 0, 446, 284, 624, 593, 588, 202,
	219, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 205, 218, 228, 232,
	239, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	567, 569, 582, 600, 606, 472, 296, 297, 436, 437,
	309, 310, 620, 621, 295, 577, 607, 575, 619, 601,
	430, 371, 0, 0, 374, 277, 300, 315, 0, 592,
	493, 223, 458, 286, 247, 0, 0, 207, 242, 226,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	240, 451, 237, 476, 500, 501, 502, 504, 388, 262,
	425, 389, 0, 369, 557, 558, 311, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 1865, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 201,
	0, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 0, 363, 0, 0, 488,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 244, 320, 200,
	405, 489, 282, 0, 0, 0, 0, 0, 694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 561, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 394, 253, 0, 445, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 195,
	221, 0, 0, 404, 453, 465, 0, 0, 0, 249,
	0, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 0, 0, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 570, 571, 252, 626,
	224, 597, 216, 0, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 0, 0, 417, 464, 236, 583, 487, 197,
	0, 0, 0, 0, 250, 251, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 377, 477, 580, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 245, 206, 383, 391, 559,
	307, 212, 213, 214, 505, 506, 507, 508, 594, 595,
	599, 454, 455, 456, 457, 288, 589, 304, 460, 459,
	326, 327, 372, 441, 521, 523, 534, 538, 540, 542,
	548, 551, 522, 524, 535, 539, 541, 543, 549, 552,
	511, 513, 515, 517, 530, 529, 526, 554, 555, 532,
	537, 516, 528, 533, 546, 553, 550, 510, 514, 518,
	527, 545, 544, 525, 536, 547, 531, 519, 512, 520,
	0, 194, 217, 361, 0, 446, 284, 624, 593, 588,
	202, 219, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 296, 297, 436,
	437, 309, 310, 620, 621, 295, 577, 607, 575, 619,
	601, 430, 371, 0, 0, 374, 277, 300, 315, 0,
	592, 493, 223, 458, 286, 247, 0, 0, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 389, 0, 369, 557, 558, 311, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 1863, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 0, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 0, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 344, 353, 352, 333,
	334, 336, 338, 343, 350, 356, 0, 0, 0, 0,
	0, 261, 316, 268, 260, 561, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 0, 0, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	249, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 570, 571, 252,
	626, 224, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 348, 349, 276, 302,
	439, 368, 440, 301, 303, 396, 395, 397, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	197, 0, 0, 0, 0, 250, 251, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 377, 477, 580, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 245, 206, 383, 391,
	559, 307, 212, 213, 214, 505, 506, 507, 508, 594,
	595, 599, 454, 455, 456, 457, 288, 589, 304, 460,
	459, 326, 327, 372, 441, 521, 523, 534, 538, 540,
	542, 548, 551, 522, 524, 535, 539, 541, 543, 549,
	552, 511, 513, 515, 517, 530, 529, 526, 554, 555,
	532, 537, 516, 528, 533, 546, 553, 550, 510, 514,
	518, 527, 545, 544, 525, 536, 547, 531, 519, 512,
	520, 0, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 296, 297,
	436, 437, 309, 310, 620, 621, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 0, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 1861, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 0, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 0, 0, 0, 0,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 249, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 0, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 570, 571,
	252, 626, 224, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 197, 0, 0, 0, 0, 250, 251, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 377, 477, 580,
	330, 342, 345, 335, 354, 0, 355, 331, 332, 337,
	339, 340, 341, 346, 347, 351, 357, 245, 206, 383,
	391, 559, 307, 212, 213, 214, 505, 506, 507, 508,
	594, 595, 599, 454, 455, 456, 457, 288, 589, 304,
	460, 459, 326, 327, 372, 441, 521, 523, 534, 538,
	540, 542, 548, 551, 522, 524, 535, 539, 541, 543,
	549, 552, 511, 513, 515, 517, 530, 529, 526, 554,
	555, 532, 537, 516, 528, 533, 546, 553, 550, 510,
	514, 518, 527, 545, 544, 525, 536, 547, 531, 519,
	512, 520, 0, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 296,
	297, 436, 437, 309, 310, 620, 621, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 0, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 389, 0, 369, 557, 558, 311,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 1859, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 201, 0, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 0, 363,
	0, 0, 488, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	244, 320, 200, 405, 489, 282, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 0, 0,
	0, 0, 0, 261, 316, 268, 260, 561, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 445, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 325, 195, 221, 0, 0, 404, 453, 465, 0,
	0, 0, 249, 0, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 0, 0, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 570,
	571, 252, 626, 224, 597, 216, 0, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 0, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 0, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 0, 0, 417, 464, 236,
	583, 487, 197, 0, 0, 0, 0, 250, 251, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 377, 477,
	580, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 245, 206,
	383, 391, 559, 307, 212, 213, 214, 505, 506, 507,
	508, 594, 595, 599, 454, 455, 456, 457, 288, 589,
	304, 460, 459, 326, 327, 372, 441, 521, 523, 534,
	538, 540, 542, 548, 551, 522, 524, 535, 539, 541,
	543, 549, 552, 511, 513, 515, 517, 530, 529, 526,
	554, 555, 532, 537, 516, 528, 533, 546, 553, 550,
	510, 514, 518, 527, 545, 544, 525, 536, 547, 531,
	519, 512, 520, 0, 194, 217, 361, 0, 446, 284,
	624, 593, 588, 202, 219, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	401, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	296, 297, 436, 437, 309, 310, 620, 621, 295, 577,
	607, 575, 619, 601, 430, 371, 0, 0, 374, 277,
	300, 315, 0, 592, 493, 223, 458, 286, 247, 0,
	0, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 389, 0, 369, 557, 558,
	311, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 1855, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 0,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 0, 0,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 195, 221, 0, 0, 404, 453, 465,
	0, 0, 0, 249, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 197, 0, 0, 0, 0, 250, 251,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 0, 194, 217, 361, 0, 446,
	284, 624, 593, 588, 202, 219, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	0, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 1853, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	0, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 0, 0, 694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	0, 0, 0, 0, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 249, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 0, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 197, 0, 0, 0, 0, 250,
	251, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 0, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 0, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 389, 0, 369,
	557, 558, 311, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 1851, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 201, 0, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 0, 363, 0, 0, 488, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 244, 320, 200, 405, 489, 282, 0,
	0, 0, 0, 0, 694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	561, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	445, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 195, 221, 0, 0, 404,
	453, 465, 0, 0, 0, 249, 0, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 0, 0, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 570, 571, 252, 626, 224, 597, 216, 0,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 0, 0,
	417, 464, 236, 583, 487, 197, 0, 0, 0, 0,
	250, 251, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 377, 477, 580, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 245, 206, 383, 391, 559, 307, 212, 213, 214,
	505, 506, 507, 508, 594, 595, 599, 454, 455, 456,
	457, 288, 589, 304, 460, 459, 326, 327, 372, 441,
	521, 523, 534, 538, 540, 542, 548, 551, 522, 524,
	535, 539, 541, 543, 549, 552, 511, 513, 515, 517,
	530, 529, 526, 554, 555, 532, 537, 516, 528, 533,
	546, 553, 550, 510, 514, 518, 527, 545, 544, 525,
	536, 547, 531, 519, 512, 520, 0, 194, 217, 361,
	0, 446, 284, 624, 593, 588, 202, 219, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 296, 297, 436, 437, 309, 310, 620,
	621, 295, 577, 607, 575, 619, 601, 430, 371, 0,
	0, 374, 277, 300, 315, 0, 592, 493, 223, 458,
	286, 247, 0, 0, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 389, 0,
	369, 557, 558, 311, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	359, 263, 0, 0, 422, 0, 201, 0, 478, 248,
	370, 367, 564, 278, 269, 265, 246, 312, 378, 420,
	499, 414, 0, 363, 0, 0, 488, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 244, 320, 200, 405, 489, 282,
	0, 1826, 0, 0, 0, 694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 241, 0,
	0, 0, 344, 353, 352, 333, 334, 336, 338, 343,
	350, 356, 0, 0, 0, 0, 0, 261, 316, 268,
	260, 561, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 394, 253,
	0, 445, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 325, 195, 221, 0, 0,
	404, 453, 465, 0, 0, 0, 249, 0, 463, 418,
	581, 229, 280, 450, 424, 461, 432, 283, 0, 0,
	462, 365, 566, 442, 578, 604, 605, 259, 398, 590,
	503, 598, 622, 222, 256, 412, 496, 584, 485, 390,
	562, 563, 324, 484, 291, 199, 362, 610, 220, 471,
	364, 238, 227, 568, 587, 285, 448, 617, 209, 498,
	576, 235, 475, 0, 0, 625, 243, 495, 211, 573,
	494, 386, 321, 322, 210, 0, 449, 264, 289, 0,
	0, 254, 407, 570, 571, 252, 626, 224, 597, 216,
	0, 596, 400, 565, 574, 387, 376, 215, 572, 385,
	375, 329, 348, 349, 276, 302, 439, 368, 440, 301,
	303, 396, 395, 397, 203, 585, 0, 204, 0, 490,
	586, 627, 444, 208, 230, 231, 233, 0, 275, 279,
	287, 290, 298, 299, 308, 360, 411, 438, 434, 443,
	0, 560, 579, 591, 602, 608, 609, 611, 612, 613,
	614, 615, 618, 616, 399, 306, 486, 328, 366, 0,
	0, 417, 464, 236, 583, 487, 197, 0, 0, 0,
	0, 250, 251, 0, 556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 623, 0, 0, 0, 0, 0, 0, 0,
	0, 646, 377, 477, 580, 330, 342, 345, 335, 354,
	0, 355, 331, 332, 337, 339, 340, 341, 346, 347,
	351, 357, 245, 206, 383, 391, 559, 307, 212, 213,
	214, 505, 506, 507, 508, 594, 595, 599, 454, 455,
	456, 457, 288, 589, 304, 460, 459, 326, 327, 372,
	441, 521, 523, 534, 538, 540, 542, 548, 551, 522,
	524, 535, 539, 541, 543, 549, 552, 511, 513, 515,
	517, 530, 529, 526, 554, 555, 532, 537, 516, 528,
	533, 546, 553, 550, 510, 514, 518, 527, 545, 544,
	525, 536, 547, 531, 519, 512, 520, 0, 194, 217,
	361, 0, 446, 284, 624, 593, 588, 202, 219, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 198, 205, 218, 228, 232, 239, 257,
	272, 274, 281, 294, 305, 313, 314, 317, 323, 373,
	379, 380, 381, 382, 401, 402, 403, 406, 409, 410,
	413, 415, 416, 419, 423, 427, 428, 429, 431, 433,
	435, 447, 452, 466, 467, 468, 469, 470, 473, 474,
	479, 480, 481, 482, 483, 491, 492, 497, 567, 569,
	582, 600, 606, 472, 296, 297, 436, 437, 309, 310,
	620, 621, 295, 577, 607, 575, 619, 601, 430, 371,
	0, 0, 374, 277, 300, 315, 0, 592, 493, 223,
	458, 286, 247, 0, 0, 207, 242, 226, 255, 270,
	273, 319, 384, 392, 421, 426, 292, 267, 240, 451,
	237, 476, 500, 501, 502, 504, 388, 262, 425, 389,
	0, 369, 557, 558, 311, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 1725, 266, 0, 0, 0,
	0, 359, 263, 0, 0, 422, 0, 201, 0, 478,
	248, 370, 367, 564, 278, 269, 265, 246, 312, 378,
	420, 499, 414, 0, 363, 0, 0, 488, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 244, 320, 200, 405, 489,
	282, 0, 0, 0, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 241,
	0, 0, 0, 344, 353, 352, 333, 334, 336, 338,
	343, 350, 356, 0, 0, 0, 0, 0, 261, 316,
	268, 260, 561, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 293, 0, 394,
	253, 0, 445, 0, 0, 0, 603, 0, 0, 0,
	0, 0, 0, 0, 358, 0, 325, 195, 221, 0,
	0, 404, 453, 465, 0, 0, 0, 249, 0, 463,
	418, 581, 229, 280, 450, 424, 461, 432, 283, 0,
	0, 462, 365, 566, 442, 578, 604, 605, 259, 398,
	590, 503, 598, 622, 222, 256, 412, 496, 584, 485,
	390, 562, 563, 324, 484, 291, 199, 362, 610, 220,
	471, 364, 238, 227, 568, 587, 285, 448, 617, 209,
	498, 576, 235, 475, 0, 0, 625, 243, 495, 211,
	573, 494, 386, 321, 322, 210, 0, 449, 264, 289,
	0, 0, 254, 407, 570, 571, 252, 626, 224, 597,
	216, 0, 596, 400, 565, 574, 387, 376, 215, 572,
	385, 375, 329, 348, 349, 276, 302, 439, 368, 440,
	301, 303, 396, 395, 397, 203, 585, 0, 204, 0,
	490, 586, 627, 444, 208, 230, 231, 233, 0, 275,
	279, 287, 290, 298, 299, 308, 360, 411, 438, 434,
	443, 0, 560, 579, 591, 602, 608, 609, 611, 612,
	613, 614, 615, 618, 616, 399, 306, 486, 328, 366,
	0, 0, 417, 464, 236, 583, 487, 197, 0, 0,
	0, 0, 250, 251, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 646, 377, 477, 580, 330, 342, 345, 335,
	354, 0, 355, 331, 332, 337, 339, 340, 341, 346,
	347, 351, 357, 245, 206, 383, 391, 559, 307, 212,
	213, 214, 505, 506, 507, 508, 594, 595, 599, 454,
	455, 456, 457, 288, 589, 304, 460, 459, 326, 327,
	372, 441, 521, 523, 534, 538, 540, 542, 548, 551,
	522, 524, 535, 539, 541, 543, 549, 552, 511, 513,
	515, 517, 530, 529, 526, 554, 555, 532, 537, 516,
	528, 533, 546, 553, 550, 510, 514, 518, 527, 545,
	544, 525, 536, 547, 531, 519, 512, 520, 0, 194,
	217, 361, 0, 446, 284, 624, 593, 588, 202, 219,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 198, 205, 218, 228, 232, 239,
	257, 272, 274, 281, 294, 305, 313, 314, 317, 323,
	373, 379, 380, 381, 382, 401, 402, 403, 406, 409,
	410, 413, 415, 416, 419, 423, 427, 428, 429, 431,
	433, 435, 447, 452, 466, 467, 468, 469, 470, 473,
	474, 479, 480, 481, 482, 483, 491, 492, 497, 567,
	569, 582, 600, 606, 472, 296, 297, 436, 437, 309,
	310, 620, 621, 295, 577, 607, 575, 619, 601, 430,
	371, 0, 0, 374, 277, 300, 315, 0, 592, 493,
	223, 458, 286, 247, 0, 0, 207, 242, 226, 255,
	270, 273, 319, 384, 392, 421, 426, 292, 267, 240,
	451, 237, 476, 500, 501, 502, 504, 388, 262, 425,
	389, 0, 369, 557, 558, 311, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 359, 263, 0, 0, 422, 0, 201, 0,
	478, 248, 370, 367, 564, 278, 269, 265, 246, 312,
	378, 420, 499, 414, 0, 363, 0, 0, 488, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 318, 244, 320, 200, 405,
	489, 282, 0, 93, 0, 0, 0, 927, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	241, 0, 0, 0, 344, 353, 352, 333, 334, 336,
	338, 343, 350, 356, 0, 0, 0, 0, 0, 261,
	316, 268, 260, 561, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	394, 253, 0, 445, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 325, 195, 221,
	0, 0, 404, 453, 465, 0, 0, 0, 249, 0,
	463, 418, 581, 229, 280, 450, 424, 461, 432, 283,
	0, 0, 462, 365, 566, 442, 578, 604, 605, 259,
	398, 590, 503, 598, 622, 222, 256, 412, 496, 584,
	485, 390, 562, 563, 324, 484, 291, 199, 362, 610,
	220, 471, 364, 238, 227, 568, 587, 285, 448, 617,
	209, 498, 576, 235, 475, 0, 0, 625, 243, 495,
	211, 573, 494, 386, 321, 322, 210, 0, 449, 264,
	289, 0, 0, 254, 407, 570, 571, 252, 626, 224,
	597, 216, 0, 596, 400, 565, 574, 387, 376, 215,
	572, 385, 375, 329, 348, 349, 276, 302, 439, 368,
	440, 301, 303, 396, 395, 397, 203, 585, 0, 204,
	0, 490, 586, 627, 444, 208, 230, 231, 233, 0,
	275, 279, 287, 290, 298, 299, 308, 360, 411, 438,
	434, 443, 0, 560, 579, 591, 602, 608, 609, 611,
	612, 613, 614, 615, 618, 616, 399, 306, 486, 328,
	366, 0, 0, 417, 464, 236, 583, 487, 197, 0,
	0, 0, 0, 250, 251, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 623, 0, 0, 0, 0, 0,
	0, 0, 0, 646, 377, 477, 580, 330, 342, 345,
	335, 354, 0, 355, 331, 332, 337, 339, 340, 341,
	346, 347, 351, 357, 245, 206, 383, 391, 559, 307,
	212, 213, 214, 505, 506, 507, 508, 594, 595, 599,
	454, 455, 456, 457, 288, 589, 304, 460, 459, 326,
	327, 372, 441, 521, 523, 534, 538, 540, 542, 548,
	551, 522, 524, 535, 539, 541, 543, 549, 552, 511,
	513, 515, 517, 530, 529, 526, 554, 555, 532, 537,
	516, 528, 533, 546, 553, 550, 510, 514, 518, 527,
	545, 544, 525, 536, 547, 531, 519, 512, 520, 0,
	194, 217, 361, 0, 446, 284, 624, 593, 588, 202,
	219, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 198, 205, 218, 228, 232,
	239, 257, 272, 274, 281, 294, 305, 313, 314, 317,
	323, 373, 379, 380, 381, 382, 401, 402, 403, 406,
	409, 410, 413, 415, 416, 419, 423, 427, 428, 429,
	431, 433, 435, 447, 452, 466, 467, 468, 469, 470,
	473, 474, 479, 480, 481, 482, 483, 491, 492, 497,
	567, 569, 582, 600, 606, 472, 296, 297, 436, 437,
	309, 310, 620, 621, 295, 577, 607, 575, 619, 601,
	430, 371, 0, 0, 374, 277, 300, 315, 0, 592,
	493, 223, 458, 286, 247, 0, 0, 207, 242, 226,
	255, 270, 273, 319, 384, 392, 421, 426, 292, 267,
	240, 451, 237, 476, 500, 501, 502, 504, 388, 262,
	425, 389, 0, 369, 557, 558, 311, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 359, 263, 0, 0, 422, 0, 201,
	0, 478, 248, 370, 367, 564, 278, 269, 265, 246,
	312, 378, 420, 499, 414, 0, 363, 0, 0, 488,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 318, 244, 320, 200,
	405, 489, 282, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 241, 0, 0, 0, 344, 353, 352, 333, 334,
	336, 338, 343, 350, 356, 0, 0, 0, 0, 0,
	261, 316, 268, 260, 561, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1414, 0, 293,
	0, 394, 253, 0, 445, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 358, 0, 325, 195,
	221, 0, 0, 404, 453, 465, 0, 0, 0, 249,
	0, 463, 418, 581, 229, 280, 450, 424, 461, 432,
	283, 0, 0, 462, 365, 566, 442, 578, 604, 605,
	259, 398, 590, 503, 598, 622, 222, 256, 412, 496,
	584, 485, 390, 562, 563, 324, 484, 291, 199, 362,
	610, 220, 471, 364, 238, 227, 568, 587, 285, 448,
	617, 209, 498, 576, 235, 475, 0, 0, 625, 243,
	495, 211, 573, 494, 386, 321, 322, 210, 0, 449,
	264, 289, 0, 0, 254, 407, 570, 571, 252, 626,
	224, 597, 216, 0, 596, 400, 565, 574, 387, 376,
	215, 572, 385, 375, 329, 348, 349, 276, 302, 439,
	368, 440, 301, 303, 396, 395, 397, 203, 585, 0,
	204, 0, 490, 586, 627, 444, 208, 230, 231, 233,
	0, 275, 279, 287, 290, 298, 299, 308, 360, 411,
	438, 434, 443, 0, 560, 579, 591, 602, 608, 609,
	611, 612, 613, 614, 615, 618, 616, 399, 306, 486,
	328, 366, 0, 0, 417, 464, 236, 583, 487, 197,
	0, 0, 0, 0, 250, 251, 0, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 623, 0, 0, 0, 0,
	0, 0, 0, 0, 646, 377, 477, 580, 330, 342,
	345, 335, 354, 0, 355, 331, 332, 337, 339, 340,
	341, 346, 347, 351, 357, 245, 206, 383, 391, 559,
	307, 212, 213, 214, 505, 506, 507, 508, 594, 595,
	599, 454, 455, 456, 457, 288, 589, 304, 460, 459,
	326, 327, 372, 441, 521, 523, 534, 538, 540, 542,
	548, 551, 522, 524, 535, 539, 541, 543, 549, 552,
	511, 513, 515, 517, 530, 529, 526, 554, 555, 532,
	537, 516, 528, 533, 546, 553, 550, 510, 514, 518,
	527, 545, 544, 525, 536, 547, 531, 519, 512, 520,
	0, 194, 217, 361, 0, 446, 284, 624, 593, 588,
	202, 219, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 198, 205, 218, 228,
	232, 239, 257, 272, 274, 281, 294, 305, 313, 314,
	317, 323, 373, 379, 380, 381, 382, 401, 402, 403,
	406, 409, 410, 413, 415, 416, 419, 423, 427, 428,
	429, 431, 433, 435, 447, 452, 466, 467, 468, 469,
	470, 473, 474, 479, 480, 481, 482, 483, 491, 492,
	497, 567, 569, 582, 600, 606, 472, 296, 297, 436,
	437, 309, 310, 620, 621, 1413, 577, 607, 575, 619,
	601, 430, 371, 0, 0, 374, 277, 300, 315, 0,
	592, 493, 223, 458, 286, 247, 0, 0, 207, 242,
	226, 255, 270, 273, 319, 384, 392, 421, 426, 292,
	267, 240, 451, 237, 476, 500, 501, 502, 504, 388,
	262, 425, 389, 0, 369, 557, 558, 311, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 0, 0, 0, 359, 263, 0, 0, 422, 0,
	201, 0, 478, 248, 370, 367, 564, 278, 269, 265,
	246, 312, 378, 420, 499, 414, 0, 363, 0, 0,
	488, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 318, 244, 320,
	200, 405, 489, 282, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 241, 0, 0, 0, 344, 353, 352, 333,
	334, 336, 338, 343, 350, 356, 0, 0, 0, 0,
	0, 261, 316, 268, 260, 561, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	293, 0, 394, 253, 0, 445, 0, 0, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 325,
	195, 221, 0, 0, 404, 453, 465, 0, 0, 0,
	249, 0, 463, 418, 581, 229, 280, 450, 424, 461,
	432, 283, 0, 0, 462, 365, 566, 442, 578, 604,
	605, 259, 398, 590, 503, 598, 622, 222, 256, 412,
	496, 584, 485, 390, 562, 563, 324, 484, 291, 199,
	362, 610, 220, 471, 364, 238, 227, 568, 587, 285,
	448, 617, 209, 498, 576, 235, 475, 0, 0, 625,
	243, 495, 211, 573, 494, 386, 321, 322, 210, 0,
	449, 264, 289, 0, 0, 254, 407, 570, 571, 252,
	626, 224, 597, 216, 0, 596, 400, 565, 574, 387,
	376, 215, 572, 385, 375, 329, 348, 349, 276, 302,
	439, 368, 440, 301, 303, 396, 395, 397, 203, 585,
	0, 204, 0, 490, 586, 627, 444, 208, 230, 231,
	233, 0, 275, 279, 287, 290, 298, 299, 308, 360,
	411, 438, 434, 443, 0, 560, 579, 591, 602, 608,
	609, 611, 612, 613, 614, 615, 618, 616, 399, 306,
	486, 328, 366, 0, 0, 417, 464, 236, 583, 487,
	197, 0, 0, 0, 0, 250, 251, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 646, 377, 477, 580, 330,
	342, 345, 335, 354, 0, 355, 331, 332, 337, 339,
	340, 341, 346, 347, 351, 357, 245, 206, 383, 391,
	559, 307, 212, 213, 214, 505, 506, 507, 508, 594,
	595, 599, 454, 455, 456, 457, 288, 589, 304, 460,
	459, 326, 327, 372, 441, 521, 523, 534, 538, 540,
	542, 548, 551, 522, 524, 535, 539, 541, 543, 549,
	552, 511, 513, 515, 517, 530, 529, 526, 554, 555,
	532, 537, 516, 528, 533, 546, 553, 550, 510, 514,
	518, 527, 545, 544, 525, 536, 547, 531, 519, 512,
	520, 0, 194, 217, 361, 0, 446, 284, 624, 593,
	588, 202, 219, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1013, 0, 0, 0, 196, 198, 205, 218,
	228, 232, 239, 257, 272, 274, 281, 294, 305, 313,
	314, 317, 323, 373, 379, 380, 381, 382, 401, 402,
	403, 406, 409, 410, 413, 415, 416, 419, 423, 427,
	428, 429, 431, 433, 435, 447, 452, 466, 467, 468,
	469, 470, 473, 474, 479, 480, 481, 482, 483, 491,
	492, 497, 567, 569, 582, 600, 606, 472, 296, 297,
	436, 437, 309, 310, 620, 621, 295, 577, 607, 575,
	619, 601, 430, 371, 0, 0, 374, 277, 300, 315,
	0, 592, 493, 223, 458, 286, 247, 0, 0, 207,
	242, 226, 255, 270, 273, 319, 384, 392, 421, 426,
	292, 267, 240, 451, 237, 476, 500, 501, 502, 504,
	388, 262, 425, 389, 0, 369, 557, 558, 311, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 359, 263, 0, 0, 422,
	0, 201, 0, 478, 248, 370, 367, 564, 278, 269,
	265, 246, 312, 378, 420, 499, 414, 0, 363, 0,
	0, 488, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 318, 244,
	320, 200, 405, 489, 282, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 241, 0, 0, 0, 344, 353, 352,
	333, 334, 336, 338, 343, 350, 356, 0, 0, 0,
	0, 0, 261, 316, 268, 260, 561, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 394, 253, 0, 445, 0, 649, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 358, 0,
	325, 195, 221, 0, 0, 404, 453, 465, 0, 0,
	0, 249, 0, 463, 418, 581, 229, 280, 450, 424,
	461, 432, 283, 0, 0, 462, 365, 566, 442, 578,
	604, 605, 259, 398, 590, 503, 598, 622, 222, 256,
	412, 496, 584, 485, 390, 562, 563, 324, 484, 291,
	199, 362, 610, 220, 471, 364, 238, 227, 568, 587,
	285, 448, 617, 209, 498, 576, 235, 475, 0, 0,
	625, 243, 495, 211, 573, 494, 386, 321, 322, 210,
	0, 449, 264, 289, 0, 0, 254, 407, 570, 571,
	252, 626, 224, 597, 216, 0, 596, 400, 565, 574,
	387, 376, 215, 572, 385, 375, 329, 348, 349, 276,
	302, 439, 368, 440, 301, 303, 396, 395, 397, 203,
	585, 0, 204, 0, 490, 586, 627, 444, 208, 230,
	231, 233, 0, 275, 279, 287, 290, 298, 299, 308,
	360, 411, 438, 434, 443, 0, 560, 579, 591, 602,
	608, 609, 611, 612, 613, 614, 615, 618, 616, 399,
	306, 486, 328, 366, 0, 0, 417, 464, 236, 583,
	487, 197, 0, 0, 0, 0, 250, 251, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 646, 377, 477, 580,
	330, 342, 345, 335, 354, 0, 355, 331, 332, 337,
	339, 340, 341, 346, 347, 351, 357, 245, 206, 383,
	391, 559, 307, 212, 213, 214, 505, 506, 507, 508,
	594, 595, 599, 454, 455, 456, 457, 288, 589, 304,
	460, 459, 326, 327, 372, 441, 521, 523, 534, 538,
	540, 542, 548, 551, 522, 524, 535, 539, 541, 543,
	549, 552, 511, 513, 515, 517, 530, 529, 526, 554,
	555, 532, 537, 516, 528, 533, 546, 553, 550, 510,
	514, 518, 527, 545, 544, 525, 536, 547, 531, 519,
	512, 520, 0, 194, 217, 361, 0, 446, 284, 624,
	593, 588, 202, 219, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 198, 205,
	218, 228, 232, 239, 257, 272, 274, 281, 294, 305,
	313, 314, 317, 323, 373, 379, 380, 381, 382, 401,
	402, 403, 406, 409, 410, 413, 415, 416, 419, 423,
	427, 428, 429, 431, 433, 435, 447, 452, 466, 467,
	468, 469, 470, 473, 474, 479, 480, 481, 482, 483,
	491, 492, 497, 567, 569, 582, 600, 606, 472, 296,
	297, 436, 437, 309, 310, 620, 621, 295, 577, 607,
	575, 619, 601, 430, 371, 0, 0, 374, 277, 300,
	315, 0, 592, 493, 223, 458, 286, 247, 0, 0,
	207, 242, 226, 255, 270, 273, 319, 384, 392, 421,
	426, 292, 267, 240, 451, 237, 476, 500, 501, 502,
	504, 388, 262, 425, 389, 0, 369, 557, 558, 311,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 359, 263, 0, 0,
	422, 0, 201, 0, 478, 248, 370, 367, 564, 278,
	269, 265, 246, 312, 378, 420, 499, 414, 0, 363,
	0, 0, 488, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	244, 320, 200, 405, 489, 282, 0, 0, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 241, 0, 0, 0, 344, 353,
	352, 333, 334, 336, 338, 343, 350, 356, 0, 0,
	0, 0, 0, 261, 316, 268, 260, 561, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 293, 0, 394, 253, 0, 445, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 325, 195, 221, 0, 0, 404, 453, 465, 0,
	0, 0, 249, 0, 463, 418, 581, 229, 280, 450,
	424, 461, 432, 283, 0, 0, 462, 365, 566, 442,
	578, 604, 605, 259, 398, 590, 503, 598, 622, 222,
	256, 412, 496, 584, 485, 390, 562, 563, 324, 484,
	291, 199, 362, 610, 220, 471, 364, 238, 227, 568,
	587, 285, 448, 617, 209, 498, 576, 235, 475, 0,
	0, 625, 243, 495, 211, 573, 494, 386, 321, 322,
	210, 0, 449, 264, 289, 0, 0, 254, 407, 570,
	571, 252, 626, 224, 597, 216, 0, 596, 400, 565,
	574, 387, 376, 215, 572, 385, 375, 329, 348, 349,
	276, 302, 439, 368, 440, 301, 303, 396, 395, 397,
	203, 585, 0, 204, 0, 490, 586, 627, 444, 208,
	230, 231, 233, 0, 275, 279, 287, 290, 298, 299,
	308, 360, 411, 438, 434, 443, 0, 560, 579, 591,
	602, 608, 609, 611, 612, 613, 614, 615, 618, 616,
	399, 306, 486, 328, 366, 0, 0, 417, 464, 236,
	583, 487, 197, 0, 0, 0, 0, 250, 251, 0,
	556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 646, 377, 477,
	580, 330, 342, 345, 335, 354, 0, 355, 331, 332,
	337, 339, 340, 341, 346, 347, 351, 357, 245, 206,
	383, 391, 559, 307, 212, 213, 214, 505, 506, 507,
	508, 594, 595, 599, 454, 455, 456, 457, 288, 589,
	304, 460, 459, 326, 327, 372, 441, 521, 523, 534,
	538, 540, 542, 548, 551, 522, 524, 535, 539, 541,
	543, 549, 552, 511, 513, 515, 517, 530, 529, 526,
	554, 555, 532, 537, 516, 528, 533, 546, 553, 550,
	510, 514, 518, 527, 545, 544, 525, 536, 547, 531,
	519, 512, 520, 0, 194, 217, 361, 0, 446, 284,
	624, 593, 588, 202, 219, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 198,
	205, 218, 228, 232, 239, 257, 272, 274, 281, 294,
	305, 313, 314, 317, 323, 373, 379, 380, 381, 382,
	3983, 402, 403, 406, 409, 410, 413, 415, 416, 419,
	423, 427, 428, 429, 431, 433, 435, 447, 452, 466,
	467, 468, 469, 470, 473, 474, 479, 480, 481, 482,
	483, 491, 492, 497, 567, 569, 582, 600, 606, 472,
	296, 297, 436, 437, 309, 310, 620, 621, 295, 577,
	607, 575, 619, 601, 430, 371, 0, 0, 374, 277,
	300, 315, 0, 592, 493, 223, 458, 286, 247, 0,
	0, 207, 242, 226, 255, 270, 273, 319, 384, 392,
	421, 426, 292, 267, 240, 451, 237, 476, 500, 501,
	502, 504, 388, 262, 425, 389, 0, 369, 557, 558,
	311, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 408, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 359, 263, 0,
	0, 422, 0, 201, 0, 478, 248, 370, 367, 564,
	278, 269, 265, 246, 312, 378, 420, 499, 414, 0,
	363, 0, 0, 488, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 244, 320, 200, 405, 489, 282, 0, 0, 0,
	0, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 241, 0, 0, 0, 344,
	353, 352, 333, 334, 336, 338, 343, 350, 356, 0,
	0, 0, 0, 0, 261, 316, 268, 260, 561, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 293, 0, 394, 253, 0, 445, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	358, 0, 325, 195, 221, 0, 0, 404, 453, 465,
	0, 0, 0, 249, 0, 463, 418, 581, 229, 280,
	450, 424, 461, 432, 283, 0, 0, 462, 365, 566,
	442, 578, 604, 605, 259, 398, 590, 503, 598, 622,
	222, 256, 412, 496, 584, 485, 390, 562, 563, 324,
	484, 291, 199, 362, 610, 220, 471, 364, 238, 227,
	568, 587, 285, 448, 617, 209, 498, 576, 235, 475,
	0, 0, 625, 243, 495, 211, 573, 494, 386, 321,
	322, 210, 0, 449, 264, 289, 0, 0, 254, 407,
	570, 571, 252, 626, 224, 597, 216, 0, 596, 400,
	565, 574, 387, 376, 215, 572, 385, 375, 329, 348,
	349, 276, 302, 439, 368, 440, 301, 303, 396, 395,
	397, 203, 585, 0, 204, 0, 490, 586, 627, 444,
	208, 230, 231, 233, 0, 275, 279, 287, 290, 298,
	299, 308, 360, 411, 438, 434, 443, 0, 560, 579,
	591, 602, 608, 609, 611, 612, 613, 614, 615, 618,
	616, 399, 306, 486, 328, 366, 0, 0, 417, 464,
	236, 583, 487, 197, 0, 0, 0, 0, 250, 251,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 623,
	0, 0, 0, 0, 0, 0, 0, 0, 646, 377,
	477, 580, 330, 342, 345, 335, 354, 0, 355, 331,
	332, 337, 339, 340, 341, 346, 347, 351, 357, 245,
	206, 383, 391, 559, 307, 212, 213, 214, 505, 506,
	507, 508, 594, 595, 599, 454, 455, 456, 457, 288,
	589, 304, 460, 459, 326, 327, 372, 441, 521, 523,
	534, 538, 540, 542, 548, 551, 522, 524, 535, 539,
	541, 543, 549, 552, 511, 513, 515, 517, 530, 529,
	526, 554, 555, 532, 537, 516, 528, 533, 546, 553,
	550, 510, 514, 518, 527, 545, 544, 525, 536, 547,
	531, 519, 512, 520, 0, 194, 217, 361, 0, 446,
	284, 624, 593, 588, 202, 219, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	198, 205, 218, 228, 232, 239, 257, 272, 274, 281,
	294, 305, 313, 314, 317, 323, 373, 379, 380, 381,
	382, 401, 402, 403, 406, 409, 410, 413, 415, 416,
	419, 423, 427, 428, 429, 431, 433, 435, 447, 452,
	466, 467, 468, 469, 470, 473, 474, 479, 480, 481,
	482, 483, 491, 492, 497, 567, 569, 582, 600, 606,
	472, 296, 297, 436, 437, 309, 310, 620, 621, 295,
	577, 607, 575, 619, 601, 430, 371, 0, 0, 374,
	277, 300, 315, 0, 592, 493, 223, 458, 286, 247,
	0, 0, 207, 242, 226, 255, 270, 273, 319, 384,
	392, 421, 426, 292, 267, 240, 451, 237, 476, 500,
	501, 502, 504, 388, 262, 425, 389, 0, 369, 557,
	558, 311, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 359, 263,
	0, 0, 422, 0, 201, 0, 478, 248, 370, 367,
	564, 278, 269, 265, 246, 312, 378, 420, 499, 414,
	0, 363, 0, 0, 488, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 244, 320, 200, 405, 489, 282, 0, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 241, 0, 0, 0,
	344, 353, 352, 333, 334, 336, 338, 343, 350, 356,
	0, 0, 0, 0, 0, 261, 316, 268, 260, 561,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 394, 253, 0, 445,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 325, 195, 221, 0, 0, 404, 453,
	465, 0, 0, 0, 249, 0, 463, 418, 581, 229,
	280, 450, 424, 461, 432, 283, 0, 0, 462, 365,
	566, 442, 578, 604, 605, 259, 398, 590, 503, 598,
	622, 222, 256, 412, 496, 584, 485, 390, 562, 563,
	324, 484, 291, 199, 362, 610, 220, 471, 364, 238,
	227, 568, 587, 285, 448, 617, 209, 498, 576, 235,
	475, 0, 0, 625, 243, 495, 211, 573, 494, 386,
	321, 322, 210, 0, 449, 264, 289, 0, 0, 254,
	407, 570, 571, 252, 626, 224, 597, 216, 0, 596,
	400, 565, 574, 387, 376, 215, 572, 385, 375, 329,
	348, 349, 276, 302, 439, 368, 440, 301, 303, 396,
	395, 397, 203, 585, 0, 204, 0, 490, 586, 627,
	444, 208, 230, 231, 233, 0, 275, 279, 287, 290,
	298, 299, 308, 360, 411, 438, 434, 443, 0, 560,
	579, 591, 602, 608, 609, 611, 612, 613, 614, 615,
	618, 616, 399, 306, 486, 328, 366, 0, 0, 417,
	464, 236, 583, 487, 197, 0, 0, 0, 0, 250,
	251, 0, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	623, 0, 0, 0, 0, 0, 0, 0, 0, 646,
	377, 477, 580, 330, 342, 345, 335, 354, 0, 355,
	331, 332, 337, 339, 340, 341, 346, 347, 351, 357,
	245, 206, 383, 391, 559, 307, 212, 213, 214, 505,
	506, 507, 508, 594, 595, 599, 454, 455, 456, 457,
	288, 589, 304, 460, 459, 326, 327, 372, 441, 521,
	523, 534, 538, 540, 542, 548, 551, 522, 524, 535,
	539, 541, 543, 549, 552, 511, 513, 515, 517, 530,
	529, 526, 554, 555, 532, 537, 516, 528, 533, 546,
	553, 550, 510, 514, 518, 527, 545, 544, 525, 536,
	547, 531, 519, 512, 520, 0, 194, 217, 361, 0,
	446, 284, 624, 593, 588, 202, 219, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 198, 205, 218, 228, 232, 239, 257, 272, 274,
	281, 294, 305, 313, 314, 317, 323, 373, 379, 380,
	381, 382, 401, 402, 403, 406, 409, 410, 413, 415,
	416, 419, 423, 427, 428, 429, 431, 433, 435, 447,
	452, 466, 467, 468, 469, 470, 473, 474, 479, 480,
	481, 482, 483, 491, 492, 497, 567, 569, 582, 600,
	606, 472, 296, 297, 436, 437, 309, 310, 620, 621,
	295, 577, 607, 575, 619, 601, 430, 371, 0, 0,
	374, 277, 300, 315, 0, 592, 493, 223, 458, 286,
	247, 0, 0, 207, 242, 226, 255, 270, 273, 319,
	384, 392, 421, 426, 292, 267, 240, 451, 237, 476,
	500, 501, 502, 504, 388, 262, 425, 389, 0, 369,
	557, 558, 311, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 408, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 359,
	263, 0, 0, 422, 0, 201, 0, 478, 248, 370,
	367, 564, 278, 269, 265, 246, 312, 378, 420, 499,
	414, 0, 363, 0, 0, 488, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 244, 320, 200, 405, 489, 282, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 241, 0, 0,
	0, 344, 353, 352, 333, 334, 336, 338, 343, 350,
	356, 0, 0, 0, 0, 0, 261, 316, 268, 260,
	561, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 293, 0, 394, 253, 0,
	445, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 325, 195, 221, 0, 0, 404,
	453, 465, 0, 0, 0, 249, 0, 463, 418, 581,
	229, 280, 450, 424, 461, 432, 283, 0, 0, 462,
	365, 566, 442, 578, 604, 605, 259, 398, 590, 503,
	598, 622, 222, 256, 412, 496, 584, 485, 390, 562,
	563, 324, 484, 291, 199, 362, 610, 220, 471, 364,
	238, 227, 568, 587, 285, 448, 617, 209, 498, 576,
	235, 475, 0, 0, 625, 243, 495, 211, 573, 494,
	386, 321, 322, 210, 0, 449, 264, 289, 0, 0,
	254, 407, 570, 571, 252, 626, 224, 597, 216, 0,
	596, 400, 565, 574, 387, 376, 215, 572, 385, 375,
	329, 348, 349, 276, 302, 439, 368, 440, 301, 303,
	396, 395, 397, 203, 585, 0, 204, 0, 490, 586,
	627, 444, 208, 230, 231, 233, 0, 275, 279, 287,
	290, 298, 299, 308, 360, 411, 438, 434, 443, 0,
	560, 579, 591, 602, 608, 609, 611, 612, 613, 614,
	615, 618, 616, 399, 306, 486, 328, 366, 0, 0,
	417, 464, 236, 583, 487, 197, 0, 0, 0, 0,
	250, 251, 0, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 623, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 377, 477, 580, 330, 342, 345, 335, 354, 0,
	355, 331, 332, 337, 339, 340, 341, 346, 347, 351,
	357, 245, 206, 383, 391, 559, 307, 212, 213, 214,
	505, 506, 507, 508, 594, 595, 599, 454, 455, 456,
	457, 288, 589, 304, 460, 459, 326, 327, 372, 441,
	521, 523, 534, 538, 540, 542, 548, 551, 522, 524,
	535, 539, 541, 543, 549, 552, 511, 513, 515, 517,
	530, 529, 526, 554, 555, 532, 537, 516, 528, 533,
	546, 553, 550, 510, 514, 518, 527, 545, 544, 525,
	536, 547, 531, 519, 512, 520, 0, 194, 217, 361,
	0, 446, 284, 624, 593, 588, 202, 219, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 198, 205, 218, 228, 232, 239, 257, 272,
	274, 281, 294, 305, 313, 314, 317, 323, 373, 379,
	380, 381, 382, 401, 402, 403, 406, 409, 410, 413,
	415, 416, 419, 423, 427, 428, 429, 431, 433, 435,
	447, 452, 466, 467, 468, 469, 470, 473, 474, 479,
	480, 481, 482, 483, 491, 492, 497, 567, 569, 582,
	600, 606, 472, 296, 297, 436, 437, 309, 310, 620,
	621, 295, 577, 607, 575, 619, 601, 430, 371, 0,
	0, 374, 277, 300, 315, 0, 592, 493, 223, 458,
	286, 247, 0, 0, 207, 242, 226, 255, 270, 273,
	319, 384, 392, 421, 426, 292, 267, 240, 451, 237,
	476, 500, 501, 502, 504, 388, 262, 425, 0, 0,
	369, 557, 558, 311,
}

var yyPact = [...]int{
	-1000, -1000, 4854, -1000, -519, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2559, 2691, -1000, -1000, -1000, -1000, 2613, -1000, 988, 2105,
	-1000, 2360, 6044, -1000, 54193, 489, -1000, 51349, 487, 847,
	230, 35707, -1000, 198, -1000, 178, 52771, 192, -1000, -1000,
	-1000, -1000, -425, 21485, 2308, 58, 53, 54193, -1000, -1000,
	-1000, -1000, 2578, 2094, -1000, 397, -1000, -1000, -1000, -1000,
	-1000, -1000, 50638, -1000, 1101, -1000, -1000, 2370, 2376, 2630,
	908, 2305, -1000, 2472, 2094, -1000, 21485, 2545, 2438, 20774,
	20774, 447, -1000, -1000, 283, -1000, -1000, 30730, 54193, 38551,
	291, -1000, 2360, -1000, -1000, -1000, 180, -1000, 374, 2018,
	-1000, 2007, -1000, 879, 903, 392, 871, 857, 390, 388,
	386, 378, 377, 376, 375, 373, 402, -1000, 928, 928,
	-211, -212, 1366, 468, 435, 435, 1052, 467, 2336, 2328,
	-1000, -1000, 928, 928, 928, 365, 928, 928, 928, 928,
	332, 329, 928, 928, 928, 928, 928, 928, 928, 928,
	928, 928, 928, 928, 928, 928, 928, 928, 928, 892,
	2360, 284, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 54193, 234, 54193,
	-1000, 798, 54193, -430, 1064, 1064, 86, 1064, 1064, 1064,
	1064, 191, 986, 52, -1000, 181, 311, 167, 294, 1036,
	255, -1000, -1000, 275, 1036, 1866, -1000, 917, 287, 177,
	-1000, 1064, 1064, -1000, 14350, 199, 14350, 14350, -1000, 2349,
	-1000, -1000, -1000, -1000, -1000, 1358, -1000, -1000, -1000, -1000,
	-31, 463, -1000, -1000, -1000, -1000, 52771, 49927, 273, -1000,
	-1000, 309, -1000, -1000, 1783, 1442, 21485, 1250, 906, -1000,
	-1000, 1177, 850, -1000, -1000, -1000, -1000, -1000, 505, -1000,
	23618, 23618, 23618, 23618, -1000, -1000, 1473, 49216, 1473, 1473,
	23618, 1473, 23618, 1473, 1473, 1473, 21485, 1473, 1473, 1473,
	1473, -1000, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, -1000, -1000, -1000, -1000, 1473, 796, 1473,
	1473, 1473, 1473, 1473, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26462, 1560, 1558, 1552,
	-1000, 18641, 1473, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 54193, -1000, 1473, 213, 52771, 52771, 353,
	2472, 2094, -1000, 2578, 2509, 397, -1000, 3292, 1487, 1574,
	1403, 2094, 1966, 54193, -1000, 2029, -1000, -1000, -1000, -1000,
	2222, 1471, 1863, -1000, -1000, -1000, -1000, 1615, 21485, -1000,
	-1000, 2606, -1000, 27885, 795, 2603, 48505, -1000, 447, 447,
	2003, 411, 20, -1000, -1000, -1000, -1000, 950, 34996, -1000,
	-1000, -1000, -1000, -1000, 1917, 54193, -1000, -1000, 4095, 1356,
	-1000, 2102, -1000, 1872, -1000, 2061, 21485, 2116, 486, 1356,
	479, 477, 476, -1000, -54, -1000, -1000, -1000, -1000, -1000,
	-1000, 928, 928, 928, -1000, 400, 2536, 6044, 6334, -1000,
	-1000, -1000, 47794, 2100, 1356, -1000, 2092, -1000, 1019, 867,
	864, 864, 1356, -1000, -1000, 53482, 1356, 1018, 1013, 1356,
	1356, 52771, 52771, -1000, 47083, -1000, 46372, 45661, 1338, 52771,
	44950, 44239, 43528, 42817, 42106, -1000, 2402, -1000, 2131, -1000,
	-1000, -1000, 53482, 1356, 1356, 53482, 52771, 53482, 54193, 1356,
	-1000, -1000, 356, -1000, -1000, 1333, 1332, 1326, 928, 928,
	1318, 1848, 1842, 1803, 928, 928, 1300, 1791, 37129, 1777,
	289, 1291, 1270, 1269, 1321, 1747, 204, 1737, 1301, 1223,
	1261, 52771, 2091, 54193, -1000, 278, 937, 981, 949, 2360,
	2306, 1999, 462, 485, 1356, 440, 440, 52771, -1000, 15067,
	-1000, 221, -1000, 1734, 21485, -1000, 1038, 1036, 1036, -1000,
	-1000, -1000, -1000, -1000, -1000, 1064, 54193, 1038, -1000, -1000,
	-1000, 1036, 1064, 54193, 1064, 1064, 1064, 1064, 1036, 1036,
	1036, 1064, 54193, 54193, 54193, 54193, 54193, 54193, 54193, 54193,
	54193, 14350, 917, 1064, -431, -1000, 1714, -1000, -1000, 2212,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14350, 14350,
	-1000, -1000, -1000, -1000, -1000, 1997, -1000, 183, 15, 184,
	-1000, 41395, 483, 946, -1000, 483, -1000, -1000, -1000, 1991,
	40684, -1000, -435, -436, -440, -441, -1000, -1000, -1000, -444,
	-451, -1000, -1000, -1000, 21485, 21485, 21485, 21485, -241, -1000,
	1252, 23618, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 21485,
	247, 1150, 23618, 23618, 23618, 23618, 23618, 23618, 23618, 25040,
	24329, 23618, 23618, 23618, 23618, 23618, 23618, -1000, -1000, 32863,
	6867, 6867, 850, 850, 850, 850, -1000, -172, 1989, 53482,
	-1000, -1000, -1000, 789, 21485, 21485, 850, -1000, 1356, 1365,
	18641, 20774, 20774, 21485, 964, 1442, 53482, 21485, -1000, 1403,
	-1000, 1027, 2352, 2352, 2352, 2352, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 2352, 52771, 52771, 820,
	21485, 21485, 21485, 21485, 21485, 21485, 17218, 21485, 21485, 23618,
	21485, 21485, 21485, 1403, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485,
	21485, 21485, 21485, 1403, 21485, 1486, 21485, 21485, 21485, 21485,
	21485, 21485, 20774, 16501, 20774, 20774, 20774, 20774, 20774, -1000,
	1210, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 21485, 1403,
	21485, 21485, 21485, 21485, 21485, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1681, 1579, 1433, 21485, -1000,
	1967, -1000, -186, 30019, 21485, 1711, 2602, 2145, 52771, -1000,
	-1000, -1000, 2472, -1000, 2472, 1681, 2930, 2047, 20774, -1000,
	-1000, 2930, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1855, -1000, 54193, 1966, 2418, 52771, 2220, 1705, 350, -1000,
	21485, 21485, 1963, -1000, 1745, 54193, -1000, -241, -1000, 39973,
	-1000, -1000, 13633, 54193, 368, 54193, -1000, 29308, 39262, 322,
	-1000, 20, 1933, -1000, 31, 12, 17929, 849, -1000, -1000,
	-1000, 1366, 25751, 1664, 849, 104, -1000, -1000, -1000, 2061,
	-1000, 2061, 2061, 2061, 2061, 350, 350, 350, 350, -1000,
	-1000, -1000, -1000, -1000, 2090, 2087, -1000, 2061, 2061, 2061,
	2061, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2083, 2083,
	2083, 2078, 2078, 2062, 2062, 425, -1000, 21485, 361, 38551,
	2425, 1259, 1355, 278, 445, 2135, 1356, 1356, 1356, 445,
	-1000, 1394, 1392, 1390, -1000, -501, 1959, -1000, -1000, 2533,
	-1000, -1000, 936, 1040, 1034, 1003, 52771, 220, 352, -1000,
	428, -1000, 38551, 1356, 1005, 864, 1356, -1000, 1356, -1000,
	-1000, -1000, -1000, -1000, 1356, -1000, -1000, 1948, -1000, 1884,
	1166, 1033, 1159, 1032, 1948, -1000, -1000, -176, 1948, -1000,
	1948, -1000, 1948, -1000, 1948, -1000, 1948, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 975, 281, -323, 52771,
	220, 455, -1000, 450, 32863, -1000, -1000, -1000, 32863, 32863,
	-1000, -1000, -1000, -1000, 1699, 1696, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -499, 54193, -1000, 233, 944,
	339, 336, 302, 54193, 299, 2467, 2464, 2440, 2404, 2394,
	286, 307, 54193, 54193, 440, 2191, 54193, 2389, 54193, -1000,
	-1000, -1000, -1000, 1693, 1691, -1000, 1442, 54193, -1000, -1000,
	1064, 1064, -1000, -1000, 54193, 1064, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1064, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54193, -1000, -1000, -1000, -1000, -31, 174, -1000, -1000, 52771,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -106,
	-1000, 757, 25, 360, -1000, -1000, -1000, -1000, -1000, 2435,
	-1000, 1442, 982, 996, -1000, 1473, -1000, -1000, 1204, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 247, 23618, 23618,
	23618, 1546, 809, 1401, 1290, 919, 889, 889, 1220, 23618,
	1220, 23618, 868, 868, 868, 868, 868, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1679, -1000, 1473, 53482, 1852,
	16501, 1983, 1599, 1403, 881, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3344, 1832, -1000, 1832, 1162,
	971, -1000, 21485, 1403, 3337, -1000, 1403, 21485, -1000, -1000,
	21485, 21485, 21485, 21485, 1355, 1355, 1355, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 21485, 1943, 1937, 2600, 1279, 1355,
	1355, 1355, 1355, 1355, 21485, 2563, -1000, -1000, -1000, 1507,
	3325, 1378, 3318, 1355, 1355, -1000, 1355, 3303, 3299, 1403,
	1783, 2531, 2516, 1355, 1355, 1355, 1355, 1355, 2503, 2499,
	1355, 1355, 2495, 1355, 3288, 1355, 2491, 2483, 2471, 2434,
	2427, 2422, 2413, 2408, 2397, 2390, 2367, 2318, 2309, 2300,
	2291, 2281, 2272, 2245, 1355, 1355, 1355, 3277, 1355, 3273,
	1355, 3261, 1355, 1355, 3251, 2226, 2208, 1403, 1935, -1000,
	3244, 1355, 3232, 3225, 3213, 2199, 3147, 2971, 2967, 1355,
	1355, 1355, 2182, 2959, 2948, 2943, 2936, 2924, 2912, 2901,
	2876, 2869, 1355, 1433, 1433, 1433, 1433, 1433, 2862, -243,
	1355, 1403, -1000, -1000, -1000, -1000, -1000, 2844, 2169, 2831,
	2820, 2782, 2771, 1403, 1934, 1473, 530, -1000, -1000, 1832,
	1403, 1403, 1832, 1832, -1000, 1403, 2722, 2692, 2686, 2672,
	2643, 2605, 1355, 1355, -1000, 1355, 2599, 2595, 2152, 2140,
	1403, -1000, 1433, 54193, -1000, -419, -1000, -9, 979, 1473,
	-1000, 37129, 1403, -1000, 5349, -1000, 1283, -1000, -1000, -1000,
	-1000, -1000, 34285, 1968, 2930, -1000, -1000, 1473, 1824, -1000,
	-1000, 350, 79, 33574, 845, 845, 118, 1442, 1442, 21485,
	-1000, -1000, -1000, -1000, -1000, -1000, 525, 2565, 384, 1473,
	-1000, 1925, 3241, -1000, -1000, -1000, 2414, 27174, -1000, -1000,
	1473, 1473, 54193, 1849, 1841, -1000, 519, -1000, 1374, 1933,
	20, 5, -1000, -1000, -1000, -1000, 1442, -1000, 1386, 371,
	337, -1000, 432, -1000, -1000, -1000, -1000, 2321, 101, -1000,
	-1000, -1000, 330, 350, -1000, -1000, -1000, -1000, -1000, -1000,
	1668, 1668, -1000, -1000, -1000, -1000, -1000, 1244, -1000, -1000,
	-1000, -1000, 1239, -1000, -1000, 1234, -1000, -1000, 2591, 2162,
	361, -1000, -1000, 928, 1656, -1000, -1000, 2323, 928, 928,
	52771, -1000, -1000, 1644, 2425, 233, 54193, 992, 2189, -1000,
	2135, 2135, 2135, 54193, -1000, -1000, -1000, -1000, -1000, -1000,
	-504, 159, 590, -1000, -1000, -1000, 5986, 52771, 1822, -1000,
	222, -1000, 1638, -1000, 52771, -1000, 1819, 2073, 1356, 1356,
	-1000, -1000, -1000, 52771, 1473, -1000, -1000, -1000, -1000, 484,
	2351, 324, -1000, -1000, -264, -1000, -1000, 220, 222, 53482,
	1356, 849, -1000, -1000, -1000, -1000, -1000, -490, 1800, 472,
	225, 511, 54193, 54193, 54193, 54193, 54193, 779, -1000, -1000,
	41, -1000, -1000, 206, -1000, -1000, -1000, -1000, 206, -1000,
	-1000, -1000, -1000, 298, 449, -1000, 54193, 54193, 927, -1000,
	-1000, -1000, -1000, -1000, 1036, -1000, -1000, 1036, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2342, 54193, 21, -463, -1000, -460, 21485, -1000, -1000, -1000,
	-1000, 1212, 802, 1401, 23618, 23618, 1365, 1365, 23618, -1000,
	-1000, -1000, 323, 323, 32863, -1000, 23618, 21485, 20774, -1000,
	-1000, 21485, 21485, 952, -1000, 21485, 1221, -1000, 21485, -1000,
	1433, 1355, 1355, 1355, 1355, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1982, 21485, 21485, 21485, 1403,
	326, -1000, -1000, -1000, -1000, -1000, 2587, -1000, 21485, -1000,
	32863, 21485, 21485, 21485, -1000, -1000, -1000, 21485, 21485, -1000,
	-1000, 21485, -1000, 21485, -1000, -1000, -1000, -1000, -1000, -1000,
	21485, -1000, 21485, -1000, -1000, -1000, 21485, -1000, 21485, -1000,
	-1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485,
	-1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485,
	-1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485,
	-1000, 21485, -1000, 21485, -1000, 21485, -1000, -1000, -1000, 21485,
	-1000, 21485, -1000, 21485, -1000, -1000, 21485, -1000, 21485, -1000,
	21485, -1000, 21485, 21485, -1000, 21485, 21485, 21485, -1000, 21485,
	21485, 21485, 21485, -1000, -1000, -1000, -1000, 21485, 21485, 21485,
	21485, 21485, 21485, 21485, 21485, 21485, 21485, -1000, -1000, -1000,
	-1000, -1000, -1000, 21485, -1000, 38551, 66, -243, 1486, 66,
	1486, 22907, 803, 800, 22196, -1000, 20774, 15784, -1000, -1000,
	-1000, -1000, -1000, -1000, 21485, 21485, 21485, 21485, 21485, 21485,
	-1000, -1000, -1000, 21485, 21485, -1000, 21485, -1000, 21485, -1000,
	-1000, -1000, -1000, -1000, 979, -1000, 864, 864, 864, 52771,
	-1000, -1000, -1000, -1000, 1929, -1000, 2454, -1000, 2241, 2234,
	2583, 2565, -1000, 29308, 2930, -1000, -1000, 52771, -406, -1000,
	2278, 2287, 845, 845, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12916, 2472, 21485, 2185, 53482, 256, -1000, 28597, 52771,
	53482, 29308, 29308, 29308, 29308, 29308, -1000, 2205, 2192, -1000,
	2270, 2240, 2236, 54193, -1000, 1681, 1786, -1000, 21485, 31441,
	1887, 29308, -1000, -1000, 29308, 54193, 12199, -1000, -1000, -4,
	-10, -1000, -1000, -1000, -1000, 1366, -1000, -1000, 1051, 2410,
	2316, -1000, -1000, -1000, -1000, -1000, 1781, -1000, 1762, 1928,
	1683, 1678, 281, -1000, 2115, 2341, 928, 928, -1000, 1231,
	-1000, 1356, 1633, 1631, -1000, -1000, -1000, 471, -1000, 2381,
	54193, 2177, 2174, 2166, -1000, -512, 1230, 2067, 2035, 21485,
	2065, 2528, 1919, 52771, -1000, -1000, 53482, -1000, 267, -1000,
	361, 52771, -1000, -1000, -1000, 352, 54193, -1000, 8105, -1000,
	-1000, -1000, 222, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	54193, 242, -1000, 2063, 1353, -1000, -1000, 2050, -1000, -1000,
	-1000, -1000, 205, 313, 1618, 203, 1611, 203, -1000, 54193,
	911, 2162, 54193, -1000, -1000, -1000, 1064, 1064, -1000, -1000,
	2339, -1000, 1356, 1355, 23618, 23618, -1000, 850, -1000, -1000,
	382, -223, 2061, 2061, -1000, 2061, 2062, -1000, 2061, 164,
	2061, 153, 2061, -1000, -1000, 1403, 1403, -1000, 1433, -1000,
	2136, 1637, -1000, 1442, 21485, 2586, -1000, -1000, -1000, -1000,
	-1000, -64, 2581, 2547, 1355, -1000, 2060, 2046, 21485, 1355,
	1403, 2122, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 2111, 2106, 2096, 2049, 2041, 2030,
	2025, 2020, 2016, 2004, 2000, 1960, 1955, 1939, 1930, 1900,
	1355, 1355, 1896, 1355, 1891, 1861, -1000, 1442, 1433, 2523,
	1433, 1355, 1355, 2080, 280, 1355, 1676, 1676, 1676, 1676,
	1676, 1433, 1433, 1433, 1433, 1355, 52771, -1000, -243, -1000,
	-1000, -285, -291, -1000, 1403, -243, 1927, 23618, 1355, 23618,
	23618, 23618, 1355, 1403, -1000, 1828, 1794, 1789, 1784, 1355,
	1764, 1355, 1355, 1355, 1655, -1000, 2426, 2426, 2426, 1663,
	1283, 54193, -1000, -1000, -1000, -1000, 2565, 2560, 1924, -1000,
	-1000, 79, 541, -1000, 2261, 2287, -1000, 2526, 2296, 2525,
	-1000, -1000, -1000, -1000, -1000, 1442, -1000, 2365, 1904, -1000,
	931, 1854, -1000, -1000, 20063, 1673, 2232, 514, 1663, 1952,
	3241, 2124, 2165, 2684, -1000, -1000, -1000, -1000, 2126, -1000,
	2045, -1000, -1000, 2029, -1000, 1755, 368, 29308, 1906, 1906,
	-1000, 513, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1062,
	9361, 2626, -1000, 1592, -1000, 1361, 257, 1225, -1000, -1000,
	928, 928, -1000, 1004, 1002, -1000, 54193, 2044, -1000, 350,
	1562, 350, 1219, -1000, -1000, 1211, -1000, -1000, -1000, -1000,
	2121, 2392, -1000, -1000, -1000, -1000, 54193, -1000, -1000, 54193,
	54193, 54193, 2040, 2520, -1000, 21485, 2036, 930, 2540, 52771,
	52771, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 819, 928, -479, 305, 301, 928, 928, 928,
	-514, -1000, -1000, 1617, 1608, -1000, -190, -1000, 21485, -1000,
	-1000, -1000, 1329, 1329, 1560, 1558, 1552, -1000, 2029, -1000,
	-1000, -1000, 1596, -1000, -1000, -182, 52771, 52771, 52771, 52771,
	-1000, -1000, 1131, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 850, 1403, 338, -189, 1403,
	-1000, -1000, 350, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21485, -1000, 21485, -1000, 1442, 21485, 2472,
	1532, 21485, 21485, -1000, 1201, 1188, 1355, -1000, -1000, -1000,
	21485, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 21485, -1000, 21485, -1000, 21485, -1000,
	21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000,
	21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000, 21485, -1000,
	21485, -1000, 21485, -1000, 21485, -1000, -1000, 21485, -1000, -1000,
	-1000, 21485, -1000, 21485, -1000, 21485, -1000, -1000, -1000, 21485,
	282, 323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1403, 355, -1000, -1000, -1000, -1000, 2579,
	-1000, 1403, 21485, 1365, -1000, 1365, 1365, 1365, -1000, -1000,
	-1000, 21485, -1000, 21485, 21485, -1000, 21485, -1000, 21485, -1000,
	-1000, -1000, -1000, 21485, 1473, 2299, 1473, 1473, 31441, -1000,
	-1000, 2560, 2556, 2517, 2275, 2286, 2286, 2261, -1000, 2498,
	2494, -1000, 1530, 2493, 1528, 984, -1000, 53482, 21485, 256,
	-1000, 389, 52771, 256, 52771, -1000, 2473, -1000, -1000, 21485,
	2034, -1000, 21485, -1000, -1000, -1000, -1000, 6867, 2565, 1906,
	-1000, -1000, 880, -1000, 21485, -1000, -1000, -1000, 4858, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1517, 1508, -1000,
	-1000, 2033, 21485, -1000, -1000, -1000, 1584, 1575, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2029, -1000, -1000, -1000,
	-1000, 352, -508, 2326, 52771, 1160, -1000, 1602, 1919, 314,
	256, 1472, 928, 928, 928, 1145, 1117, 37129, 1581, -1000,
	52771, 416, -1000, 352, -1000, -213, -216, 1355, -1000, -1000,
	2399, -1000, -1000, 15784, -1000, -1000, 2024, 2130, -1000, -1000,
	-1000, -1000, 2211, -185, -199, -1000, -1000, 1355, 1355, 1327,
	1403, -1000, 1355, 1355, 1568, 1557, -1000, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355, 1355,
	1355, 1355, 1355, 1355, 1355, 1355, 1355, 1433, 1643, -1000,
	282, 1403, 2159, -1000, -1000, 6867, -1000, -1000, 2473, 2485,
	66, -1000, -1000, 219, 66, 1442, 978, 1403, 1403, 978,
	1606, 1355, 1595, 1583, 1355, 1355, 32152, -1000, 2484, 2478,
	37840, 37840, 979, 2556, -251, 21485, 21485, 2271, 1236, -1000,
	-1000, -1000, -1000, 1465, 1435, -1000, 1424, -1000, 2615, -1000,
	1442, -1000, 256, -1000, 509, 1854, -1000, 2472, 1442, 52771,
	1442, 78, 2473, -1000, 1355, -1000, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473, 1473,
	1473, 1473, -1000, -1000, 52771, 2213, -1000, -1000, 2395, 1573,
	156, -1000, 1434, 1919, -1000, -1000, 196, -1000, 21485, -1000,
	37129, 1408, 1399, -1000, -1000, -1000, -1000, -514, -1000, -1000,
	-1000, -1000, -1000, -1000, 397, 1911, -1000, 926, 52771, 54193,
	-1000, 2210, -1000, -1000, -1000, 21485, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 21485, -1000, 1403, 2156, -1000, -350, -1000,
	-481, 21485, -243, -1000, -1000, -243, -1000, -1000, -1000, -1000,
	-1000, 21485, -1000, -1000, 21485, -1000, 21485, -1000, -1000, 1567,
	-1000, -1000, -1000, -1000, -1000, 1567, 1567, -1000, -251, -1000,
	1902, -1000, 52771, 1442, 1783, -1000, 1120, -1000, -1000, -1000,
	-1000, -1000, 53482, 1854, 52771, -1000, 1556, 1403, 1473, 2472,
	-1000, 1551, -1000, 397, -1000, 1792, 2035, -1000, -1000, -1000,
	19352, -1000, -1000, -1000, -1000, -1000, 272, -181, 15784, 11482,
	1504, -1000, -180, 1355, 1433, -1000, -453, -1000, -1000, -1000,
	-1000, 292, -1000, -1000, 1783, -1000, -1000, 1475, 1470, 1438,
	36418, -1000, -1000, -1000, -1000, -251, -1000, -1000, 2393, -1000,
	-1000, 1766, -1000, -1000, 31441, 52060, -1000, -166, 315, -181,
	21485, 1748, 1403, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -28, -1000, -1000, 500, -1000, -1000, -1000, 2050, -196,
	-1000, -1000, -1000, 306, -470, -287, -290, 23618, -1000, 21485,
	-1000, 21485, -1000, 21485, -1000, -1000, -1000, 52771, 1473, -1000,
	1431, -1000, 4049, -311, 2155, -1000, -93, -1000, -1000, -1000,
	1060, 1381, -1000, -1000, -1000, -1000, -1000, -1000, 1993, 52771,
	-1000, 424, -1000, -1000, 15067, -182, -203, 994, -1000, -1000,
	-1000, -1000, -1000, 1365, 1415, 1360, 1355, -1000, 52771, -1000,
	52060, -303, 849, 6867, -1000, 2154, 2149, 2594, -1000, -1000,
	-1000, -1000, -1000, -1000, -516, 1402, 268, -1000, -1000, -1000,
	306, -293, -1000, 21485, -1000, 21485, -1000, 1403, -1000, -1000,
	2378, 78, -1000, 2610, -1000, 2582, 980, 980, -1000, 1111,
	-516, -1000, -1000, -1000, -1000, 1355, 1355, -1000, -326, -1000,
	-1000, -1000, -1000, -1000, 407, 1199, -1000, -1000, -1000, -1000,
	-1000, 6867, -1000, -1000, -1000, 212, 212, -1000, -1000,
}

var yyPgo = [...]int{
	0, 3319, 3318, 32, 6, 38, 36, 3306, 62, 99,
	208, 40, 197, 97, 3305, 178, 3302, 3297, 3296, 3295,
	3293, 3291, 2675, 2660, 2646, 3290, 3287, 3285, 3284, 3282,
	3280, 3279, 3278, 3274, 3268, 173, 165, 198, 3267, 3262,
	3261, 116, 193, 80, 85, 194, 3258, 3257, 70, 3249,
	3247, 3246, 190, 188, 181, 1039, 3238, 187, 112, 49,
	3237, 3230, 3215, 3214, 3208, 3149, 3146, 3143, 3142, 3139,
	3126, 3125, 3114, 3111, 3105, 3103, 3102, 3096, 282, 3095,
	3094, 20, 3093, 72, 3092, 3091, 3086, 3083, 3080, 14,
	3079, 3076, 25, 42, 3072, 3071, 46, 3069, 3068, 3067,
	3064, 3062, 68, 3061, 22, 3060, 39, 3058, 3057, 124,
	3056, 3050, 3049, 44, 3046, 3045, 3044, 4, 3041, 3039,
	139, 3038, 3037, 3035, 175, 205, 3034, 3033, 174, 103,
	110, 3032, 3030, 100, 191, 3028, 115, 3026, 3023, 3021,
	147, 3013, 3165, 3009, 64, 59, 3007, 168, 3005, 3002,
	199, 60, 10, 15, 16, 2999, 2997, 63, 71, 2990,
	107, 2988, 2984, 101, 81, 2981, 95, 108, 2980, 2979,
	21, 9, 2978, 5, 2, 7, 78, 2977, 2976, 119,
	2974, 2968, 2966, 91, 2965, 2951, 6450, 2942, 87, 128,
	102, 69, 2941, 166, 130, 2939, 2936, 2935, 2934, 2933,
	50, 2929, 2922, 2920, 138, 249, 163, 2917, 149, 340,
	52, 137, 2915, 196, 74, 200, 169, 2914, 2911, 133,
	132, 2909, 2907, 56, 159, 189, 2906, 94, 127, 114,
	170, 89, 135, 2891, 2885, 54, 66, 2884, 2882, 2881,
	2878, 186, 2876, 2875, 117, 2869, 55, 2868, 182, 2867,
	134, 75, 2860, 164, 172, 2853, 58, 2852, 2850, 61,
	93, 96, 41, 2849, 158, 162, 125, 171, 2846, 2844,
	53, 2842, 2841, 2840, 195, 306, 2838, 2837, 294, 179,
	141, 153, 88, 2836, 318, 2830, 2823, 12, 4933, 7418,
	2822, 27, 160, 2821, 2819, 7543, 19, 45, 29, 2817,
	211, 2808, 2807, 2806, 2805, 231, 201, 106, 161, 57,
	2804, 2791, 2790, 37, 2788, 2783, 2781, 2779, 2778, 2776,
	76, 35, 34, 33, 213, 83, 18, 98, 157, 152,
	67, 2773, 2772, 2771, 122, 82, 2766, 156, 155, 123,
	150, 2763, 180, 142, 118, 2759, 90, 28, 2749, 2748,
	2743, 2742, 92, 2739, 2729, 2724, 2718, 154, 144, 121,
	79, 2717, 77, 113, 151, 143, 51, 2714, 47, 2713,
	2711, 23, 192, 30, 2709, 31, 104, 109, 2708, 6185,
	184, 2703, 13, 308, 145, 2700, 2698, 8, 11, 17,
	2695, 2694, 2692, 2691, 129, 2685, 2684, 2677, 2671, 26,
	48, 24, 1, 111, 73, 2666, 2661, 140, 2654, 2653,
	0, 1000, 126, 218, 2648,
}

//line sql.y:8449
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        *ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) txAccessModeUnion() TxAccessMode {
	v, _ := st.union.(TxAccessMode)
	return v
}

func (st *yySymType) txAccessModesUnion() []TxAccessMode {
	v, _ := st.union.([]TxAccessMode)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vexplainTypeUnion() VExplainType {
	v, _ := st.union.(VExplainType)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 408, 409, 409, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	256, 379, 380, 380, 254, 254, 33, 73, 35, 35,
	34, 34, 37, 37, 36, 8, 8, 8, 9, 9,
	9, 9, 9, 9, 9, 9, 10, 10, 10, 10,
	10, 11, 11, 11, 11, 13, 13, 13, 13, 13,
	20, 21, 12, 12, 22, 22, 107, 107, 23, 24,
	24, 24, 24, 412, 412, 181, 181, 179, 179, 180,
	180, 259, 259, 25, 263, 263, 265, 265, 265, 265,
	255, 255, 255, 26, 26, 264, 264, 266, 266, 266,
	269, 269, 269, 269, 308, 308, 308, 27, 27, 27,
	27, 27, 126, 126, 382, 382, 381, 375, 375, 374,
	374, 373, 378, 378, 377, 377, 376, 39, 40, 49,
	49, 49, 49, 50, 51, 383, 383, 348, 56, 56,
	55, 55, 55, 55, 55, 55, 57, 57, 53, 53,
	52, 52, 54, 54, 350, 350, 336, 336, 349, 349,
	349, 349, 349, 349, 349, 335, 335, 137, 137, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 398, 398, 398, 397,
	397, 234, 234, 234, 234, 234, 234, 234, 234, 146,
	146, 157, 157, 157, 157, 157, 157, 157, 157, 157,
	157, 157, 144, 144, 145, 143, 143, 143, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 402, 402, 402,
	402, 402, 402, 402, 402, 402, 402, 156, 156, 152,
	152, 152, 153, 153, 153, 154, 154, 399, 399, 399,
	399, 313, 313, 313, 313, 316, 316, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 315, 315, 315, 315,
	315, 315, 315, 317, 317, 317, 317, 317, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 319, 319, 319, 319, 319, 319,
	319, 319, 334, 334, 320, 320, 328, 328, 329, 329,
	330, 330, 330, 331, 331, 331, 332, 332, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 327, 327, 326,
	326, 326, 337, 362, 362, 361, 361, 359, 359, 359,
	359, 359, 359, 359, 359, 346, 346, 356, 356, 356,
	356, 356, 345, 345, 341, 341, 341, 342, 342, 343,
	343, 340, 340, 344, 344, 358, 358, 357, 357, 338,
	338, 339, 339, 364, 400, 400, 400, 400, 400, 401,
	401, 365, 390, 392, 392, 392, 391, 391, 388, 389,
	387, 387, 387, 387, 387, 83, 83, 83, 282, 282,
	283, 283, 354, 354, 353, 353, 353, 355, 355, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 352,
	277, 277, 277, 386, 386, 386, 386, 386, 386, 385,
	385, 385, 351, 351, 351, 351, 384, 384, 58, 58,
	214, 214, 403, 403, 404, 404, 404, 46, 46, 46,
	46, 46, 46, 45, 45, 45, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 47, 47, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 109, 109, 110,
	110, 110, 110, 112, 112, 112, 367, 367, 59, 59,
	3, 3, 169, 171, 172, 172, 170, 170, 170, 170,
	170, 170, 61, 61, 60, 60, 174, 173, 175, 175,
	175, 1, 1, 2, 2, 4, 4, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 333,
	333, 333, 366, 366, 368, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 115, 114, 114, 113, 116,
	116, 116, 116, 116, 116, 116, 116, 370, 370, 370,
	62, 62, 371, 321, 322, 323, 5, 6, 347, 369,
	122, 122, 29, 38, 38, 30, 30, 30, 30, 31,
	31, 63, 66, 66, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 276, 276, 285, 285,
	275, 275, 300, 300, 300, 278, 278, 278, 279, 279,
	396, 396, 396, 272, 272, 65, 65, 65, 301, 301,
	301, 301, 68, 68, 405, 405, 406, 406, 407, 407,
	407, 69, 70, 70, 303, 303, 304, 304, 71, 72,
	84, 84, 84, 84, 84, 84, 84, 85, 85, 85,
	85, 108, 108, 108, 15, 15, 15, 15, 80, 80,
	80, 14, 14, 17, 67, 67, 74, 393, 393, 394,
	395, 395, 395, 395, 75, 77, 32, 32, 32, 32,
	32, 32, 132, 132, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 127, 127, 127, 121,
	121, 414, 78, 79, 79, 125, 125, 125, 118, 118,
	118, 124, 124, 124, 16, 16, 18, 258, 258, 19,
	19, 129, 129, 131, 131, 131, 131, 131, 133, 133,
	133, 133, 133, 133, 133, 128, 128, 130, 130, 130,
	130, 293, 293, 293, 292, 292, 163, 163, 165, 164,
	164, 166, 166, 167, 167, 167, 167, 212, 212, 189,
	189, 251, 251, 252, 252, 250, 250, 257, 257, 253,
	253, 253, 253, 260, 260, 168, 168, 168, 168, 176,
	176, 177, 177, 178, 178, 302, 302, 298, 298, 298,
	297, 297, 182, 182, 182, 184, 183, 183, 183, 183,
	185, 185, 187, 187, 186, 186, 188, 193, 193, 192,
	192, 190, 190, 190, 190, 191, 191, 191, 191, 194,
	194, 142, 142, 142, 142, 142, 142, 142, 142, 155,
	155, 155, 155, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 241, 241, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 217, 217, 216, 216,
	86, 86, 86, 87, 87, 88, 88, 88, 88, 88,
	89, 89, 89, 89, 89, 89, 89, 91, 91, 90,
	90, 207, 207, 290, 290, 92, 93, 93, 96, 96,
	95, 94, 94, 100, 100, 97, 97, 99, 99, 98,
	101, 101, 102, 103, 103, 273, 273, 195, 195, 203,
	203, 203, 203, 196, 196, 196, 196, 196, 196, 196,
	204, 204, 204, 211, 205, 205, 201, 201, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 160, 160, 160, 160, 222, 222, 148,
	148, 148, 148, 148, 148, 148, 148, 148, 148, 148,
	148, 148, 148, 148, 149, 149, 161, 161, 161, 161,
	162, 162, 162, 162, 162, 162, 162, 310, 310, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 413,
	413, 324, 324, 324, 202, 202, 202, 202, 202, 123,
	123, 123, 123, 123, 307, 307, 307, 311, 311, 311,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 312, 312, 220, 220, 119,
	119, 218, 218, 219, 221, 221, 213, 213, 213, 213,
	215, 215, 198, 198, 198, 223, 223, 224, 224, 104,
	105, 105, 106, 106, 225, 225, 227, 226, 226, 228,
	229, 229, 229, 230, 230, 231, 231, 231, 48, 48,
	48, 48, 48, 43, 43, 43, 43, 44, 44, 44,
	44, 134, 134, 134, 134, 136, 136, 135, 135, 81,
	81, 82, 82, 82, 140, 140, 141, 141, 141, 138,
	138, 139, 139, 248, 248, 232, 232, 232, 239, 239,
	239, 235, 235, 237, 237, 237, 238, 238, 238, 236,
	245, 245, 247, 247, 246, 246, 242, 242, 243, 243,
	244, 244, 244, 240, 240, 197, 197, 197, 197, 197,
	249, 249, 249, 249, 261, 261, 208, 208, 210, 210,
	209, 209, 159, 262, 262, 270, 267, 267, 268, 268,
	294, 294, 294, 271, 271, 284, 284, 280, 280, 281,
	281, 274, 274, 286, 286, 286, 76, 206, 206, 363,
	363, 360, 289, 289, 291, 291, 295, 295, 299, 299,
	296, 296, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 410, 411, 305, 306,
	306, 306,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 0, 1, 1, 1, 2, 3, 2, 3,
	0, 1, 3, 1, 4, 3, 3, 4, 3, 2,
	3, 4, 3, 4, 2, 7, 1, 3, 3, 3,
	3, 1, 2, 1, 1, 3, 2, 3, 3, 2,
	5, 7, 10, 9, 7, 8, 1, 1, 10, 11,
	9, 8, 8, 1, 1, 1, 3, 1, 3, 1,
	3, 0, 4, 3, 1, 3, 3, 3, 3, 3,
	1, 1, 2, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 6,
	12, 2, 0, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 0, 1, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 1, 2, 2, 2, 0, 1, 4, 4,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 5, 10, 0, 2, 0,
	2, 3, 5, 3, 4, 2, 3, 2, 3, 3,
	3, 3, 2, 2, 4, 4, 1, 1, 1, 1,
	1, 0, 2, 2, 3, 3, 2, 2, 2, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 5, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 1, 3,
	0, 3, 5, 0, 1, 1, 0, 1, 0, 3,
	3, 2, 2, 2, 1, 2, 2, 0, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	1, 1, 3, 3, 3, 0, 1, 4, 3, 3,
	4, 2, 0, 2, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 3, 3, 4, 3,
	1, 3, 1, 7, 6, 7, 7, 8, 8, 0,
	1, 5, 2, 1, 1, 1, 0, 1, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 1, 2,
	0, 1, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 2, 0, 2, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 5, 5, 4, 4, 4,
	6, 5, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 3, 3, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 7, 5, 5,
	5, 5, 5, 7, 7, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 3, 3, 0,
	2, 2, 2, 2, 2, 2, 2, 4, 4, 3,
	0, 1, 4, 3, 4, 4, 3, 3, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 5, 5, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 2, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 5, 2, 3, 3, 2, 3, 4, 4,
	4, 3, 4, 4, 5, 3, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 1, 1, 2, 1, 3, 1, 1,
	1, 1, 1, 3, 0, 1, 1, 3, 3, 2,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 4, 4, 4, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 5, 5, 4, 0, 2, 4,
	4, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 3, 1, 1, 2, 3,
	7, 0, 3, 0, 1, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 3, 6, 3,
	4, 3, 1, 3, 4, 5, 6, 3, 4, 5,
	6, 3, 4, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 5, 5, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 1, 2,
	2, 2, 2, 1, 1, 2, 7, 7, 6, 6,
	2, 2, 5, 6, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 4, 2, 4, 0, 1, 2,
	5, 0, 3, 0, 1, 4, 4, 2, 0, 1,
	1, 2, 2, 1, 1, 2, 2, 0, 1, 1,
	1, 1, 5, 1, 3, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 4,
	8, 6, 8, 6, 5, 4, 10, 2, 2, 1,
	4, 5, 5, 5, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 8, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 4, 6,
	6, 6, 8, 6, 6, 4, 4, 3, 4, 6,
	6, 4, 4, 6, 4, 6, 4, 4, 4, 4,
	4, 4, 6, 4, 6, 4, 4, 4, 6, 4,
	6, 4, 4, 6, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 6, 8, 4, 6, 8,
	4, 6, 8, 4, 6, 8, 4, 6, 8, 4,
	6, 8, 4, 6, 8, 4, 6, 8, 4, 6,
	8, 4, 6, 8, 4, 4, 4, 6, 4, 6,
	4, 8, 6, 4, 4, 6, 4, 6, 8, 4,
	6, 8, 4, 4, 6, 8, 6, 4, 6, 6,
	8, 10, 7, 8, 8, 9, 4, 4, 4, 4,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 4, 4, 6, 4, 6, 5,
	9, 6, 9, 8, 6, 8, 8, 8, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 6,
	8, 10, 12, 14, 6, 8, 8, 10, 12, 14,
	6, 8, 10, 12, 6, 8, 4, 4, 3, 4,
	6, 6, 4, 6, 4, 6, 8, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 1, 0, 5, 5,
	2, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 2, 1, 1, 0, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 1, 3, 5,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 2,
	1, 3, 0, 1, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 4, 1, 1, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -408, -78, -414, -7, -11, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -63, -66,
	-64, -65, -68, -69, -70, -71, -72, -14, -17, -67,
	-32, -33, -73, -74, -75, -76, -77, -16, -18, -19,
	-9, -8, -13, 10, 11, -107, -34, 33, -39, -49,
	226, -50, -40, 227, -51, 229, 228, 266, 230, 378,
	259, 75, 314, 315, 317, 318, 319, 320, -108, 673,
	264, 265, 232, 37, 46, 34, 35, 38, 236, 272,
	273, 235, -10, -35, 9, -410, 12, 459, 261, 260,
	29, -12, 567, 87, -79, -409, 721, -248, -232, 23,
	34, 30, -231, -227, -125, -232, 21, 19, 8, -78,
	-78, -78, 13, 14, -78, -348, -350, 87, 159, 87,
	-78, -56, -55, -53, -52, -54, -57, 32, -46, -47,
	-372, -45, -42, 231, 228, 276, 123, 124, 266, 267,
	268, 230, 250, 265, 269, 264, 285, -41, 82, 34,
	567, 570, -355, 227, 233, 234, 229, 460, 126, 125,
	76, -352, 373, 600, 691, -57, 693, 101, 104, 692,
	45, 240, 694, 695, 696, 607, 697, 249, 698, 699,
	700, 701, 707, 648, 708, 709, 710, 127, 8, -78,
	-299, -295, 91, -288, 564, 252, 598, 422, 599, 301,
	82, 42, 573, 370, 373, 600, 489, 691, 379, 314,
	330, 324, 494, 495, 496, 353, 345, 565, 601, 574,
	304, 253, 289, 685, 343, 135, 693, 308, 602, 267,
	380, 381, 603, 382, 101, 317, 419, 706, 307, 604,
	704, 104, 692, 322, 80, 488, 52, 688, 45, 262,
	427, 428, 341, 235, 337, 694, 290, 605, 576, 283,
	126, 123, 713, 37, 333, 51, 31, 703, 125, 50,
	695, 150, 606, 696, 607, 384, 360, 679, 49, 385,
	268, 608, 85, 273, 569, 311, 687, 386, 508, 334,
	387, 300, 702, 232, 609, 668, 660, 661, 388, 389,
	680, 365, 361, 366, 510, 610, 411, 493, 390, 664,
	665, 720, 53, 611, 612, 681, 124, 613, 79, 697,
	81, 328, 329, 614, 298, 251, 513, 514, 413, 357,
	471, 478, 479, 111, 112, 474, 113, 480, 114, 481,
	482, 483, 472, 115, 108, 473, 484, 485, 358, 359,
	116, 486, 110, 109, 475, 477, 117, 487, 249, 36,
	391, 566, 302, 59, 306, 277, 414, 47, 363, 717,
	46, 675, 515, 615, 678, 356, 352, 468, 54, 616,
	617, 618, 619, 490, 698, 355, 327, 351, 712, 4,
	295, 491, 699, 63, 234, 368, 367, 369, 284, 410,
	348, 620, 621, 622, 256, 83, 623, 338, 22, 624,
	625, 392, 291, 626, 57, 627, 628, 417, 265, 629,
	55, 700, 40, 630, 270, 714, 701, 631, 632, 633,
	674, 634, 272, 635, 394, 636, 662, 663, 393, 362,
	364, 516, 279, 395, 378, 237, 568, 637, 312, 332,
	269, 705, 638, 257, 504, 505, 506, 507, 686, 512,
	511, 271, 276, 264, 418, 258, 639, 640, 641, 642,
	643, 305, 659, 644, 645, 318, 707, 469, 44, 646,
	647, 648, 649, 650, 299, 294, 412, 421, 62, 84,
	375, 651, 652, 684, 326, 323, 292, 653, 315, 56,
	708, 709, 710, 286, 711, 497, 498, 499, 500, 10,
	550, 533, 561, 534, 551, 535, 544, 536, 552, 560,
	562, 517, 525, 518, 526, 556, 539, 553, 545, 538,
	537, 559, 542, 546, 519, 527, 557, 543, 520, 528,
	521, 529, 522, 530, 555, 554, 547, 558, 523, 531,
	549, 524, 532, 548, 540, 541, 430, 718, 719, 492,
	397, 127, 296, 297, 48, 349, 278, 654, 309, 655,
	339, 340, 354, 325, 350, 671, 316, 669, 280, 398,
	470, 266, 656, 420, 293, 371, 376, 310, 572, 509,
	285, 399, 683, 571, 501, 502, 347, 344, 287, 503,
	657, 673, 400, 241, 281, 282, 658, 670, 401, 402,
	303, 403, 404, 405, 406, 407, 409, 313, 408, 672,
	666, 667, 288, 458, 570, 321, 342, 377, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 467, 239, -78, 239,
	-186, -295, 239, 178, -267, 381, -285, 383, 396, 391,
	401, 389, -276, 392, 394, 279, -396, 411, 239, 398,
	226, 384, 393, 402, 403, 303, 409, 404, 313, 408,
	288, 405, 406, 407, -379, 178, 696, 711, 135, 346,
	388, 386, 412, 675, 91, -301, 91, 92, 93, -288,
	316, -303, 321, -289, -379, -288, 319, -78, -78, -305,
	-305, -127, 675, 677, -205, -142, 143, -155, -256, -158,
	92, -147, -150, -199, -200, -201, -202, -156, -215, -254,
	167, 168, 175, 144, -211, -159, 27, 563, 461, 460,
	178, 32, 221, 69, 70, 463, 146, 58, 12, 435,
	436, -157, 488, 490, 491, 492, 489, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 493, 465, 466,
	118, 467, 108, 110, 109, 468, 469, 470, 343, 515,
	516, 510, 513, 514, 512, 511, 358, 359, 471, 533,
	534, 538, 537, 535, 536, 539, 542, 543, 544, 545,
	546, 547, 549, 548, 540, 541, 518, 517, 519, 520,
	521, 522, 523, 524, 526, 525, 527, 528, 529, 530,
	531, 532, 550, 551, 552, 553, 554, 556, 555, 560,
	559, 557, 558, 562, 561, 472, 473, 111, 112, 113,
	114, 115, 116, 117, 474, 477, 475, 476, 478, 479,
	480, 485, 486, 481, 482, 483, 484, 487, 369, 367,
	368, 364, 363, 362, -88, -100, 589, 588, -101, 422,
	427, 428, 430, -148, -149, -161, -162, -289, -295, 244,
	424, 238, 173, 459, -151, -145, -213, 107, 93, -8,
	-209, 423, 433, 434, 438, 429, 439, 425, 426, 437,
	432, 431, 575, 577, 592, 593, 595, 580, 585, 584,
	587, 504, 505, 506, 507, 508, 509, 660, 661, 662,
	663, 664, 665, 666, 667, -379, -288, 91, -153, -152,
	-195, 94, 99, 102, 103, 105, -402, 262, 339, 340,
	119, -410, 689, 90, 95, 96, 97, 98, 120, 121,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 45, 397, 397, -186, -78, -78, -78, -78,
	-225, -125, -227, -10, -8, -410, 9, -78, -8, -9,
	-13, -35, -37, 594, -36, -295, 100, -232, -248, 13,
	162, 43, 51, -230, -231, -12, -8, -142, 20, 24,
	25, -130, 169, -142, -295, -130, -274, 243, -78, -78,
	-263, -308, 316, -265, 412, 675, 411, -255, -268, 91,
	-254, -267, 410, 92, -349, 159, -335, -339, -289, 254,
	-365, 250, -186, -358, -357, -289, -410, -126, -284, 240,
	248, 247, 136, -383, 139, 296, 424, 238, -52, -53,
	-54, -267, 177, 695, -109, 271, 275, 88, 88, -339,
	-338, -337, -384, 275, 254, -364, -356, 246, 255, -345,
	247, 248, -340, 240, 137, -384, -340, 245, 255, 250,
	254, 275, 275, 127, 275, 127, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 270, -346, 151, -346, 571,
	571, -352, -384, 250, 240, -384, -384, 246, -286, -340,
	242, 26, 242, 36, 36, -346, -346, -346, -267, 177,
	-346, -346, -346, -346, 283, 283, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, 239, -383, -134, 408, 303, 82, -55,
	285, -38, -186, -284, 240, 241, -383, 272, -186, 222,
	-186, 678, -278, 159, 16, -278, -275, 397, 395, 382,
	387, -278, -278, -278, -278, 286, 380, -341, 240, 36,
	251, 397, 286, 380, 286, 287, 286, 287, 390, 400,
	286, -300, 15, 162, 424, 385, 389, 279, 239, 280,
	241, 399, 287, -300, 90, -279, 159, 286, 397, 282,
	-278, -278, -306, -410, -291, -289, -287, 231, 24, 142,
	26, 28, 145, 178, 130, 20, 146, 38, 233, 346,
	250, 177, 246, 460, 226, 73, 575, 425, 432, 423,
	431, 435, 462, 463, 424, 383, 32, 14, 577, 29,
	260, 25, 39, 171, 228, 149, 578, 263, 27, 261,
	118, 121, 580, 23, 76, 255, 15, 248, 41, 17,
	581, 582, 18, 244, 243, 162, 240, 71, 12, 221,
	30, 158, 67, 583, 137, 584, 585, 586, 587, 131,
	69, 159, 21, 715, 433, 434, 34, 676, 563, 274,
	173, 74, 60, 677, 143, 429, 588, 589, 119, 590,
	122, 77, 682, 139, 19, 72, 43, 591, 275, 592,
	245, 716, 593, 415, 594, 160, 229, 459, 70, 161,
	689, 595, 690, 238, 396, 9, 464, 33, 259, 247,
	129, 68, 439, 596, 239, 148, 465, 466, 242, 132,
	120, 8, 136, 35, 13, 75, 78, 436, 437, 438,
	58, 128, 567, 147, 16, 597, 416, 141, -379, 678,
	-306, -306, 33, 92, -405, -406, -407, 567, 415, 242,
	-289, -186, -84, 668, 230, -85, 674, 24, 237, -132,
	397, -120, 178, 696, 679, 680, 681, 678, 394, 686,
	684, 682, 286, 683, 88, 139, 141, 142, 4, -142,
	158, -196, 151, 152, 153, 154, 155, 156, 157, 163,
	162, 143, 145, 159, -241, 140, 164, 165, 166, 167,
	168, 169, 170, 172, 171, 173, 174, 160, 161, 177,
	224, 225, -150, -150, -150, -150, -211, -217, -216, -410,
	-213, -379, -288, -295, -410, -410, -150, -273, -410, -147,
	-410, -410, -410, -410, -220, -142, -410, -410, -413, -410,
	-413, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, 222, -410, -410, -410, -410, -410, -324,
	-410, -324, -324, -324, -324, -324, -413, -413, -324, -324,
	-324, -410, -410, -410, -410, -410, -410, -410, -410, -410,
	-410, -410, -410, -410, -410, 103, 99, 102, 94, -215,
	105, 90, 90, 90, 90, -8, -9, -205, -410, -305,
	-393, -394, -189, -186, -410, 303, -289, -289, 272, -230,
	-12, -8, -225, -231, -227, -8, -78, -118, -131, 64,
	65, -133, 25, 39, 68, 66, 24, -411, 89, -411,
	-248, -411, 88, -37, -251, 87, 62, 44, 90, 90,
	88, 22, -226, -228, -142, 15, -293, 4, -292, 26,
	-289, 90, 222, 15, -187, 30, -186, -274, -274, 88,
	91, 316, -264, -266, 413, 415, 151, -294, -289, 90,
	32, 89, 88, -186, -313, -316, -318, -317, -319, -314,
	-315, 343, 344, 178, 347, 349, 350, 351, 352, 353,
	354, 355, 356, 357, 360, 33, 262, 339, 340, 341,
	342, 361, 362, 363, 364, 366, 367, 368, 369, 324,
	345, 565, 325, 326, 327, 328, 329, 330, 332, 333,
	336, 334, 335, 337, 338, -380, -379, 87, 89, 88,
	-320, 87, -142, -134, 239, -379, 240, 240, 240, -78,
	459, -346, -346, -346, 270, 20, -45, -42, -372, 19,
	-41, -42, 231, 123, 124, 228, 87, -335, 87, -344,
	-380, -379, 87, 137, 245, 136, -343, -340, -343, -344,
	-379, -213, -379, 137, 137, -379, -379, -260, -289, -260,
	-260, 24, -260, 24, -260, 24, 96, -289, -260, 24,
	-260, 24, -260, 24, -260, 24, -260, 24, 32, 79,
	80, 81, 32, 83, 84, 85, -213, -379, -379, -213,
	-335, -213, -186, -379, -267, 96, 96, 96, -346, -346,
	96, 90, 90, 90, -346, -346, 96, 90, -297, -295,
	90, 90, -385, 256, 300, 302, 96, 96, 96, 96,
	32, 90, -386, 32, 703, 702, 704, 705, 706, 90,
	96, 32, 96, 32, 96, -289, 87, -186, -140, 290,
	226, 228, 231, 77, 90, 306, 307, 304, 309, 310,
	151, 45, 88, 242, 239, -379, -280, 244, -280, -289,
	-296, -295, -287, 242, 379, 90, -142, -342, 15, 162,
	-300, -300, -278, -186, -342, -300, -278, -186, -278, -278,
	-278, -278, -300, -300, -300, -278, -295, -295, -186, -186,
	-186, -186, -186, -186, -186, -306, -279, -278, 678, 90,
	-272, 15, 77, -306, -306, 88, 322, 416, 417, -304,
	319, -80, -289, 90, -15, -11, -23, -22, -24, 151,
	-15, 88, 567, -179, -186, 678, 678, 678, 678, 678,
	678, -142, -142, -142, -142, 590, -203, 119, 143, 120,
	121, -158, -142, -204, -209, -211, 106, 162, 145, 159,
	-241, -147, -150, -147, -147, -147, -147, -147, -147, 221,
	-147, 221, -147, -147, -147, -147, -147, -147, -307, -289,
	90, 178, -154, -153, 105, -402, -154, 564, 88, -216,
	222, -142, -142, -379, -117, 441, 442, 443, 444, 446,
	447, 448, 451, 452, 456, 457, 440, 458, 445, 450,
	453, 454, 455, 449, 342, -142, -128, -130, -128, -142,
	-218, -219, 147, -213, -142, -411, 169, -124, 25, 39,
	-124, -124, -124, -124, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -124, -289, -289, -117, -142, -142,
	-142, -142, -142, -142, -86, -142, 130, 131, 132, -205,
	-142, -147, -142, -142, -142, -411, -142, -142, -142, -206,
	-205, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -378, -377, -376,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -205, -205, -205, -205, -205, -142, -411,
	-142, -160, -145, 96, -256, 105, 92, -142, -142, -142,
	-142, -142, -142, -129, -128, -291, -296, -287, -288, -128,
	-129, -129, -128, -128, -411, 96, -142, -142, -142, -142,
	-142, -142, -142, -142, -411, -142, -142, -142, -142, -142,
	-248, -411, -205, 88, -395, 415, 416, 676, -298, 275,
	-297, 26, -206, 90, 15, -258, 78, -289, -230, -230,
	64, 65, 60, -128, -133, -411, -36, 26, -250, -289,
	63, 90, -325, -267, 370, 371, 178, -142, -142, 88,
	-229, 28, 29, -186, -292, 169, -296, -186, -259, 275,
	-186, -164, -166, -167, -168, -189, -212, -410, -169, -8,
	586, 583, 15, -179, -180, -188, -295, -265, -308, -264,
	88, 414, 416, 417, 77, 122, -142, -326, 177, -354,
	-353, -352, -335, -337, -338, -339, 89, -326, -331, 376,
	375, -320, -320, -320, -320, -320, -325, -325, -325, -325,
	87, 87, -320, -320, -320, -320, -328, 87, -328, -328,
	-329, -328, 87, -329, -330, 87, -330, -365, -142, -362,
	-361, -359, -360, 249, 101, 658, 614, 567, 607, 648,
	78, -357, -229, 96, -411, -140, -281, 244, -363, -360,
	-379, -379, -379, -281, 91, 90, 91, 90, 91, 90,
	-110, -59, -1, 715, 716, 717, 88, 20, -336, -335,
	-58, 300, -368, -369, 275, -364, -358, -344, 137, -343,
	-344, -344, -379, 88, 30, 127, 127, 127, 127, 567,
	228, 33, -282, 606, 143, 658, 614, -335, -58, 242,
	242, -307, -307, -307, 90, 90, -277, 711, -179, -136,
	292, 151, 281, 281, 239, 239, 294, -186, 305, 308,
	306, 307, 304, 309, 310, 24, 24, 24, 24, 24,
	293, 295, 297, 283, -186, -186, -280, 77, -181, -186,
	27, -295, 90, 90, -186, -278, -278, -186, -278, -278,
	-186, -407, 323, -289, 357, 669, 670, 672, 671, -120,
	415, 88, 567, 23, -121, 23, -410, 119, 120, 121,
	-204, -147, -150, -147, 142, 263, -147, -147, -410, -213,
	-411, -291, 26, 88, 78, -411, 167, 88, 88, -411,
	-411, 88, 15, -221, -219, 149, -142, -411, 88, -411,
	-205, -142, -142, -142, -142, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -205, 88, 88, 15, -311,
	26, -411, -411, -411, -411, -411, -220, -411, 15, -411,
	78, 88, 162, 88, -411, -411, -411, 88, 88, -411,
	-411, 88, -411, 88, -411, -411, -411, -411, -411, -411,
	88, -411, 88, -411, -411, -411, 88, -411, 88, -411,
	-411, 88, -411, 88, -411, 88, -411, 88, -411, 88,
	-411, 88, -411, 88, -411, 88, -411, 88, -411, 88,
	-411, 88, -411, 88, -411, 88, -411, 88, -411, 88,
	-411, 88, -411, 88, -411, 88, -411, -411, -411, 88,
	-411, 88, -411, 88, -411, -411, 88, -411, 88, -411,
	88, -411, 88, 88, -411, 88, 88, 88, -411, 88,
	88, 88, 88, -411, -411, -411, -411, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, -411, -411, -411,
	-411, -411, -411, 88, -93, 591, -411, -411, 88, -411,
	88, 88, 88, 88, 88, -411, -410, 222, -411, -411,
	-411, -411, -411, -411, 88, 88, 88, 88, 88, 88,
	-411, -411, -411, 88, 88, -411, 88, -411, 88, -411,
	-394, 675, 416, -193, -192, -190, 75, 243, 76, -410,
	-297, -411, -154, -256, -257, -256, -198, -289, 96, 105,
	-232, -163, -165, 15, -133, -211, 89, 88, -325, -236,
	-242, -275, -289, 90, 178, -327, 178, -327, 370, 371,
	-228, 222, -194, 16, -197, 33, 58, -11, -410, -410,
	33, 88, -182, -184, -183, -185, 67, 71, 73, 68,
	69, 70, 74, -302, 26, -8, -164, -8, -410, -186,
	-179, -412, 15, 78, -412, 88, 222, -266, -269, 418,
	415, 421, -379, 90, -109, 88, -352, -339, -233, -137,
	41, -332, 377, -325, 574, -325, -334, 90, -334, 96,
	96, 96, 89, -48, -43, -44, 34, 82, -359, -346,
	90, 40, -346, -346, -289, 89, -229, -136, -186, 143,
	77, -363, -363, -363, -295, -2, 714, 720, 137, 87,
	382, 19, -250, 88, 89, -214, 301, 89, -111, -289,
	89, 87, -344, -344, -289, -410, 239, 32, 32, 658,
	614, 606, -58, -214, -213, -379, -326, 713, 712, 89,
	241, 299, -141, 435, -138, 90, 91, -186, -186, -186,
	-186, -186, 231, 228, 405, -403, 311, -403, 284, 242,
	-179, -186, 88, -83, 258, 253, -300, -300, 34, -186,
	415, 687, 685, -142, 142, 263, -158, -150, -117, -117,
	-147, -309, 178, 343, 262, 341, 337, 357, 348, 375,
	339, 376, 334, 333, 332, -309, -307, -147, -205, -130,
	-142, -142, 150, -142, 148, -142, -411, -411, -411, -411,
	-411, -225, -142, -142, -142, -411, 178, 343, 15, -142,
	-307, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -376, -142, -205, -142,
	-205, -142, -142, -142, -142, -142, -377, -377, -377, -377,
	-377, -205, -205, -205, -205, -142, -410, -289, -96, -95,
	-94, 641, 243, -93, -160, -96, -160, 221, -142, 221,
	221, 221, -142, -129, -291, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -190, -340, -340, -340, -260,
	88, -271, 23, 15, 58, 58, -163, -194, -164, -133,
	-289, -239, 668, -245, 47, -243, -244, 48, -240, 49,
	57, -327, -327, 169, -230, -142, -261, 77, -262, -270,
	-213, -208, -210, -209, -410, -249, -411, -289, -260, -262,
	-166, -167, -167, -166, -167, 67, 67, 67, 72, 67,
	72, 67, -183, -295, -411, -142, -298, 78, -164, -164,
	-188, -295, 169, 415, 419, 420, -352, -401, 119, 143,
	32, 77, 373, 101, -399, 177, 603, 653, 658, 614,
	607, 648, -400, 245, 136, 137, 257, 26, 42, 89,
	88, 89, 88, 89, 89, 88, -283, -282, -44, -43,
	-346, -346, 96, -379, 90, 90, 241, 27, -186, 77,
	77, 77, -112, 718, 96, 87, -3, 82, -142, 87,
	20, -335, -213, -370, -321, -371, -322, -323, -5, -6,
	-347, -115, 58, 101, -62, 45, 240, 698, 699, 127,
	-410, 711, -362, -250, -366, -368, -186, -144, -410, -143,
	-145, -151, 167, 168, 262, 339, 340, -214, -186, -135,
	290, 298, 87, -139, 92, -382, 78, 281, 373, 281,
	90, -404, 312, 90, -404, -186, -83, -48, -186, -278,
	-278, 34, -379, -411, -158, -150, -123, 162, 567, -312,
	573, -320, -320, -320, -330, -320, 329, -320, 329, -320,
	-411, -411, -411, 88, -411, 23, -411, -142, 88, -119,
	464, 88, 88, -411, 87, 87, -142, -411, -411, -411,
	88, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, 88, -411, 88, -411, 88, -411,
	88, -411, 88, -411, 88, -411, 88, -411, 88, -411,
	88, -411, 88, -411, 88, -411, 88, -411, 88, -411,
	88, -411, 88, -411, 88, -411, -411, 88, -411, -411,
	-411, 88, -411, 88, -411, 88, -411, -411, -411, 88,
	-310, 659, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -92, -290, -289, -93, 623, 623, -411,
	-93, -222, 88, -147, -411, -147, -147, -147, -411, -411,
	-411, 88, -411, 88, 88, -411, 88, -411, 88, -411,
	-411, -411, -411, 88, -191, 23, -191, -191, -411, -256,
	-186, -194, -223, 17, -236, 52, 349, -247, -246, 56,
	48, -244, 20, 50, 20, 31, -261, 88, 151, 88,
	-411, -411, 88, 58, 222, -411, -194, -177, -176, 77,
	78, -178, 77, -176, 67, 67, -251, 88, -259, -164,
	-194, -194, 222, 119, -410, -146, -157, -144, 13, 90,
	90, -379, -398, 702, 703, 32, 96, -346, -346, 137,
	137, -186, 87, -325, 90, -325, 96, 96, 32, 83,
	84, 85, 32, 79, 80, 81, -186, -186, -186, -186,
	-367, 87, 20, -142, 87, 151, 89, -250, -250, 277,
	162, -346, 696, 283, 283, -346, -346, -346, -114, -113,
	718, 89, -411, 88, -333, 567, 570, -142, -152, -152,
	-251, 89, -375, 567, -381, -289, -289, -289, -289, 96,
	98, -411, 565, 74, 568, -411, -325, -142, -142, -142,
	-230, 90, -142, -142, 96, 96, -411, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -142, -142, -142,
	-142, -142, -142, -142, -142, -142, -142, -205, -142, -411,
	-174, -173, -175, 679, 119, 32, -309, -411, -207, 275,
	-99, -98, -97, 15, -411, -142, -117, -117, -117, -117,
	-142, -142, -142, -142, -142, -142, -410, 67, 19, 17,
	-410, -410, -298, -223, -224, 18, 20, -237, 54, -235,
	53, -235, -246, 20, 20, 90, 20, 90, 137, -270,
	-142, -210, 58, -11, -289, -208, -289, -225, -142, 87,
	-142, -154, -194, -194, -142, -200, 488, 490, 491, 492,
	489, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 493, 467, 108, 110, 109, 468, 469, 470, 343,
	515, 516, 510, 513, 514, 512, 511, 358, 359, 471,
	533, 534, 538, 537, 535, 536, 539, 542, 543, 544,
	545, 546, 547, 549, 548, 540, 541, 518, 517, 519,
	520, 521, 522, 523, 524, 526, 525, 527, 528, 529,
	530, 531, 532, 550, 551, 552, 553, 554, 556, 555,
	560, 559, 557, 558, 562, 561, 472, 473, 111, 112,
	113, 114, 115, 116, 117, 474, 477, 475, 478, 479,
	480, 485, 486, 481, 482, 483, 484, 487, 369, 367,
	368, 364, 363, 362, 422, 427, 428, 430, 504, 505,
	506, 507, 508, 509, 660, 661, 662, 663, 664, 665,
	666, 667, 90, 90, 87, -142, 89, 89, -251, -366,
	-59, 89, -252, -250, 96, 89, 278, -209, -410, 90,
	-346, -346, -346, 96, 96, -297, -411, 88, -289, -400,
	-368, 571, 571, -411, 26, -374, -373, -291, 87, 78,
	63, 566, 569, -411, -411, 88, -411, -411, -411, 89,
	89, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, -411, -411, -411, -411, -411, -411, -411,
	-411, -411, -411, 88, -411, -173, -175, -411, 77, -154,
	-225, 20, -96, 300, 302, -96, -411, -411, -411, -411,
	-411, 88, -411, -411, 88, -411, 88, -411, -411, -253,
	-411, -289, 245, 20, 20, -253, -253, -193, -224, -106,
	-105, -104, 597, -142, -205, -238, 55, 77, 122, 90,
	90, 90, 13, -208, 222, -230, -250, -171, 382, -225,
	-411, -250, 89, 26, 89, 720, 137, 89, -209, -122,
	-410, 274, -297, 90, 90, -113, -116, -11, 88, 151,
	-250, -186, 63, -142, -205, -411, 77, 578, 679, -91,
	-90, -87, 690, 716, -205, -93, -93, -142, -142, -142,
	88, -411, -411, -411, -106, 88, -103, -102, -289, 77,
	122, -262, -289, 89, -411, -410, -230, 89, -234, -11,
	87, -3, 274, -321, -371, -322, -323, -5, -6, -347,
	-81, 567, -373, -351, -295, -291, 90, 96, 89, 567,
	-411, -411, -89, 145, 688, 656, -152, 221, -411, 88,
	-411, 88, -411, 88, -289, 245, -104, 88, 26, -298,
	-172, -170, -289, 620, -391, -390, 563, -401, -397, 119,
	143, 101, -399, 658, 614, 128, 129, -81, -142, 87,
	-411, -82, 289, 675, 222, -382, 568, -89, 689, 634,
	609, 634, 609, -147, -142, -142, -142, -102, -410, -411,
	88, 23, -313, -61, 631, -388, -389, 77, -392, 388,
	630, 651, 119, 90, 89, -250, 250, -296, -375, 569,
	142, -117, -411, 88, -411, 88, -411, -92, -170, 627,
	-326, -154, -389, 77, -388, 77, 14, 13, -4, 719,
	89, 291, -89, 634, 609, -142, -142, -411, -60, 27,
	-171, -387, 258, 253, 256, 33, -387, 96, -4, -411,
	-411, 631, 252, 32, 119, -154, -174, -173, -173,
}

var yyDef = [...]int{
	881, -2, -2, 883, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 37, 38,
	71, 73, 74, 881, 881, 881, 0, 881, 0, 0,
	881, -2, -2, 881, 1588, 0, 881, 0, 0, 0,
	-2, 796, 802, 0, 811, -2, 0, 0, 881, 881,
	2198, 2198, 876, 0, 0, 0, 0, 0, 881, 881,
	881, 881, 1454, 51, 881, 0, 86, 87, 831, 832,
	833, 66, 0, 2196, 882, 1, 3, 72, 76, 0,
	0, 0, 59, 1463, 0, 79, 0, 0, 885, 0,
	0, 1571, 881, 881, 0, 127, 128, 0, 0, 0,
	-2, 131, -2, 160, 161, 162, 0, 167, 607, 530,
	582, 528, 567, -2, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 405, 405,
	0, 0, -2, 516, 516, 516, 1573, 0, 0, 0,
	564, 467, 405, 405, 405, 0, 405, 405, 405, 405,
	0, 0, 405, 405, 405, 405, 405, 405, 405, 405,
	405, 405, 405, 405, 405, 405, 405, 405, 405, 1481,
	166, 1589, 1586, 1587, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818,
	1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828,
	1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848,
	1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868,
	1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908,
	1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928,
	1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938,
	1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948,
	1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958,
	1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968,
	1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978,
	1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998,
	1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008,
	2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018,
	2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028,
	2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038,
	2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048,
	2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068,
	2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078,
	2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088,
	2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098,
	2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108,
	2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118,
	2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128,
	2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138,
	2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148,
	2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188,
	2189, 2190, 2191, 2192, 2193, 2194, 2195, 0, 1565, 0,
	720, 984, 0, 0, 785, 785, 0, 785, 785, 785,
	785, 0, 0, 0, 734, 0, 0, 0, 0, 782,
	0, 750, 751, 0, 782, 0, 757, 788, 0, 0,
	763, 785, 785, 766, 2199, 0, 2199, 2199, 1556, 0,
	779, 777, 791, 792, 41, 795, 798, 799, 800, 801,
	804, 0, 815, 818, 1582, 1583, 0, 820, 827, 844,
	845, 0, 877, 878, 46, 1134, 0, 1006, 0, 1012,
	-2, 1023, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048,
	0, 0, 0, 0, 1053, 1054, 0, 0, 0, 0,
	0, 1115, 0, 0, 0, 0, 1427, 0, 0, 1389,
	1389, 1149, 1794, 1932, 1940, 2108, 1755, 1761, 1762, 1763,
	2054, 2055, 2056, 2057, 2143, 2144, 2148, 1856, 0, 0,
	0, 2195, 1893, 1901, 1902, 1926, 2026, 2129, 1773, 1921,
	1990, 1853, 1875, 1876, 2008, 2009, 1897, 1898, 1879, 2060,
	2062, 2078, 2079, 2064, 2066, 2075, 2081, 2086, 2065, 2077,
	2082, 2095, 2099, 2102, 2103, 2104, 2072, 2070, 2083, 2087,
	2089, 2091, 2097, 2100, 2073, 2071, 2084, 2088, 2090, 2092,
	2098, 2101, 2059, 2063, 2067, 2076, 2094, 2074, 2093, 2068,
	2080, 2085, 2096, 2069, 2061, 1891, 1894, 1882, 1883, 1885,
	1887, 1892, 1899, 1905, 1884, 1904, 1903, 0, 1880, 1881,
	1886, 1896, 1900, 1888, 1889, 1890, 1895, 1906, 1946, 1945,
	1944, 1989, 1917, 1988, 0, 0, 0, 0, 0, 1746,
	1799, 1800, 2105, 1329, 1330, 1331, 1332, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 1440, 1441, 45, 1133,
	1552, 1391, 1391, 1391, 1391, 1391, 1391, 1389, 1389, 1391,
	1391, 1391, 1075, 1076, 1077, 1078, 1079, 1103, 1104, 1110,
	1111, 2003, 2004, 2005, 2006, 1837, 2138, 1845, 1846, 1985,
	1986, 1858, 1859, 2169, 2170, -2, -2, -2, 238, 239,
	240, 241, 242, 243, 244, 245, 0, 1798, 2119, 2120,
	234, 0, 0, 302, 303, 299, 300, 301, 1117, 1118,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 294,
	295, 296, 2198, 0, 854, 0, 0, 0, 0, 0,
	1463, 0, 1455, 1454, 64, 0, 881, -2, 0, 0,
	0, 0, 48, 0, 53, 941, 884, 78, 77, 1503,
	0, 0, 0, 60, 1464, 68, 70, 1465, 0, 886,
	887, 0, 917, 921, 0, 0, 0, 1572, 1571, 1571,
	103, 0, 0, 104, 124, 125, 126, 0, 0, 110,
	111, 1558, 1559, 44, 0, 0, 178, 179, 0, 42,
	432, 0, 174, 0, 425, 364, 0, 1481, 0, 0,
	0, 0, 0, 881, 0, 1566, 155, 156, 163, 164,
	165, 405, 405, 405, 579, 0, 0, 166, 166, 537,
	538, 539, 0, 0, -2, 430, 0, 517, 0, 0,
	419, 419, 423, 421, 422, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 557, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 406, 0, 577,
	578, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 1575, 0, 554, 555, 0, 0, 0, 405, 405,
	0, 0, 0, 0, 405, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 1494, 0, 0, 0, -2,
	0, 712, 0, 0, 0, 1567, 1567, 0, 719, 0,
	721, 0, 724, 0, 0, 725, 0, 782, 782, 780,
	781, 727, 728, 729, 730, 785, 0, 0, 414, 415,
	416, 782, 785, 0, 785, 785, 785, 785, 782, 782,
	782, 785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2199, 788, 785, 0, 758, 0, 759, 760, 761,
	764, 765, 767, 2200, 2201, 1584, 1585, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 2199, 2199,
	771, 775, 1557, 797, 803, 805, 806, 0, 0, 816,
	819, 838, 50, 1844, 826, 50, 828, 829, 830, 856,
	857, 862, 0, 0, 0, 0, 868, 869, 870, 0,
	0, 873, 874, 875, 0, 0, 0, 0, 0, 1004,
	0, 0, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1024, 1025, 0,
	0, 0, 1049, 1050, 1051, 1052, 1055, 0, 1066, 0,
	1068, 1436, -2, 0, 0, 0, 1060, 1061, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 1147, 0,
	1148, 891, 891, 891, 891, 891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1577, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 901, 0, 0, 901, 901, 0, 0, 221,
	0, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 247, 248, 249, 250,
	251, 304, 252, 253, 254, 1133, 0, 0, 0, 47,
	846, 847, 0, 967, 1577, 0, 0, 897, 0, 58,
	67, 69, 1463, 62, 1463, 0, 903, 0, 0, -2,
	-2, 904, 910, 911, 912, 913, 914, 55, 2197, 56,
	0, 75, 0, 49, 0, 0, 0, 0, 378, 1506,
	0, 0, 1456, 1457, 1460, 0, 918, 1938, 922, 0,
	924, 925, 0, 0, 101, 0, 983, 0, 0, 0,
	112, 0, 114, 115, 0, 0, 0, 389, 1560, 1561,
	1562, -2, 412, 0, 389, 373, 312, 313, 314, 364,
	316, 364, 364, 364, 364, 378, 378, 378, 378, 347,
	348, 349, 350, 351, 0, 0, 333, 364, 364, 364,
	364, 354, 355, 356, 357, 358, 359, 360, 361, 317,
	318, 319, 320, 321, 322, 323, 324, 325, 366, 366,
	366, 366, 366, 370, 370, 0, 43, 0, 393, 0,
	1460, 0, 0, 1494, 1569, 1579, 0, 0, 0, 1569,
	133, 0, 0, 0, 580, 618, 531, 568, 581, 0,
	534, 535, -2, 0, 0, 516, 0, 518, 0, 413,
	0, -2, 0, 423, 0, 419, 423, 420, 423, 411,
	424, 558, 559, 560, 0, 562, 563, 648, 953, 0,
	0, 0, 0, 0, 654, 655, 656, 0, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 569, 570,
	571, 572, 573, 574, 575, 576, 0, 0, 0, 0,
	518, 0, 565, 0, 0, 469, 470, 471, 0, 0,
	474, 475, 476, 477, 0, 0, 480, 481, 482, 970,
	971, 483, 484, 509, 510, 511, 485, 486, 487, 488,
	489, 490, 491, 503, 504, 505, 506, 507, 508, 492,
	493, 494, 495, 496, 497, 500, 0, 148, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1567, 0, 0, 0, 0, 900,
	985, 1590, 1591, 0, 0, 786, 787, 0, 417, 418,
	785, 785, 731, 772, 0, 785, 735, 773, 736, 738,
	737, 739, 752, 753, 785, 742, 783, 784, 743, 744,
	745, 746, 747, 748, 749, 768, 754, 755, 756, 789,
	0, 793, 794, 769, 770, 0, 0, 809, 810, 0,
	817, 841, 839, 840, 842, 834, 835, 836, 837, 0,
	843, 0, 0, 859, 97, 864, 865, 866, 867, 879,
	872, 1135, 1001, 1002, 1003, 0, 1005, 1009, 0, 1119,
	1121, 1011, 1007, 1013, 1130, 1131, 1132, 0, 0, 0,
	0, 0, 1017, 1021, 1026, 1027, 1028, 1029, 1030, 0,
	1031, 0, 1034, 1035, 1036, 1037, 1038, 1039, 1045, 1404,
	1405, 1406, 1064, 305, 306, 0, 1065, 0, 0, 0,
	0, 0, 0, 0, 0, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1134, 0, 915, 0, 0,
	1434, 1431, 0, 0, 0, 1390, 0, 0, 892, 893,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	0, 0, 0, 0, 1427, 0, 1070, 1071, 1072, 0,
	0, 0, 0, 0, 0, 1187, 0, 0, 0, 0,
	1578, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 1334, 1335, 1336, 40, 0, 0, 0,
	0, 0, 0, 0, 902, 1438, 0, -2, -2, 0,
	0, 0, 0, 0, 1392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 849, 850, 852, 0, 987, 0,
	968, 0, 0, 855, 0, 896, 0, 899, 61, 63,
	908, 909, 0, 926, 905, 57, 52, 0, 0, 945,
	1504, 378, 1526, 0, 387, 387, 384, 1466, 1467, 0,
	1459, 1461, 1462, 80, 923, 919, 0, 999, 0, 0,
	982, 0, 929, 931, 932, 933, 965, 0, 936, 937,
	0, 0, 0, 0, 0, 99, 984, 105, 0, 113,
	0, 0, 118, 119, 106, 107, 108, 109, 0, 607,
	-2, 464, 180, 182, 183, 184, 175, -2, 376, 374,
	375, 315, 378, 378, 341, 342, 343, 344, 345, 346,
	0, 0, 334, 335, 336, 337, 326, 0, 327, 328,
	329, 368, 0, 330, 331, 0, 332, 431, 0, 1468,
	394, 395, 397, 405, 0, 400, 401, 0, 405, 405,
	0, 426, 427, 0, 1460, 1485, 0, 0, 0, 1580,
	1579, 1579, 1579, 0, 168, 169, 170, 171, 172, 173,
	643, 0, 0, 619, 641, 642, 166, 0, 0, 176,
	520, 519, 0, 675, 0, 429, 0, 0, 423, 423,
	408, 409, 561, 0, 0, 650, 651, 652, 653, 0,
	0, 0, 547, 458, 0, 548, 549, 518, 520, 0,
	0, 389, 472, 473, 478, 479, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 594, 595,
	596, 599, 601, 522, 605, 598, 600, 602, 522, 606,
	1482, 1483, 1484, 0, 0, 713, 0, 0, 455, 95,
	1568, 718, 722, 723, 782, 741, 774, 782, 733, 740,
	762, 807, 808, 813, 821, 822, 823, 824, 825, 863,
	0, 0, 0, 0, 871, 0, 0, 1010, 1120, 1122,
	1014, 0, 1018, 1022, 0, 0, 0, 0, 0, 1069,
	1067, 1438, 0, 0, 0, 1116, 0, 0, 0, 1138,
	1139, 0, 0, 0, 1432, 0, 0, 1145, 0, 1150,
	0, 0, 0, 0, 0, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1454, 0, 0, 0, 0,
	0, 1171, 1172, 1173, 1174, 1175, 0, 1177, 0, 1178,
	0, 0, 0, 0, 1185, 1186, 1188, 0, 0, 1191,
	1192, 0, 1194, 0, 1196, 1197, 1198, 1199, 1200, 1201,
	0, 1203, 0, 1205, 1206, 1207, 0, 1209, 0, 1211,
	1212, 0, 1214, 0, 1216, 0, 1219, 0, 1222, 0,
	1225, 0, 1228, 0, 1231, 0, 1234, 0, 1237, 0,
	1240, 0, 1243, 0, 1246, 0, 1249, 0, 1252, 0,
	1255, 0, 1258, 0, 1261, 0, 1264, 1265, 1266, 0,
	1268, 0, 1270, 0, 1273, 1274, 0, 1276, 0, 1279,
	0, 1282, 0, 0, 1283, 0, 0, 0, 1287, 0,
	0, 0, 0, 1296, 1297, 1298, 1299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1310, 1311, 1312,
	1313, 1314, 1315, 0, 1317, 0, 1098, 0, 0, 1098,
	0, 0, 0, 0, 0, 1136, 901, 0, 1394, 1395,
	1396, 1397, 1398, 1393, 0, 0, 0, 0, 0, 0,
	1356, 1357, 1359, 0, 0, 1362, 0, 1364, 0, 1551,
	848, 851, 853, 939, 988, 989, 0, 0, 0, 0,
	969, 1576, 894, 895, 898, 947, 0, 1442, 0, 0,
	926, 999, 927, 0, 906, 54, 942, 0, 1508, 1507,
	1520, 1533, 387, 387, 381, 382, 388, 383, 385, 386,
	1458, 0, 1463, 0, 1544, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 972, 0, 0, 975,
	0, 0, 0, 0, 966, 937, 0, 938, 0, -2,
	0, 0, 93, 94, 0, 0, 0, 116, 117, 0,
	0, 123, 390, 391, 157, 166, 466, 181, 439, 0,
	0, 311, 377, 338, 339, 340, 0, 362, 0, 0,
	0, 0, 460, 129, 1472, 1471, 405, 405, 396, 0,
	399, 0, 0, 0, 1581, 365, 428, 0, 147, 0,
	0, 0, 0, 0, 153, 613, 0, 0, 620, 0,
	0, 0, 529, 0, 540, 541, 0, 647, -2, 709,
	393, 0, 407, 410, 954, 0, 0, 542, 0, 545,
	546, 459, 520, 551, 552, 566, 553, 501, 502, 499,
	0, 0, 1495, 1496, 1501, 1499, 1500, 134, 587, 589,
	588, 592, 0, 0, 0, 524, 0, 524, 585, 0,
	455, 1468, 0, 717, 456, 457, 785, 785, 858, 98,
	0, 861, 0, 0, 0, 0, 1015, 1019, 1032, 1033,
	1399, 1425, 364, 364, 1412, 364, 370, 1415, 364, 1417,
	364, 1420, 364, 1423, 1424, 0, 0, 1062, 0, 916,
	0, 0, 1144, 1435, 0, 0, 1151, 1152, 1153, 1154,
	1155, 1429, 0, 0, 0, 1170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 146, 0, 0,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1093, 1097, 0, 1099,
	1100, 0, 0, 1319, 0, 0, 1337, 0, 0, 0,
	0, 0, 0, 0, 1439, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 990, 995, 995, 995, 0,
	0, 0, 1563, 1564, 1443, 1444, 999, 1445, 928, 907,
	946, 1526, 0, 1519, 0, -2, 1528, 0, 0, 0,
	1534, 379, 380, 920, 81, 1000, 84, 0, 1544, 1553,
	0, 1535, 1546, 1548, 0, 0, 0, 1540, 0, 999,
	930, 961, 963, 0, 958, 973, 974, 976, 0, 978,
	0, 980, 981, 941, 935, 0, 101, 0, 999, 999,
	100, 0, 986, 120, 121, 122, 465, 185, 190, 0,
	0, 0, 195, 0, 197, 0, 0, 0, 202, 203,
	405, 405, 440, 0, 308, 310, 0, 0, 188, 378,
	0, 378, 0, 369, 371, 0, 441, 461, 1469, 1470,
	0, 0, 398, 402, 403, 404, 0, 1570, 149, 0,
	0, 0, 616, 0, 644, 0, 0, 0, 0, 0,
	0, 177, 521, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 0, 405, 0, 0, 0, 405, 405, 405,
	0, 701, 392, 0, 0, 672, 669, 543, 0, 232,
	233, 235, 0, 0, 0, 0, 0, 550, 941, 1486,
	1487, 1488, 0, 1498, 1502, 137, 0, 0, 0, 0,
	597, 603, 0, 523, 604, 714, 715, 716, 96, 726,
	732, 860, 880, 1008, 1016, 1020, 0, 0, 0, 0,
	1426, 1410, 378, 1413, 1414, 1416, 1418, 1419, 1421, 1422,
	1058, 1059, 1063, 0, 1141, 0, 1143, 1433, 0, 1463,
	0, 0, 0, 1169, 0, 0, 0, 1180, 1179, 1181,
	0, 1183, 1184, 1189, 1190, 1193, 1195, 1202, 1204, 1208,
	1210, 1213, 1215, 1217, 0, 1220, 0, 1223, 0, 1226,
	0, 1229, 0, 1232, 0, 1235, 0, 1238, 0, 1241,
	0, 1244, 0, 1247, 0, 1250, 0, 1253, 0, 1256,
	0, 1259, 0, 1262, 0, 1267, 1269, 0, 1272, 1275,
	1277, 0, 1280, 0, 1284, 0, 1286, 1288, 1289, 0,
	0, 0, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1316, 0, 1091, 1094, 1318, 1101, 1102, 1107,
	1321, 0, 0, 0, 1324, 0, 0, 0, 1328, 1137,
	1339, 0, 1344, 0, 0, 1350, 0, 1354, 0, 1360,
	1361, 1363, 1365, 0, 0, 0, 0, 0, 967, 948,
	65, 1445, 1447, 0, 1513, 1511, 1511, 1521, 1522, 0,
	0, 1529, 0, 0, 0, 0, 85, 0, 0, 0,
	1549, 0, 0, 0, 0, 102, 1454, 955, 962, 0,
	0, 956, 0, 957, 977, 979, 934, 0, 999, 999,
	91, 92, 0, 191, 0, 193, 219, 220, 0, 196,
	198, 199, 200, 206, 207, 208, 201, 0, 0, 307,
	309, 0, 0, 352, 363, 353, 0, 0, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 941, 150, 151, 152,
	608, 0, 618, 0, 943, 0, 611, 0, 532, 0,
	0, 0, 405, 405, 405, 0, 0, 0, 0, 686,
	0, 0, 649, 0, 657, 0, 0, 0, 236, 237,
	0, 1497, 586, 0, 135, 136, 0, 0, 591, 525,
	526, 1056, 0, 0, 0, 1057, 1411, 0, 0, 0,
	0, 1430, 0, 0, 0, 0, 1176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1292,
	0, 0, 0, 638, 639, 0, 1368, 1096, 1454, 0,
	1098, 1108, 1109, 0, 1098, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 0, 0,
	0, 0, 987, 1447, 1452, 0, 0, 1516, 0, 1509,
	1512, 1510, 1523, 0, 0, 1530, 0, 1532, 0, 1554,
	1555, 1547, 0, 1539, 1542, 1538, 1541, 1463, 959, 0,
	964, 0, 1454, 90, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 205, 0, 0, 367, 372, 0, 0,
	0, 609, 0, 944, 621, 612, 0, 699, 0, 703,
	0, 0, 0, 706, 707, 708, 685, 0, 689, 433,
	673, 670, 671, 544, 0, 138, 139, 0, 0, 0,
	1400, 0, 1403, 1140, 1142, 0, 1166, 1167, 1168, 1408,
	1409, 1182, 1218, 1221, 1224, 1227, 1230, 1233, 1236, 1239,
	1242, 1245, 1248, 1251, 1254, 1257, 1260, 1263, 1271, 1278,
	1281, 1285, 1290, 0, 1293, 0, 0, 1294, 0, 640,
	1087, 0, 0, 1105, 1106, 0, 1323, 1325, 1326, 1327,
	1340, 0, 1345, 1346, 0, 1351, 0, 1355, 1366, 0,
	992, 949, 950, 997, 998, 0, 0, 940, 1452, 83,
	1453, 1450, 0, 1448, 1446, 1505, 0, 1514, 1515, 1524,
	1525, 1531, 0, 1537, 0, 88, 0, 0, 0, 1463,
	192, 0, 211, 0, 617, 0, 620, 610, 697, 698,
	0, 710, 702, 704, 705, 687, -2, 1489, 0, 0,
	0, 593, 1401, 0, 0, 1295, 0, 636, 637, 1095,
	1088, 0, 1073, 1074, 1092, 1320, 1322, 0, 0, 0,
	0, 991, 993, 994, 82, 0, 1449, 1113, 0, 1517,
	1518, 1545, 1543, 960, 967, 0, 89, 446, 439, 1489,
	0, 0, 0, 690, 691, 692, 693, 694, 695, 696,
	583, 1491, 140, 141, 0, 513, 514, 515, 134, 0,
	1146, 1291, 1089, 0, 0, 0, 0, 0, 1341, 0,
	1347, 0, 1352, 0, 951, 952, 1451, 0, 0, 622,
	0, 624, 0, -2, 434, 447, 0, 186, 212, 213,
	0, 0, 216, 217, 218, 209, 210, 130, 0, 0,
	711, 0, 1492, 1493, 0, 137, 0, 0, 1080, 1081,
	1082, 1083, 1085, 0, 0, 0, 0, 1114, 1093, 623,
	0, 0, 389, 0, 633, 435, 436, 0, 442, 443,
	444, 445, 214, 215, 645, 0, 0, 512, 590, 1402,
	0, 0, 1342, 0, 1348, 0, 1353, 0, 625, 626,
	634, 0, 437, 0, 438, 0, 0, 0, 614, 0,
	645, 1490, 1090, 1084, 1086, 0, 0, 1112, 0, 635,
	631, 448, 450, 451, 0, 0, 449, 646, 615, 1343,
	1349, 0, 452, 453, 454, 627, 628, 629, 630,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 172, 164, 3,
	87, 89, 169, 167, 88, 168, 222, 170, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 721,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 174, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 175,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 163, 165, 166, 171, 173, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 57982, 657, 57983, 658, 57984, 659,
	57985, 660, 57986, 661, 57987, 662, 57988, 663, 57989, 664,
	57990, 665, 57991, 666, 57992, 667, 57993, 668, 57994, 669,
	57995, 670, 57996, 671, 57997, 672, 57998, 673, 57999, 674,
	58000, 675, 58001, 676, 58002, 677, 58003, 678, 58004, 679,
	58005, 680, 58006, 681, 58007, 682, 58008, 683, 58009, 684,
	58010, 685, 58011, 686, 58012, 687, 58013, 688, 58014, 689,
	58015, 690, 58016, 691, 58017, 692, 58018, 693, 58019, 694,
	58020, 695, 58021, 696, 58022, 697, 58023, 698, 58024, 699,
	58025, 700, 58026, 701, 58027, 702, 58028, 703, 58029, 704,
	58030, 705, 58031, 706, 58032, 707, 58033, 708, 58034, 709,
	58035, 710, 58036, 711, 58037, 712, 58038, 713, 58039, 714,
	58040, 715, 58041, 716, 58042, 717, 58043, 718, 58044, 719,
	58045, 720, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:597
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:610
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:653
		{
			setParseTree(yylex, nil)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:659
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:665
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:670
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:674
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:680
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:684
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:690
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:696
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:702
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:706
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:711
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:715
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:721
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:725
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:731
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:741
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:792
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:798
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:823
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:827
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:846
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:850
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:856
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:860
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:871
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:877
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:884
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:890
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:898
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:902
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = getAliasedTableExprFromTableName(yyDollar[4].tableName)
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: getAliasedTableExprFromTableName(yyDollar[4].tableName), Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:932
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:936
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:956
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:970
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:980
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:990
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:1003
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1009
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1015
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1025
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1029
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1033
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1037
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1043
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1047
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:1051
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1057
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), UpdateSetExprsScope(yyDollar[5].setExprsUnion(), yyDollar[3].scopeUnion()))
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[4].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:1067
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1071
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1077
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionIsolationStr, NextTxScope), Expr: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1081
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:1085
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(TransactionReadOnlyStr, NextTxScope), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.str = RepeatableReadStr
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = ReadCommittedStr
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = ReadUncommittedStr
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = SerializableStr
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1109
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1113
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1117
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1123
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1129
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1136
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1145
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1149
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1160
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1165
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1169
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1180
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1185
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1191
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1196
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1207
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1211
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1217
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1227
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1233
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1240
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1247
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1252
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1257
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1262
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1269
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1276
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1287
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1298
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1304
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1308
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1312
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1316
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1330
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1334
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1340
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1344
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1350
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1360
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1364
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1370
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1374
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1380
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1384
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1390
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1395
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1428
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1437
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = ""
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1459
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: ColKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1463
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1480
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1490
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1495
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1500
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1535
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 205:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1539
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1545
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1549
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1553
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1559
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1563
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1568
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1572
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1577
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1583
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1589
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1594
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1599
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1605
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1628
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1632
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1636
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1640
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("sysdate"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("curdate")}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1659
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("curtime"), Fsp: yyDollar[2].integerUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1673
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1680
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1684
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1690
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1694
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1698
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1702
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1706
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1710
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1714
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1718
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1722
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1726
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1730
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1734
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1738
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1742
		{
			arg := parseBindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: arg}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1747
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1751
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1755
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = Armscii8Str
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = ASCIIStr
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Big5Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = UBinaryStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Cp1250Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Cp1251Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Cp1256Str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Cp1257Str
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Cp850Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = Cp852Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = Cp866Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = Cp932Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Dec8Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = EucjpmsStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = EuckrStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = Gb18030Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = Gb2312Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = GbkStr
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Geostd8Str
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = GreekStr
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = HebrewStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Hp8Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = Keybcs2Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = Koi8rStr
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = Koi8uStr
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = Latin1Str
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.str = Latin2Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = Latin5Str
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = Latin7Str
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = MacceStr
		}
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = MacromanStr
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = SjisStr
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.str = Swe7Str
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = Tis620Str
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = Ucs2Str
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = UjisStr
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = Utf16Str
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = Utf16leStr
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = Utf32Str
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.str = Utf8Str
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1921
		{
			yyVAL.str = Utf8mb4Str
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1925
		{
			yyVAL.str = Utf8Str
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1935
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1939
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1943
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1949
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1953
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1957
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1963
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1967
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1973
		{
			yyLOCAL = ColKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1977
		{
			yyLOCAL = ColKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1981
		{
			yyLOCAL = ColKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1985
		{
			yyLOCAL = ColKey
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2063
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2075
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = &ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2127
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2139
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2143
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2147
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2167
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2175
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2198
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.columnType = &ColumnType{Type: string(yyDollar[1].str)}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2234
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2239
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.LengthScaleOption = yyDollar[1].LengthScaleOption
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2256
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2267
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2273
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2303
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2339
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2354
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2368
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2377
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2383
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2387
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2393
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2397
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2402
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2406
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2410
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2414
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2418
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2422
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2438
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2442
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2446
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2450
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2459
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			yyVAL.str = yyDollar[2].str
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2473
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2492
		{
			yyVAL.str = "key"
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.str = yyDollar[1].str
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2521
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2531
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2535
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2541
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2545
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2551
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2555
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2561
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2567
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2571
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2575
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2579
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2583
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2588
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2592
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2598
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2604
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2610
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2614
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2618
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2623
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2627
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2633
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2639
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2645
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2649
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2653
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2657
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2661
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2670
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2674
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2680
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2693
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2698
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2702
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2708
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2716
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2722
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2744
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2768
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2772
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2800
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2824
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2828
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = ""
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2916
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2920
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2934
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2938
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2942
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2947
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2951
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2955
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2959
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2967
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2973
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2981
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3011
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3015
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3019
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3023
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3028
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3033
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3037
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3041
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3045
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3049
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3053
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3057
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3061
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3065
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3069
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3073
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3077
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3081
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3085
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3089
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3093
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3097
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3101
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3105
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3109
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3115
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3125
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3129
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3133
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3137
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3141
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3145
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3149
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3153
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3157
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3161
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3188
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName, Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3240
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3271
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3286
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3315
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3347
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3371
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3382
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3391
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3399
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3408
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3415
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3423
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3427
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3436
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3447
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3451
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3460
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3465
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3469
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3475
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3481
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3487
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3497
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3501
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3507
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3513
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3519
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3525
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3549
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3555
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3561
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3565
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3569
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3575
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3579
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3584
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3588
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3593
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3597
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3603
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3607
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3611
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3615
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3619
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3623
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3627
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3631
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3635
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3639
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3643
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3647
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3651
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3655
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3659
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3663
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3667
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3671
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3675
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3679
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3683
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3687
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3696
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3700
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3706
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3710
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3716
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3721
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3725
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3730
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3735
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3740
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3745
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3750
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3756
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3762
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3767
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3773
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3779
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3783
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3789
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3794
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3798
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3803
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3808
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3813
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3818
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3824
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3830
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3837
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3844
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3851
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3859
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3863
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3869
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3875
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3881
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3887
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3893
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3899
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3911
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3933
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3937
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = &PurgeBinaryLogs{To: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3986
		{
			yyLOCAL = &PurgeBinaryLogs{Before: string(yyDollar[5].str)}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4024
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4028
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4032
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4036
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4040
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4060
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4064
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4068
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4072
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4076
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4080
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4084
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4088
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4092
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4096
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4100
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4104
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4108
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4112
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4116
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4120
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4124
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4128
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &ShowThrottlerStatus{}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4140
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4144
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4156
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4171
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4179
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4183
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4187
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4191
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4195
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4199
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = ""
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = "extended "
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4215
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4219
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4225
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4239
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4243
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4249
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4253
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4257
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4267
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4297
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4301
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4312
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4316
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4320
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Begin{TxAccessModes: yyDollar[3].txAccessModesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4340
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4344
		{
			yyLOCAL = yyDollar[1].txAccessModesUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []TxAccessMode
//line sql.y:4350
		{
			yyLOCAL = []TxAccessMode{yyDollar[1].txAccessModeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4354
		{
			yySLICE := (*[]TxAccessMode)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].txAccessModeUnion())
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4360
		{
			yyLOCAL = WithConsistentSnapshot
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4364
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TxAccessMode
//line sql.y:4368
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4375
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4381
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4385
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4390
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4395
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4401
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4407
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4412
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4416
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4420
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4424
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4428
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4432
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4436
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4441
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4445
		{
			yyLOCAL = PlanVExplainType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4449
		{
			yyLOCAL = AllVExplainType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL VExplainType
//line sql.y:4453
		{
			yyLOCAL = QueriesVExplainType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = yyDollar[1].str
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = yyDollar[1].str
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4473
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4477
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4485
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4494
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4504
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4508
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4514
		{
			yyLOCAL = &VExplainStmt{Type: yyDollar[3].vexplainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4520
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4524
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4530
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4536
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4540
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4546
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4552
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4556
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4560
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4564
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4570
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4576
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4582
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4586
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4590
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4594
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4598
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4602
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4612
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4646
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4667
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4671
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4675
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4684
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4689
		{
			setAllowComments(yylex, true)
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4693
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4699
		{
			yyVAL.strs = nil
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4703
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4709
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4713
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4717
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4730
		{
			yyVAL.str = SQLCacheStr
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4739
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4743
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4749
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4753
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4763
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4768
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4772
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4778
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4782
		{
			yyLOCAL = &DeallocateStmt{Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4791
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4796
		{
			yyVAL.strs = nil
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4800
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4804
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4808
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4812
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = SQLCacheStr
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = DistinctStr
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = DistinctStr
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = StraightJoinHint
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4838
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4848
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4858
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4862
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4866
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4870
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4875
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4890
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4895
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4899
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4905
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4911
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4915
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4925
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4929
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4933
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4937
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4943
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4947
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4953
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4957
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4962
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4966
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4975
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4981
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4985
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4991
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4995
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5001
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5005
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5009
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:5019
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5036
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5040
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5044
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:5048
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5054
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5056
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5060
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5062
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5066
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5068
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5071
		{
			yyVAL.empty = struct{}{}
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.empty = struct{}{}
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5076
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5084
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5091
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5097
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5101
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5105
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5111
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5117
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5121
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5125
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5129
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5135
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:5139
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5149
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5153
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5159
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5169
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5178
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5184
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5188
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 991:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5194
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5198
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5202
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5206
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5211
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5215
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5219
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5223
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5244
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5248
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5252
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5256
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5260
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5264
		{
			yyLOCAL = &AssignmentExpr{Left: yyDollar[1].variableUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5268
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5274
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5286
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5296
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5300
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5304
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5308
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5320
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5324
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5328
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5338
		{
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5341
		{
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &DateAddExpr{Type: PlusIntervalRightType, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Expr: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &DateSubExpr{Type: MinusIntervalRightType, Date: yyDollar[1].exprUnion(), Unit: yyDollar[5].intervalTypeUnion(), Expr: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5417
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5421
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5425
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5429
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5433
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5437
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5441
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5445
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5449
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5453
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5457
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5461
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5465
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5469
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5473
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5477
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5481
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5485
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5493
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5497
		{
			yyLOCAL = &DateAddExpr{Type: PlusIntervalLeftType, Date: yyDollar[5].exprUnion(), Unit: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5501
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5505
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5509
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5515
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5519
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5525
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5529
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5535
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5539
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5543
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5549
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5553
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5560
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5564
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5568
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5572
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5576
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5582
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5586
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5590
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5594
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5598
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5602
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5606
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5615
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5621
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5625
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5634
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5639
		{
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5648
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5654
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5658
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5670
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5676
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5680
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5686
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5690
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5696
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5700
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5712
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5718
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5722
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5728
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5734
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5738
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1115:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.str = ""
		}
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5748
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1117:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5754
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5758
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5765
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5769
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5773
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5777
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5783
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5787
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5791
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5795
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5799
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5803
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5807
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5813
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5817
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5821
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			markBindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5828
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5834
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5838
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5852
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5917
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5921
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5925
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5929
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5949
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5953
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5957
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5961
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5989
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5993
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5997
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6001
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6005
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, Type: LeadingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6017
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, Type: TrailingTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6021
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6025
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6029
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6033
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6037
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6041
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6045
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6049
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6053
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6057
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6061
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6065
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6069
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6073
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6077
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6081
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6085
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
		{
			yyLOCAL = &GeomFormatExpr{FormatType: BinaryFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
		{
			yyLOCAL = &GeomFormatExpr{FormatType: TextFormat, Geom: yyDollar[3].exprUnion(), AxisOrderOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsEmpty, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6105
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: IsSimple, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6109
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Dimension, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: Envelope, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
		{
			yyLOCAL = &GeomPropertyFuncExpr{Property: GeometryType, Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Latitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: Longitude, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: EndPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: IsClosed, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: Length, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: NumPoints, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6157
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: PointN, Linestring: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6161
		{
			yyLOCAL = &LinestrPropertyFuncExpr{Property: StartPoint, Linestring: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6165
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6169
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: XCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6173
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &PointPropertyFuncExpr{Property: YCordinate, Point: yyDollar[3].exprUnion(), ValueToSet: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6185
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6189
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6193
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6197
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6201
		{
			yyLOCAL = &GeomFromTextExpr{Type: GeometryCollectionFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GeomFromTextExpr{Type: LineStringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiLinestringFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6233
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6237
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6241
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6245
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6249
		{
			yyLOCAL = &GeomFromTextExpr{Type: MultiPolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6253
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
		{
			yyLOCAL = &GeomFromTextExpr{Type: PointFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6265
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6269
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6273
		{
			yyLOCAL = &GeomFromTextExpr{Type: PolygonFromText, WktText: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6277
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6281
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6285
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6289
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6293
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6297
		{
			yyLOCAL = &GeomFromWKBExpr{Type: GeometryCollectionFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6301
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6305
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6309
		{
			yyLOCAL = &GeomFromWKBExpr{Type: LineStringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6313
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6317
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6321
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiLinestringFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6333
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6337
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6341
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6345
		{
			yyLOCAL = &GeomFromWKBExpr{Type: MultiPolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PointFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &GeomFromWKBExpr{Type: PolygonFromWKB, WkbBlob: yyDollar[3].exprUnion(), Srid: yyDollar[5].exprUnion(), AxisOrderOpt: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Area, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6377
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: Centroid, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6381
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: ExteriorRing, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6385
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: InteriorRingN, Polygon: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6389
		{
			yyLOCAL = &PolygonPropertyFuncExpr{Property: NumInteriorRings, Polygon: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6393
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: GeometryN, GeomColl: yyDollar[3].exprUnion(), PropertyDefArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6397
		{
			yyLOCAL = &GeomCollPropertyFuncExpr{Property: NumGeometries, GeomColl: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = &GeoHashFromLatLongExpr{Longitude: yyDollar[3].exprUnion(), Latitude: yyDollar[5].exprUnion(), MaxLength: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = &GeoHashFromPointExpr{Point: yyDollar[3].exprUnion(), MaxLength: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6409
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LatitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6413
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: LongitudeFromHash, GeoHash: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6417
		{
			yyLOCAL = &GeomFromGeoHashExpr{GeomType: PointFromHash, GeoHash: yyDollar[3].exprUnion(), SridOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6421
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6425
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6429
		{
			yyLOCAL = &GeomFromGeoJSONExpr{GeoJSON: yyDollar[3].exprUnion(), HigherDimHandlerOpt: yyDollar[5].exprUnion(), Srid: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6433
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6437
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6441
		{
			yyLOCAL = &GeoJSONFromGeomExpr{Geom: yyDollar[3].exprUnion(), MaxDecimalDigits: yyDollar[5].exprUnion(), Bitmask: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6445
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6449
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6453
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6457
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6461
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6465
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6469
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6473
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6477
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6481
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6485
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6489
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6493
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6497
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6501
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6505
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6509
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6513
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6517
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6521
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6525
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6529
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6533
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6537
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6541
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6545
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6549
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6553
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6557
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6561
		{
			yyLOCAL = &MultiPolygonExpr{PolygonParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6565
		{
			yyLOCAL = &MultiPointExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6569
		{
			yyLOCAL = &MultiLinestringExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6573
		{
			yyLOCAL = &PolygonExpr{LinestringParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6577
		{
			yyLOCAL = &LineStringExpr{PointParams: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6581
		{
			yyLOCAL = &PointExpr{XCordinate: yyDollar[3].exprUnion(), YCordinate: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6585
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6589
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6593
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6597
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6601
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6605
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6609
		{
			yyLOCAL = &DateAddExpr{Type: AdddateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6613
		{
			yyLOCAL = &DateAddExpr{Type: AdddateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6617
		{
			yyLOCAL = &DateAddExpr{Type: DateAddType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6621
		{
			yyLOCAL = &DateSubExpr{Type: DateSubType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6625
		{
			yyLOCAL = &DateSubExpr{Type: SubdateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[6].exprUnion(), Unit: yyDollar[7].intervalTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6629
		{
			yyLOCAL = &DateSubExpr{Type: SubdateType, Date: yyDollar[3].exprUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6639
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6643
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6647
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6651
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6660
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6666
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6670
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6674
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6678
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6682
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6687
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6691
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6695
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6699
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6703
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6707
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6712
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6716
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6720
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6724
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6731
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6735
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6741
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6745
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6749
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6753
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6759
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6763
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6767
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6771
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6775
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6779
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6783
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6788
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6792
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6798
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6802
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6806
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6810
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6814
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6818
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6822
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6826
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6830
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6834
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6838
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6842
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6846
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6850
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6854
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6858
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6862
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6866
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6870
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6874
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:6884
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1392:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:6888
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:6892
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6902
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6906
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6910
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6924
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6928
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6932
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6936
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6940
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6946
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6950
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6954
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6964
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6968
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6996
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7000
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7004
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7008
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7012
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7016
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7020
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7024
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7028
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:7032
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7038
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7042
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7051
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7056
		{
			yyVAL.str = string("")
		}
	case 1430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7060
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 1431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:7066
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7070
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:7076
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7081
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7085
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7091
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7095
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7099
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:7103
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7109
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7113
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7119
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7128
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7132
		{
			yyLOCAL = parseBindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7141
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7150
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:7156
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7162
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7166
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:7175
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7184
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7190
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:7196
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7200
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:7206
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1460:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7211
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7215
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:7219
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1463:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7224
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1464:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7228
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7234
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7238
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:7242
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7247
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7251
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7255
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7259
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1472:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:7263
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7270
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7274
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7278
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7282
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7288
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7292
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7296
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:7300
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7305
		{
			yyVAL.str = ""
		}
	case 1482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7309
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7313
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7317
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7322
		{
			yyVAL.str = ""
		}
	case 1486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7326
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7341
		{
			yyVAL.str = ""
		}
	case 1490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7345
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7350
		{
			yyVAL.str = "cascaded"
		}
	case 1492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7354
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7358
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7367
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7373
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7379
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:7385
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7394
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7398
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7403
		{
			yyVAL.str = ""
		}
	case 1502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7407
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7413
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:7417
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1505:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7423
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7427
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:7431
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7436
		{
			yyVAL.str = ""
		}
	case 1509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7440
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7444
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7449
		{
			yyVAL.str = ""
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7453
		{
			yyVAL.str = " header"
		}
	case 1513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7458
		{
			yyVAL.str = ""
		}
	case 1514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7462
		{
			yyVAL.str = " manifest on"
		}
	case 1515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7466
		{
			yyVAL.str = " manifest off"
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7471
		{
			yyVAL.str = ""
		}
	case 1517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7475
		{
			yyVAL.str = " overwrite on"
		}
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7479
		{
			yyVAL.str = " overwrite off"
		}
	case 1519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7485
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7490
		{
			yyVAL.str = ""
		}
	case 1521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7494
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7500
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7504
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7510
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7514
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7519
		{
			yyVAL.str = ""
		}
	case 1527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7523
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7529
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7533
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7539
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1531:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:7543
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7547
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7552
		{
			yyVAL.str = ""
		}
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7556
		{
			yyVAL.str = " optionally"
		}
	case 1535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7569
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7573
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7577
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7581
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7585
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7591
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7595
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7599
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1543:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7603
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7608
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7612
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7618
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7622
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7628
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7632
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7638
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7642
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7647
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7657
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7661
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7667
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7674
		{
			yyVAL.str = "charset"
		}
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7684
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7688
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7692
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7701
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7703
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7706
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7708
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7711
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7713
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7716
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7721
		{
			yyVAL.empty = struct{}{}
		}
	case 1574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7723
		{
			yyVAL.empty = struct{}{}
		}
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7725
		{
			yyVAL.empty = struct{}{}
		}
	case 1576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7729
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7734
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7738
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7743
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7745
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7749
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7755
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7759
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7766
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7772
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7776
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7782
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7786
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7793
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8424
		{
		}
	case 2197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8429
		{
		}
	case 2198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8433
		{
			skipToEnd(yylex)
		}
	case 2199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:8438
		{
			skipToEnd(yylex)
		}
	case 2200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8442
		{
			skipToEnd(yylex)
		}
	case 2201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:8446
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
